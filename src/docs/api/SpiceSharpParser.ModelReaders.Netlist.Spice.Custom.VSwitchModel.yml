### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel
  id: VSwitchModel
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: VSwitchModel
  nameWithType: VSwitchModel
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Custom/VSwitchModel.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: VSwitchModel
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Custom/VSwitchModel.cs
    startLine: 4
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  syntax:
    content: 'public class VSwitchModel : Model, ICloneable, ICloneable<Entity>'
    content.vb: >-
      Public Class VSwitchModel
          Inherits Model
          Implements ICloneable, ICloneable(Of Entity)
  inheritance:
  - System.Object
  - SpiceSharp.Circuits.Entity
  - SpiceSharp.Components.Model
  implements:
  - SpiceSharp.ICloneable
  - SpiceSharp.ICloneable{SpiceSharp.Circuits.Entity}
  inheritedMembers:
  - SpiceSharp.Circuits.Entity.RegisterBehaviorFactory(System.Type,SpiceSharp.Behaviors.BehaviorFactoryDictionary)
  - SpiceSharp.Circuits.Entity.SetPrincipalParameter``1({T})
  - SpiceSharp.Circuits.Entity.SetParameter(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  - SpiceSharp.Circuits.Entity.SetParameter``1(System.String,{T},System.Collections.Generic.IEqualityComparer{System.String})
  - SpiceSharp.Circuits.Entity.GetPrincipalParameter``1
  - SpiceSharp.Circuits.Entity.GetParameter``1(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  - SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type[],SpiceSharp.Simulations.Simulation,SpiceSharp.Circuits.EntityCollection)
  - SpiceSharp.Circuits.Entity.BindBehavior(SpiceSharp.Behaviors.IBehavior,SpiceSharp.Simulations.Simulation)
  - SpiceSharp.Circuits.Entity.Clone
  - SpiceSharp.Circuits.Entity.Clone(SpiceSharp.Circuits.InstanceData)
  - SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#Clone
  - SpiceSharp.Circuits.Entity.CopyFrom(SpiceSharp.Circuits.Entity)
  - SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#CopyFrom(SpiceSharp.ICloneable)
  - SpiceSharp.Circuits.Entity.ParameterSets
  - SpiceSharp.Circuits.Entity.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.#ctor(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel
  langs:
  - csharp
  - vb
  name: VSwitchModel(String)
  nameWithType: VSwitchModel.VSwitchModel(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.VSwitchModel(System.String)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Custom/VSwitchModel.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Custom/VSwitchModel.cs
    startLine: 6
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  syntax:
    content: public VSwitchModel(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharp.Circuits.Entity
  commentId: T:SpiceSharp.Circuits.Entity
  parent: SpiceSharp.Circuits
  isExternal: true
  name: Entity
  nameWithType: Entity
  fullName: SpiceSharp.Circuits.Entity
- uid: SpiceSharp.Components.Model
  commentId: T:SpiceSharp.Components.Model
  parent: SpiceSharp.Components
  isExternal: true
  name: Model
  nameWithType: Model
  fullName: SpiceSharp.Components.Model
- uid: SpiceSharp.ICloneable
  commentId: T:SpiceSharp.ICloneable
  parent: SpiceSharp
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: SpiceSharp.ICloneable
- uid: SpiceSharp.ICloneable{SpiceSharp.Circuits.Entity}
  commentId: T:SpiceSharp.ICloneable{SpiceSharp.Circuits.Entity}
  parent: SpiceSharp
  definition: SpiceSharp.ICloneable`1
  name: ICloneable<Entity>
  nameWithType: ICloneable<Entity>
  fullName: SpiceSharp.ICloneable<SpiceSharp.Circuits.Entity>
  nameWithType.vb: ICloneable(Of Entity)
  fullName.vb: SpiceSharp.ICloneable(Of SpiceSharp.Circuits.Entity)
  name.vb: ICloneable(Of Entity)
  spec.csharp:
  - uid: SpiceSharp.ICloneable`1
    name: ICloneable
    nameWithType: ICloneable
    fullName: SpiceSharp.ICloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharp.ICloneable`1
    name: ICloneable
    nameWithType: ICloneable
    fullName: SpiceSharp.ICloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.RegisterBehaviorFactory(System.Type,SpiceSharp.Behaviors.BehaviorFactoryDictionary)
  commentId: M:SpiceSharp.Circuits.Entity.RegisterBehaviorFactory(System.Type,SpiceSharp.Behaviors.BehaviorFactoryDictionary)
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: RegisterBehaviorFactory(Type, BehaviorFactoryDictionary)
  nameWithType: Entity.RegisterBehaviorFactory(Type, BehaviorFactoryDictionary)
  fullName: SpiceSharp.Circuits.Entity.RegisterBehaviorFactory(System.Type, SpiceSharp.Behaviors.BehaviorFactoryDictionary)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.RegisterBehaviorFactory(System.Type,SpiceSharp.Behaviors.BehaviorFactoryDictionary)
    name: RegisterBehaviorFactory
    nameWithType: Entity.RegisterBehaviorFactory
    fullName: SpiceSharp.Circuits.Entity.RegisterBehaviorFactory
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Behaviors.BehaviorFactoryDictionary
    name: BehaviorFactoryDictionary
    nameWithType: BehaviorFactoryDictionary
    fullName: SpiceSharp.Behaviors.BehaviorFactoryDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.RegisterBehaviorFactory(System.Type,SpiceSharp.Behaviors.BehaviorFactoryDictionary)
    name: RegisterBehaviorFactory
    nameWithType: Entity.RegisterBehaviorFactory
    fullName: SpiceSharp.Circuits.Entity.RegisterBehaviorFactory
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Behaviors.BehaviorFactoryDictionary
    name: BehaviorFactoryDictionary
    nameWithType: BehaviorFactoryDictionary
    fullName: SpiceSharp.Behaviors.BehaviorFactoryDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1({T})
  commentId: M:SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
  parent: SpiceSharp.Circuits.Entity
  definition: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
  name: SetPrincipalParameter<T>(T)
  nameWithType: Entity.SetPrincipalParameter<T>(T)
  fullName: SpiceSharp.Circuits.Entity.SetPrincipalParameter<T>(T)
  nameWithType.vb: Entity.SetPrincipalParameter(Of T)(T)
  fullName.vb: SpiceSharp.Circuits.Entity.SetPrincipalParameter(Of T)(T)
  name.vb: SetPrincipalParameter(Of T)(T)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
    name: SetPrincipalParameter<T>
    nameWithType: Entity.SetPrincipalParameter<T>
    fullName: SpiceSharp.Circuits.Entity.SetPrincipalParameter<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
    name: SetPrincipalParameter(Of T)
    nameWithType: Entity.SetPrincipalParameter(Of T)
    fullName: SpiceSharp.Circuits.Entity.SetPrincipalParameter(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SetParameter(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  commentId: M:SpiceSharp.Circuits.Entity.SetParameter(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: SetParameter(String, IEqualityComparer<String>)
  nameWithType: Entity.SetParameter(String, IEqualityComparer<String>)
  fullName: SpiceSharp.Circuits.Entity.SetParameter(System.String, System.Collections.Generic.IEqualityComparer<System.String>)
  nameWithType.vb: Entity.SetParameter(String, IEqualityComparer(Of String))
  fullName.vb: SpiceSharp.Circuits.Entity.SetParameter(System.String, System.Collections.Generic.IEqualityComparer(Of System.String))
  name.vb: SetParameter(String, IEqualityComparer(Of String))
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SetParameter(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: SetParameter
    nameWithType: Entity.SetParameter
    fullName: SpiceSharp.Circuits.Entity.SetParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SetParameter(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: SetParameter
    nameWithType: Entity.SetParameter
    fullName: SpiceSharp.Circuits.Entity.SetParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,{T},System.Collections.Generic.IEqualityComparer{System.String})
  commentId: M:SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
  parent: SpiceSharp.Circuits.Entity
  definition: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
  name: SetParameter<T>(String, T, IEqualityComparer<String>)
  nameWithType: Entity.SetParameter<T>(String, T, IEqualityComparer<String>)
  fullName: SpiceSharp.Circuits.Entity.SetParameter<T>(System.String, T, System.Collections.Generic.IEqualityComparer<System.String>)
  nameWithType.vb: Entity.SetParameter(Of T)(String, T, IEqualityComparer(Of String))
  fullName.vb: SpiceSharp.Circuits.Entity.SetParameter(Of T)(System.String, T, System.Collections.Generic.IEqualityComparer(Of System.String))
  name.vb: SetParameter(Of T)(String, T, IEqualityComparer(Of String))
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
    name: SetParameter<T>
    nameWithType: Entity.SetParameter<T>
    fullName: SpiceSharp.Circuits.Entity.SetParameter<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
    name: SetParameter(Of T)
    nameWithType: Entity.SetParameter(Of T)
    fullName: SpiceSharp.Circuits.Entity.SetParameter(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.GetPrincipalParameter``1
  commentId: M:SpiceSharp.Circuits.Entity.GetPrincipalParameter``1
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: GetPrincipalParameter<T>()
  nameWithType: Entity.GetPrincipalParameter<T>()
  fullName: SpiceSharp.Circuits.Entity.GetPrincipalParameter<T>()
  nameWithType.vb: Entity.GetPrincipalParameter(Of T)()
  fullName.vb: SpiceSharp.Circuits.Entity.GetPrincipalParameter(Of T)()
  name.vb: GetPrincipalParameter(Of T)()
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.GetPrincipalParameter``1
    name: GetPrincipalParameter<T>
    nameWithType: Entity.GetPrincipalParameter<T>
    fullName: SpiceSharp.Circuits.Entity.GetPrincipalParameter<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.GetPrincipalParameter``1
    name: GetPrincipalParameter(Of T)
    nameWithType: Entity.GetPrincipalParameter(Of T)
    fullName: SpiceSharp.Circuits.Entity.GetPrincipalParameter(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.GetParameter``1(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  commentId: M:SpiceSharp.Circuits.Entity.GetParameter``1(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: GetParameter<T>(String, IEqualityComparer<String>)
  nameWithType: Entity.GetParameter<T>(String, IEqualityComparer<String>)
  fullName: SpiceSharp.Circuits.Entity.GetParameter<T>(System.String, System.Collections.Generic.IEqualityComparer<System.String>)
  nameWithType.vb: Entity.GetParameter(Of T)(String, IEqualityComparer(Of String))
  fullName.vb: SpiceSharp.Circuits.Entity.GetParameter(Of T)(System.String, System.Collections.Generic.IEqualityComparer(Of System.String))
  name.vb: GetParameter(Of T)(String, IEqualityComparer(Of String))
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.GetParameter``1(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: GetParameter<T>
    nameWithType: Entity.GetParameter<T>
    fullName: SpiceSharp.Circuits.Entity.GetParameter<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.GetParameter``1(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: GetParameter(Of T)
    nameWithType: Entity.GetParameter(Of T)
    fullName: SpiceSharp.Circuits.Entity.GetParameter(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type[],SpiceSharp.Simulations.Simulation,SpiceSharp.Circuits.EntityCollection)
  commentId: M:SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type[],SpiceSharp.Simulations.Simulation,SpiceSharp.Circuits.EntityCollection)
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: CreateBehaviors(Type[], Simulation, EntityCollection)
  nameWithType: Entity.CreateBehaviors(Type[], Simulation, EntityCollection)
  fullName: SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type[], SpiceSharp.Simulations.Simulation, SpiceSharp.Circuits.EntityCollection)
  nameWithType.vb: Entity.CreateBehaviors(Type(), Simulation, EntityCollection)
  fullName.vb: SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type(), SpiceSharp.Simulations.Simulation, SpiceSharp.Circuits.EntityCollection)
  name.vb: CreateBehaviors(Type(), Simulation, EntityCollection)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type[],SpiceSharp.Simulations.Simulation,SpiceSharp.Circuits.EntityCollection)
    name: CreateBehaviors
    nameWithType: Entity.CreateBehaviors
    fullName: SpiceSharp.Circuits.Entity.CreateBehaviors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.Simulation
    name: Simulation
    nameWithType: Simulation
    fullName: SpiceSharp.Simulations.Simulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Circuits.EntityCollection
    name: EntityCollection
    nameWithType: EntityCollection
    fullName: SpiceSharp.Circuits.EntityCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.CreateBehaviors(System.Type[],SpiceSharp.Simulations.Simulation,SpiceSharp.Circuits.EntityCollection)
    name: CreateBehaviors
    nameWithType: Entity.CreateBehaviors
    fullName: SpiceSharp.Circuits.Entity.CreateBehaviors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.Simulation
    name: Simulation
    nameWithType: Simulation
    fullName: SpiceSharp.Simulations.Simulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Circuits.EntityCollection
    name: EntityCollection
    nameWithType: EntityCollection
    fullName: SpiceSharp.Circuits.EntityCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.BindBehavior(SpiceSharp.Behaviors.IBehavior,SpiceSharp.Simulations.Simulation)
  commentId: M:SpiceSharp.Circuits.Entity.BindBehavior(SpiceSharp.Behaviors.IBehavior,SpiceSharp.Simulations.Simulation)
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: BindBehavior(IBehavior, Simulation)
  nameWithType: Entity.BindBehavior(IBehavior, Simulation)
  fullName: SpiceSharp.Circuits.Entity.BindBehavior(SpiceSharp.Behaviors.IBehavior, SpiceSharp.Simulations.Simulation)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.BindBehavior(SpiceSharp.Behaviors.IBehavior,SpiceSharp.Simulations.Simulation)
    name: BindBehavior
    nameWithType: Entity.BindBehavior
    fullName: SpiceSharp.Circuits.Entity.BindBehavior
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: SpiceSharp.Behaviors.IBehavior
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.Simulation
    name: Simulation
    nameWithType: Simulation
    fullName: SpiceSharp.Simulations.Simulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.BindBehavior(SpiceSharp.Behaviors.IBehavior,SpiceSharp.Simulations.Simulation)
    name: BindBehavior
    nameWithType: Entity.BindBehavior
    fullName: SpiceSharp.Circuits.Entity.BindBehavior
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: SpiceSharp.Behaviors.IBehavior
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.Simulation
    name: Simulation
    nameWithType: Simulation
    fullName: SpiceSharp.Simulations.Simulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.Clone
  commentId: M:SpiceSharp.Circuits.Entity.Clone
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: Clone()
  nameWithType: Entity.Clone()
  fullName: SpiceSharp.Circuits.Entity.Clone()
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.Clone
    name: Clone
    nameWithType: Entity.Clone
    fullName: SpiceSharp.Circuits.Entity.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.Clone
    name: Clone
    nameWithType: Entity.Clone
    fullName: SpiceSharp.Circuits.Entity.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.Clone(SpiceSharp.Circuits.InstanceData)
  commentId: M:SpiceSharp.Circuits.Entity.Clone(SpiceSharp.Circuits.InstanceData)
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: Clone(InstanceData)
  nameWithType: Entity.Clone(InstanceData)
  fullName: SpiceSharp.Circuits.Entity.Clone(SpiceSharp.Circuits.InstanceData)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.Clone(SpiceSharp.Circuits.InstanceData)
    name: Clone
    nameWithType: Entity.Clone
    fullName: SpiceSharp.Circuits.Entity.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.InstanceData
    name: InstanceData
    nameWithType: InstanceData
    fullName: SpiceSharp.Circuits.InstanceData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.Clone(SpiceSharp.Circuits.InstanceData)
    name: Clone
    nameWithType: Entity.Clone
    fullName: SpiceSharp.Circuits.Entity.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.InstanceData
    name: InstanceData
    nameWithType: InstanceData
    fullName: SpiceSharp.Circuits.InstanceData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#Clone
  commentId: M:SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#Clone
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: ICloneable.Clone()
  nameWithType: Entity.ICloneable.Clone()
  fullName: SpiceSharp.Circuits.Entity.SpiceSharp.ICloneable.Clone()
  nameWithType.vb: Entity.SpiceSharp.ICloneable.Clone()
  name.vb: SpiceSharp.ICloneable.Clone()
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#Clone
    name: ICloneable.Clone
    nameWithType: Entity.ICloneable.Clone
    fullName: SpiceSharp.Circuits.Entity.SpiceSharp.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#Clone
    name: SpiceSharp.ICloneable.Clone
    nameWithType: Entity.SpiceSharp.ICloneable.Clone
    fullName: SpiceSharp.Circuits.Entity.SpiceSharp.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.CopyFrom(SpiceSharp.Circuits.Entity)
  commentId: M:SpiceSharp.Circuits.Entity.CopyFrom(SpiceSharp.Circuits.Entity)
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: CopyFrom(Entity)
  nameWithType: Entity.CopyFrom(Entity)
  fullName: SpiceSharp.Circuits.Entity.CopyFrom(SpiceSharp.Circuits.Entity)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.CopyFrom(SpiceSharp.Circuits.Entity)
    name: CopyFrom
    nameWithType: Entity.CopyFrom
    fullName: SpiceSharp.Circuits.Entity.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.CopyFrom(SpiceSharp.Circuits.Entity)
    name: CopyFrom
    nameWithType: Entity.CopyFrom
    fullName: SpiceSharp.Circuits.Entity.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#CopyFrom(SpiceSharp.ICloneable)
  commentId: M:SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#CopyFrom(SpiceSharp.ICloneable)
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: ICloneable.CopyFrom(ICloneable)
  nameWithType: Entity.ICloneable.CopyFrom(ICloneable)
  fullName: SpiceSharp.Circuits.Entity.SpiceSharp.ICloneable.CopyFrom(SpiceSharp.ICloneable)
  nameWithType.vb: Entity.SpiceSharp.ICloneable.CopyFrom(ICloneable)
  name.vb: SpiceSharp.ICloneable.CopyFrom(ICloneable)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#CopyFrom(SpiceSharp.ICloneable)
    name: ICloneable.CopyFrom
    nameWithType: Entity.ICloneable.CopyFrom
    fullName: SpiceSharp.Circuits.Entity.SpiceSharp.ICloneable.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.ICloneable
    name: ICloneable
    nameWithType: ICloneable
    fullName: SpiceSharp.ICloneable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SpiceSharp#ICloneable#CopyFrom(SpiceSharp.ICloneable)
    name: SpiceSharp.ICloneable.CopyFrom
    nameWithType: Entity.SpiceSharp.ICloneable.CopyFrom
    fullName: SpiceSharp.Circuits.Entity.SpiceSharp.ICloneable.CopyFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.ICloneable
    name: ICloneable
    nameWithType: ICloneable
    fullName: SpiceSharp.ICloneable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.ParameterSets
  commentId: P:SpiceSharp.Circuits.Entity.ParameterSets
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: ParameterSets
  nameWithType: Entity.ParameterSets
  fullName: SpiceSharp.Circuits.Entity.ParameterSets
- uid: SpiceSharp.Circuits.Entity.Name
  commentId: P:SpiceSharp.Circuits.Entity.Name
  parent: SpiceSharp.Circuits.Entity
  isExternal: true
  name: Name
  nameWithType: Entity.Name
  fullName: SpiceSharp.Circuits.Entity.Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharp.Circuits
  commentId: N:SpiceSharp.Circuits
  isExternal: true
  name: SpiceSharp.Circuits
  nameWithType: SpiceSharp.Circuits
  fullName: SpiceSharp.Circuits
- uid: SpiceSharp.Components
  commentId: N:SpiceSharp.Components
  isExternal: true
  name: SpiceSharp.Components
  nameWithType: SpiceSharp.Components
  fullName: SpiceSharp.Components
- uid: SpiceSharp
  commentId: N:SpiceSharp
  isExternal: true
  name: SpiceSharp
  nameWithType: SpiceSharp
  fullName: SpiceSharp
- uid: SpiceSharp.ICloneable`1
  commentId: T:SpiceSharp.ICloneable`1
  isExternal: true
  name: ICloneable<T>
  nameWithType: ICloneable<T>
  fullName: SpiceSharp.ICloneable<T>
  nameWithType.vb: ICloneable(Of T)
  fullName.vb: SpiceSharp.ICloneable(Of T)
  name.vb: ICloneable(Of T)
  spec.csharp:
  - uid: SpiceSharp.ICloneable`1
    name: ICloneable
    nameWithType: ICloneable
    fullName: SpiceSharp.ICloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharp.ICloneable`1
    name: ICloneable
    nameWithType: ICloneable
    fullName: SpiceSharp.ICloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
  commentId: M:SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
  isExternal: true
  name: SetPrincipalParameter<T>(T)
  nameWithType: Entity.SetPrincipalParameter<T>(T)
  fullName: SpiceSharp.Circuits.Entity.SetPrincipalParameter<T>(T)
  nameWithType.vb: Entity.SetPrincipalParameter(Of T)(T)
  fullName.vb: SpiceSharp.Circuits.Entity.SetPrincipalParameter(Of T)(T)
  name.vb: SetPrincipalParameter(Of T)(T)
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
    name: SetPrincipalParameter<T>
    nameWithType: Entity.SetPrincipalParameter<T>
    fullName: SpiceSharp.Circuits.Entity.SetPrincipalParameter<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SetPrincipalParameter``1(``0)
    name: SetPrincipalParameter(Of T)
    nameWithType: Entity.SetPrincipalParameter(Of T)
    fullName: SpiceSharp.Circuits.Entity.SetPrincipalParameter(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
  commentId: M:SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
  isExternal: true
  name: SetParameter<T>(String, T, IEqualityComparer<String>)
  nameWithType: Entity.SetParameter<T>(String, T, IEqualityComparer<String>)
  fullName: SpiceSharp.Circuits.Entity.SetParameter<T>(System.String, T, System.Collections.Generic.IEqualityComparer<System.String>)
  nameWithType.vb: Entity.SetParameter(Of T)(String, T, IEqualityComparer(Of String))
  fullName.vb: SpiceSharp.Circuits.Entity.SetParameter(Of T)(System.String, T, System.Collections.Generic.IEqualityComparer(Of System.String))
  name.vb: SetParameter(Of T)(String, T, IEqualityComparer(Of String))
  spec.csharp:
  - uid: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
    name: SetParameter<T>
    nameWithType: Entity.SetParameter<T>
    fullName: SpiceSharp.Circuits.Entity.SetParameter<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharp.Circuits.Entity.SetParameter``1(System.String,``0,System.Collections.Generic.IEqualityComparer{System.String})
    name: SetParameter(Of T)
    nameWithType: Entity.SetParameter(Of T)
    fullName: SpiceSharp.Circuits.Entity.SetParameter(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.#ctor
  name: VSwitchModel
  nameWithType: VSwitchModel.VSwitchModel
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Custom.VSwitchModel.VSwitchModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
