### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader
  id: SpiceStatementsReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers
  langs:
  - csharp
  - vb
  name: SpiceStatementsReader
  nameWithType: SpiceStatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SpiceStatementsReader
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
    startLine: 12
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice
  syntax:
    content: 'public class SpiceStatementsReader : ISpiceStatementsReader'
    content.vb: >-
      Public Class SpiceStatementsReader
          Implements ISpiceStatementsReader
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})
  id: '#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator},SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader
  langs:
  - csharp
  - vb
  name: SpiceStatementsReader(IMapper<BaseControl>, IMapper<IModelGenerator>, IMapper<IComponentGenerator>)
  nameWithType: SpiceStatementsReader.SpiceStatementsReader(IMapper<BaseControl>, IMapper<IModelGenerator>, IMapper<IComponentGenerator>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.SpiceStatementsReader(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl>, SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator>, SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator>)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice
  syntax:
    content: public SpiceStatementsReader(IMapper<BaseControl> controlMapper, IMapper<IModelGenerator> modelMapper, IMapper<IComponentGenerator> entityMapper)
    parameters:
    - id: controlMapper
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl}
    - id: modelMapper
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator}
    - id: entityMapper
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
    content.vb: Public Sub New(controlMapper As IMapper(Of BaseControl), modelMapper As IMapper(Of IModelGenerator), entityMapper As IMapper(Of IComponentGenerator))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.#ctor*
  nameWithType.vb: SpiceStatementsReader.SpiceStatementsReader(IMapper(Of BaseControl), IMapper(Of IModelGenerator), IMapper(Of IComponentGenerator))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.SpiceStatementsReader(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl), SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator), SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator))
  name.vb: SpiceStatementsReader(IMapper(Of BaseControl), IMapper(Of IModelGenerator), IMapper(Of IComponentGenerator))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers
  id: Readers
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader
  langs:
  - csharp
  - vb
  name: Readers
  nameWithType: SpiceStatementsReader.Readers
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Readers
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
    startLine: 35
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice
  summary: "\nGets the readers.\n"
  example: []
  syntax:
    content: protected Dictionary<Type, IStatementReader> Readers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Type,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader}
    content.vb: Protected ReadOnly Property Readers As Dictionary(Of Type, IStatementReader)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  id: Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader
  langs:
  - csharp
  - vb
  name: Read(Statement, ICircuitContext)
  nameWithType: SpiceStatementsReader.Read(Statement, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Read
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/SpiceStatementsReader.cs
    startLine: 42
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice
  summary: "\nReads a statement.\n"
  example: []
  syntax:
    content: public void Read(Statement statement, ICircuitContext circuitContext)
    parameters:
    - id: statement
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
      description: A statement.
    - id: circuitContext
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
      description: A reading context.
    content.vb: Public Sub Read(statement As Statement, circuitContext As ICircuitContext)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: ISpiceStatementsReader
  nameWithType: ISpiceStatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.#ctor
  name: SpiceStatementsReader
  nameWithType: SpiceStatementsReader.SpiceStatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.SpiceStatementsReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<BaseControl>
  nameWithType: IMapper<BaseControl>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl>
  nameWithType.vb: IMapper(Of BaseControl)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl)
  name.vb: IMapper(Of BaseControl)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl
    name: BaseControl
    nameWithType: BaseControl
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl
    name: BaseControl
    nameWithType: BaseControl
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.BaseControl
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<IModelGenerator>
  nameWithType: IMapper<IModelGenerator>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator>
  nameWithType.vb: IMapper(Of IModelGenerator)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator)
  name.vb: IMapper(Of IModelGenerator)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator
    name: IModelGenerator
    nameWithType: IModelGenerator
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator
    name: IModelGenerator
    nameWithType: IModelGenerator
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IModelGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<IComponentGenerator>
  nameWithType: IMapper<IComponentGenerator>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator>
  nameWithType.vb: IMapper(Of IComponentGenerator)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator)
  name.vb: IMapper(Of IComponentGenerator)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
    name: IComponentGenerator
    nameWithType: IComponentGenerator
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
    name: IComponentGenerator
    nameWithType: IComponentGenerator
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<TElement>
  nameWithType: IMapper<TElement>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<TElement>
  nameWithType.vb: IMapper(Of TElement)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of TElement)
  name.vb: IMapper(Of TElement)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers
  name: Readers
  nameWithType: SpiceStatementsReader.Readers
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Readers
- uid: System.Collections.Generic.Dictionary{System.Type,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, IStatementReader>
  nameWithType: Dictionary<Type, IStatementReader>
  fullName: System.Collections.Generic.Dictionary<System.Type, SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader>
  nameWithType.vb: Dictionary(Of Type, IStatementReader)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader)
  name.vb: Dictionary(Of Type, IStatementReader)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
    name: IStatementReader
    nameWithType: IStatementReader
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
    name: IStatementReader
    nameWithType: IStatementReader
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read
  name: Read
  nameWithType: SpiceStatementsReader.Read
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceStatementsReader.Read
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
  name: Read(Statement, ICircuitContext)
  nameWithType: ISpiceStatementsReader.Read(Statement, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: ISpiceStatementsReader.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: ISpiceStatementsReader.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Statement
  nameWithType: Statement
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitContext
  nameWithType: ICircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
