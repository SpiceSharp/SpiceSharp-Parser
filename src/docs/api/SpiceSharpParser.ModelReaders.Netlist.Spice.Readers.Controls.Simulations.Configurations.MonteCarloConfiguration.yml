### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  id: MonteCarloConfiguration
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType
  langs:
  - csharp
  - vb
  name: MonteCarloConfiguration
  nameWithType: MonteCarloConfiguration
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: MonteCarloConfiguration
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 4
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public class MonteCarloConfiguration
    content.vb: Public Class MonteCarloConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled
  id: Enabled
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: MonteCarloConfiguration.Enabled
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Enabled
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 6
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs
  id: Runs
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  langs:
  - csharp
  - vb
  name: Runs
  nameWithType: MonteCarloConfiguration.Runs
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Runs
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 8
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public int? Runs { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Runs As Integer?
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType
  id: SimulationType
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  langs:
  - csharp
  - vb
  name: SimulationType
  nameWithType: MonteCarloConfiguration.SimulationType
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationType
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 10
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public string SimulationType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SimulationType As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable
  id: OutputVariable
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  langs:
  - csharp
  - vb
  name: OutputVariable
  nameWithType: MonteCarloConfiguration.OutputVariable
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: OutputVariable
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 12
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public Parameter OutputVariable { get; set; }
    parameters: []
    return:
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    content.vb: Public Property OutputVariable As Parameter
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function
  id: Function
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  langs:
  - csharp
  - vb
  name: Function
  nameWithType: MonteCarloConfiguration.Function
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Function
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public string Function { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Function As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed
  id: Seed
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration
  langs:
  - csharp
  - vb
  name: Seed
  nameWithType: MonteCarloConfiguration.Seed
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Seed
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/Configurations/MonteCarloConfiguration.cs
    startLine: 16
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  syntax:
    content: public int? Seed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Seed As Integer?
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled
  name: Enabled
  nameWithType: MonteCarloConfiguration.Enabled
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs
  name: Runs
  nameWithType: MonteCarloConfiguration.Runs
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Runs
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType
  name: SimulationType
  nameWithType: MonteCarloConfiguration.SimulationType
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.SimulationType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable
  name: OutputVariable
  nameWithType: MonteCarloConfiguration.OutputVariable
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.OutputVariable
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Parameter
  nameWithType: Parameter
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function
  name: Function
  nameWithType: MonteCarloConfiguration.Function
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Function
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed
  name: Seed
  nameWithType: MonteCarloConfiguration.Seed
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Configurations.MonteCarloConfiguration.Seed
