### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser
  id: SingleSpiceNetlistParser
  parent: SpiceSharpParser.Parsers.Netlist.Spice
  children:
  - SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.#ctor(SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings)
  - SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  - SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings
  langs:
  - csharp
  - vb
  name: SingleSpiceNetlistParser
  nameWithType: SingleSpiceNetlistParser
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SingleSpiceNetlistParser
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice
  syntax:
    content: 'public class SingleSpiceNetlistParser : ISingleSpiceNetlistParser'
    content.vb: >-
      Public Class SingleSpiceNetlistParser
          Implements ISingleSpiceNetlistParser
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.#ctor(SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings)
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.#ctor(SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings)
  id: '#ctor(SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings)'
  parent: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser
  langs:
  - csharp
  - vb
  name: SingleSpiceNetlistParser(SingleSpiceNetlistParserSettings)
  nameWithType: SingleSpiceNetlistParser.SingleSpiceNetlistParser(SingleSpiceNetlistParserSettings)
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.SingleSpiceNetlistParser(SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice
  syntax:
    content: public SingleSpiceNetlistParser(SingleSpiceNetlistParserSettings settings)
    parameters:
    - id: settings
      type: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
    content.vb: Public Sub New(settings As SingleSpiceNetlistParserSettings)
  overload: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings
  commentId: P:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings
  id: Settings
  parent: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: SingleSpiceNetlistParser.Settings
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Settings
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
    startLine: 17
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice
  summary: "\nGets or sets the parser settings.\n"
  example: []
  syntax:
    content: public SingleSpiceNetlistParserSettings Settings { get; set; }
    parameters: []
    return:
      type: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
    content.vb: Public Property Settings As SingleSpiceNetlistParserSettings
  overload: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings*
  implements:
  - SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Settings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  id: Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  parent: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser
  langs:
  - csharp
  - vb
  name: Parse(SpiceToken[])
  nameWithType: SingleSpiceNetlistParser.Parse(SpiceToken[])
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Parse
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/SingleSpiceNetlistParser.cs
    startLine: 26
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice
  summary: "\nParses a SPICE netlist and returns a SPICE model.\n"
  example: []
  syntax:
    content: public SpiceNetlist Parse(SpiceToken[] tokens)
    parameters:
    - id: tokens
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[]
      description: SPICE netlist tokens.
    return:
      type: SpiceSharpParser.Models.Netlist.Spice.SpiceNetlist
      description: "\nA SPICE netlist model.\n"
    content.vb: Public Function Parse(tokens As SpiceToken()) As SpiceNetlist
  overload: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse*
  implements:
  - SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  nameWithType.vb: SingleSpiceNetlistParser.Parse(SpiceToken())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken())
  name.vb: Parse(SpiceToken())
references:
- uid: SpiceSharpParser.Parsers.Netlist.Spice
  commentId: N:SpiceSharpParser.Parsers.Netlist.Spice
  name: SpiceSharpParser.Parsers.Netlist.Spice
  nameWithType: SpiceSharpParser.Parsers.Netlist.Spice
  fullName: SpiceSharpParser.Parsers.Netlist.Spice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  parent: SpiceSharpParser.Parsers.Netlist.Spice
  name: ISingleSpiceNetlistParser
  nameWithType: ISingleSpiceNetlistParser
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.#ctor*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.#ctor
  name: SingleSpiceNetlistParser
  nameWithType: SingleSpiceNetlistParser.SingleSpiceNetlistParser
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.SingleSpiceNetlistParser
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
  parent: SpiceSharpParser.Parsers.Netlist.Spice
  name: SingleSpiceNetlistParserSettings
  nameWithType: SingleSpiceNetlistParserSettings
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings
  name: Settings
  nameWithType: SingleSpiceNetlistParser.Settings
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Settings
- uid: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Settings
  commentId: P:SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Settings
  parent: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  name: Settings
  nameWithType: ISingleSpiceNetlistParser.Settings
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Settings
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse
  name: Parse
  nameWithType: SingleSpiceNetlistParser.Parse
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParser.Parse
- uid: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  parent: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  name: Parse(SpiceToken[])
  nameWithType: ISingleSpiceNetlistParser.Parse(SpiceToken[])
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
  nameWithType.vb: ISingleSpiceNetlistParser.Parse(SpiceToken())
  fullName.vb: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken())
  name.vb: Parse(SpiceToken())
  spec.csharp:
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
    name: Parse
    nameWithType: ISingleSpiceNetlistParser.Parse
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    name: SpiceToken
    nameWithType: SpiceToken
    fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[])
    name: Parse
    nameWithType: ISingleSpiceNetlistParser.Parse
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    name: SpiceToken
    nameWithType: SpiceToken
    fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[]
  isExternal: true
  name: SpiceToken[]
  nameWithType: SpiceToken[]
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[]
  nameWithType.vb: SpiceToken()
  fullName.vb: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken()
  name.vb: SpiceToken()
  spec.csharp:
  - uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    name: SpiceToken
    nameWithType: SpiceToken
    fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    name: SpiceToken
    nameWithType: SpiceToken
    fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SpiceSharpParser.Models.Netlist.Spice.SpiceNetlist
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.SpiceNetlist
  parent: SpiceSharpParser.Models.Netlist.Spice
  name: SpiceNetlist
  nameWithType: SpiceNetlist
  fullName: SpiceSharpParser.Models.Netlist.Spice.SpiceNetlist
- uid: SpiceSharpParser.Models.Netlist.Spice
  commentId: N:SpiceSharpParser.Models.Netlist.Spice
  name: SpiceSharpParser.Models.Netlist.Spice
  nameWithType: SpiceSharpParser.Models.Netlist.Spice
  fullName: SpiceSharpParser.Models.Netlist.Spice
