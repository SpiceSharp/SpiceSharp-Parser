### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  id: SimulationsUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply(SpiceSharp.Simulations.BaseSimulation)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates
  langs:
  - csharp
  - vb
  name: SimulationsUpdates
  nameWithType: SimulationsUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationsUpdates
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 6
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public class SimulationsUpdates
    content.vb: Public Class SimulationsUpdates
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts)
  id: '#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: SimulationsUpdates(SimulationEvaluationContexts)
  nameWithType: SimulationsUpdates.SimulationsUpdates(SimulationEvaluationContexts)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SimulationsUpdates(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 8
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public SimulationsUpdates(SimulationEvaluationContexts contexts)
    parameters:
    - id: contexts
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
    content.vb: Public Sub New(contexts As SimulationEvaluationContexts)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts
  id: Contexts
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: Contexts
  nameWithType: SimulationsUpdates.Contexts
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Contexts
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 15
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: protected SimulationEvaluationContexts Contexts { get; set; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
    content.vb: Protected Property Contexts As SimulationEvaluationContexts
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates
  id: SpecificUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: SpecificUpdates
  nameWithType: SimulationsUpdates.SpecificUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SpecificUpdates
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 17
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: protected ConcurrentDictionary<BaseSimulation, SimulationUpdates> SpecificUpdates { get; set; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates}
    content.vb: Protected Property SpecificUpdates As ConcurrentDictionary(Of BaseSimulation, SimulationUpdates)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates
  id: CommonUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: CommonUpdates
  nameWithType: SimulationsUpdates.CommonUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CommonUpdates
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 19
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: protected SimulationUpdates CommonUpdates { get; set; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
    content.vb: Protected Property CommonUpdates As SimulationUpdates
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply(SpiceSharp.Simulations.BaseSimulation)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply(SpiceSharp.Simulations.BaseSimulation)
  id: Apply(SpiceSharp.Simulations.BaseSimulation)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: Apply(BaseSimulation)
  nameWithType: SimulationsUpdates.Apply(BaseSimulation)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply(SpiceSharp.Simulations.BaseSimulation)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Apply
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 21
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public void Apply(BaseSimulation simulation)
    parameters:
    - id: simulation
      type: SpiceSharp.Simulations.BaseSimulation
    content.vb: Public Sub Apply(simulation As BaseSimulation)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  id: AddBeforeSetup(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: AddBeforeSetup(BaseSimulation, Action<BaseSimulation, SimulationEvaluationContexts>)
  nameWithType: SimulationsUpdates.AddBeforeSetup(BaseSimulation, Action<BaseSimulation, SimulationEvaluationContexts>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(SpiceSharp.Simulations.BaseSimulation, System.Action<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AddBeforeSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 76
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public void AddBeforeSetup(BaseSimulation simulation, Action<BaseSimulation, SimulationEvaluationContexts> update)
    parameters:
    - id: simulation
      type: SpiceSharp.Simulations.BaseSimulation
    - id: update
      type: System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
    content.vb: Public Sub AddBeforeSetup(simulation As BaseSimulation, update As Action(Of BaseSimulation, SimulationEvaluationContexts))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup*
  nameWithType.vb: SimulationsUpdates.AddBeforeSetup(BaseSimulation, Action(Of BaseSimulation, SimulationEvaluationContexts))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(SpiceSharp.Simulations.BaseSimulation, System.Action(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts))
  name.vb: AddBeforeSetup(BaseSimulation, Action(Of BaseSimulation, SimulationEvaluationContexts))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  id: AddBeforeTemperature(SpiceSharp.Simulations.BaseSimulation,System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: AddBeforeTemperature(BaseSimulation, Action<BaseSimulation, SimulationEvaluationContexts>)
  nameWithType: SimulationsUpdates.AddBeforeTemperature(BaseSimulation, Action<BaseSimulation, SimulationEvaluationContexts>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(SpiceSharp.Simulations.BaseSimulation, System.Action<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AddBeforeTemperature
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 91
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public void AddBeforeTemperature(BaseSimulation simulation, Action<BaseSimulation, SimulationEvaluationContexts> update)
    parameters:
    - id: simulation
      type: SpiceSharp.Simulations.BaseSimulation
    - id: update
      type: System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
    content.vb: Public Sub AddBeforeTemperature(simulation As BaseSimulation, update As Action(Of BaseSimulation, SimulationEvaluationContexts))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature*
  nameWithType.vb: SimulationsUpdates.AddBeforeTemperature(BaseSimulation, Action(Of BaseSimulation, SimulationEvaluationContexts))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(SpiceSharp.Simulations.BaseSimulation, System.Action(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts))
  name.vb: AddBeforeTemperature(BaseSimulation, Action(Of BaseSimulation, SimulationEvaluationContexts))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  id: AddBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: AddBeforeSetup(Action<BaseSimulation, SimulationEvaluationContexts>)
  nameWithType: SimulationsUpdates.AddBeforeSetup(Action<BaseSimulation, SimulationEvaluationContexts>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(System.Action<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AddBeforeSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 106
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public void AddBeforeSetup(Action<BaseSimulation, SimulationEvaluationContexts> update)
    parameters:
    - id: update
      type: System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
    content.vb: Public Sub AddBeforeSetup(update As Action(Of BaseSimulation, SimulationEvaluationContexts))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup*
  nameWithType.vb: SimulationsUpdates.AddBeforeSetup(Action(Of BaseSimulation, SimulationEvaluationContexts))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup(System.Action(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts))
  name.vb: AddBeforeSetup(Action(Of BaseSimulation, SimulationEvaluationContexts))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  id: AddBeforeLoad(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: AddBeforeLoad(Action<BaseSimulation, SimulationEvaluationContexts>)
  nameWithType: SimulationsUpdates.AddBeforeLoad(Action<BaseSimulation, SimulationEvaluationContexts>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad(System.Action<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AddBeforeLoad
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 116
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public void AddBeforeLoad(Action<BaseSimulation, SimulationEvaluationContexts> update)
    parameters:
    - id: update
      type: System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
    content.vb: Public Sub AddBeforeLoad(update As Action(Of BaseSimulation, SimulationEvaluationContexts))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad*
  nameWithType.vb: SimulationsUpdates.AddBeforeLoad(Action(Of BaseSimulation, SimulationEvaluationContexts))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad(System.Action(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts))
  name.vb: AddBeforeLoad(Action(Of BaseSimulation, SimulationEvaluationContexts))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  id: AddBeforeTemperature(System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  langs:
  - csharp
  - vb
  name: AddBeforeTemperature(Action<BaseSimulation, SimulationEvaluationContexts>)
  nameWithType: SimulationsUpdates.AddBeforeTemperature(Action<BaseSimulation, SimulationEvaluationContexts>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(System.Action<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AddBeforeTemperature
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationsUpdates.cs
    startLine: 126
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public void AddBeforeTemperature(Action<BaseSimulation, SimulationEvaluationContexts> update)
    parameters:
    - id: update
      type: System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
    content.vb: Public Sub AddBeforeTemperature(update As Action(Of BaseSimulation, SimulationEvaluationContexts))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature*
  nameWithType.vb: SimulationsUpdates.AddBeforeTemperature(Action(Of BaseSimulation, SimulationEvaluationContexts))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature(System.Action(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts))
  name.vb: AddBeforeTemperature(Action(Of BaseSimulation, SimulationEvaluationContexts))
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.#ctor
  name: SimulationsUpdates
  nameWithType: SimulationsUpdates.SimulationsUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SimulationsUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SimulationEvaluationContexts
  nameWithType: SimulationEvaluationContexts
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts
  name: Contexts
  nameWithType: SimulationsUpdates.Contexts
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Contexts
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates
  name: SpecificUpdates
  nameWithType: SimulationsUpdates.SpecificUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.SpecificUpdates
- uid: System.Collections.Concurrent.ConcurrentDictionary{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<BaseSimulation, SimulationUpdates>
  nameWithType: ConcurrentDictionary<BaseSimulation, SimulationUpdates>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates>
  nameWithType.vb: ConcurrentDictionary(Of BaseSimulation, SimulationUpdates)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates)
  name.vb: ConcurrentDictionary(Of BaseSimulation, SimulationUpdates)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
    name: SimulationUpdates
    nameWithType: SimulationUpdates
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
    name: SimulationUpdates
    nameWithType: SimulationUpdates
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates
  name: CommonUpdates
  nameWithType: SimulationsUpdates.CommonUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.CommonUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  name: SimulationUpdates
  nameWithType: SimulationUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply
  name: Apply
  nameWithType: SimulationsUpdates.Apply
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.Apply
- uid: SpiceSharp.Simulations.BaseSimulation
  commentId: T:SpiceSharp.Simulations.BaseSimulation
  parent: SpiceSharp.Simulations
  isExternal: true
  name: BaseSimulation
  nameWithType: BaseSimulation
  fullName: SpiceSharp.Simulations.BaseSimulation
- uid: SpiceSharp.Simulations
  commentId: N:SpiceSharp.Simulations
  isExternal: true
  name: SpiceSharp.Simulations
  nameWithType: SpiceSharp.Simulations
  fullName: SpiceSharp.Simulations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup
  name: AddBeforeSetup
  nameWithType: SimulationsUpdates.AddBeforeSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeSetup
- uid: System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
  commentId: T:System.Action{SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts}
  parent: System
  definition: System.Action`2
  name: Action<BaseSimulation, SimulationEvaluationContexts>
  nameWithType: Action<BaseSimulation, SimulationEvaluationContexts>
  fullName: System.Action<SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts>
  nameWithType.vb: Action(Of BaseSimulation, SimulationEvaluationContexts)
  fullName.vb: System.Action(Of SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts)
  name.vb: Action(Of BaseSimulation, SimulationEvaluationContexts)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
    name: SimulationEvaluationContexts
    nameWithType: SimulationEvaluationContexts
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
    name: SimulationEvaluationContexts
    nameWithType: SimulationEvaluationContexts
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationEvaluationContexts
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature
  name: AddBeforeTemperature
  nameWithType: SimulationsUpdates.AddBeforeTemperature
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeTemperature
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad
  name: AddBeforeLoad
  nameWithType: SimulationsUpdates.AddBeforeLoad
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates.AddBeforeLoad
