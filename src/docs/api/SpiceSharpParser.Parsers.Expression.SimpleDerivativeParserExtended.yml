### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  commentId: T:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  id: SimpleDerivativeParserExtended
  parent: SpiceSharpParser.Parsers.Expression
  children:
  - SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  - SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions
  - SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  - SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  langs:
  - csharp
  - vb
  name: SimpleDerivativeParserExtended
  nameWithType: SimpleDerivativeParserExtended
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimpleDerivativeParserExtended
    path: ../SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
    startLine: 11
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Expression
  syntax:
    content: 'public class SimpleDerivativeParserExtended : SimpleDerivativeParser, ISpiceDerivativeParser<double>, IParser<Derivatives<Func<double>>>'
    content.vb: >-
      Public Class SimpleDerivativeParserExtended
          Inherits SimpleDerivativeParser
          Implements ISpiceDerivativeParser(Of Double), IParser(Of Derivatives(Of Func(Of Double)))
  inheritance:
  - System.Object
  - SpiceSharpBehavioral.Parsers.ShuntingYard
  - SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  - SpiceSharpBehavioral.Parsers.SpiceParser
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  implements:
  - SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser{System.Double}
  - SpiceSharpBehavioral.Parsers.IParser{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}}
  inheritedMembers:
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse(System.String)
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator(SpiceSharpBehavioral.Operator)
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue(System.Double)
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty(SpiceSharpBehavioral.Parsers.SpiceProperty)
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable(System.String)
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}},System.Int32,System.Func{System.Double})
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.VariableFound
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.FunctionFound
  - SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.SpicePropertyFound
  - SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
  - SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
  - SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble(System.Double@)
  - SpiceSharpBehavioral.Parsers.SpiceParser.TrimNames
  - SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
  - SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator(SpiceSharpBehavioral.Operator)
  - SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar(System.Int32)
  - SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
  - SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil(System.Char)
  - SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression(System.String)
  - SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator(SpiceSharpBehavioral.Operator)
  - SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
  - SpiceSharpBehavioral.Parsers.ShuntingYard.Input
  - SpiceSharpBehavioral.Parsers.ShuntingYard.Count
  - SpiceSharpBehavioral.Parsers.ShuntingYard.Index
  - SpiceSharpBehavioral.Parsers.ShuntingYard.ExpectInfixPostfix
  - SpiceSharpBehavioral.Parsers.ShuntingYard.Top
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  commentId: P:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  id: DefaultFunctionsCaseSensitive
  parent: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  langs:
  - csharp
  - vb
  name: DefaultFunctionsCaseSensitive
  nameWithType: SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: DefaultFunctionsCaseSensitive
    path: ../SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
    startLine: 52
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Expression
  summary: "\nThe default functions.\n"
  example: []
  syntax:
    content: protected static ConcurrentDictionary<string, SimpleDerivativeParserHelper.DoubleDerivativesFunction> DefaultFunctionsCaseSensitive { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction}
    content.vb: Protected Shared ReadOnly Property DefaultFunctionsCaseSensitive As ConcurrentDictionary(Of String, SimpleDerivativeParserHelper.DoubleDerivativesFunction)
  overload: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  commentId: P:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  id: DefaultFunctionsCaseInSensitive
  parent: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  langs:
  - csharp
  - vb
  name: DefaultFunctionsCaseInSensitive
  nameWithType: SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: DefaultFunctionsCaseInSensitive
    path: ../SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
    startLine: 57
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Expression
  syntax:
    content: protected static ConcurrentDictionary<string, SimpleDerivativeParserHelper.DoubleDerivativesFunction> DefaultFunctionsCaseInSensitive { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction}
    content.vb: Protected Shared ReadOnly Property DefaultFunctionsCaseInSensitive As ConcurrentDictionary(Of String, SimpleDerivativeParserHelper.DoubleDerivativesFunction)
  overload: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions
  commentId: P:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions
  id: DefaultFunctions
  parent: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  langs:
  - csharp
  - vb
  name: DefaultFunctions
  nameWithType: SimpleDerivativeParserExtended.DefaultFunctions
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: DefaultFunctions
    path: ../SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
    startLine: 62
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Expression
  syntax:
    content: protected ConcurrentDictionary<string, SimpleDerivativeParserHelper.DoubleDerivativesFunction> DefaultFunctions { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction}
    content.vb: Protected ReadOnly Property DefaultFunctions As ConcurrentDictionary(Of String, SimpleDerivativeParserHelper.DoubleDerivativesFunction)
  overload: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  commentId: M:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  id: '#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)'
  parent: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended
  langs:
  - csharp
  - vb
  name: SimpleDerivativeParserExtended(ISpiceNetlistCaseSensitivitySettings)
  nameWithType: SimpleDerivativeParserExtended.SimpleDerivativeParserExtended(ISpiceNetlistCaseSensitivitySettings)
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.SimpleDerivativeParserExtended(SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Parsers/Expression/SimpleDerivativeParserExtended.cs
    startLine: 67
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Expression
  syntax:
    content: public SimpleDerivativeParserExtended(ISpiceNetlistCaseSensitivitySettings caseSensitivitySettings)
    parameters:
    - id: caseSensitivitySettings
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
    content.vb: Public Sub New(caseSensitivitySettings As ISpiceNetlistCaseSensitivitySettings)
  overload: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.Parsers.Expression
  commentId: N:SpiceSharpParser.Parsers.Expression
  name: SpiceSharpParser.Parsers.Expression
  nameWithType: SpiceSharpParser.Parsers.Expression
  fullName: SpiceSharpParser.Parsers.Expression
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard
  commentId: T:SpiceSharpBehavioral.Parsers.ShuntingYard
  parent: SpiceSharpBehavioral.Parsers
  isExternal: true
  name: ShuntingYard
  nameWithType: ShuntingYard
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard
- uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  commentId: T:SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  parent: SpiceSharpBehavioral.Parsers
  isExternal: true
  name: StandardArithmeticParser
  nameWithType: StandardArithmeticParser
  fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
- uid: SpiceSharpBehavioral.Parsers.SpiceParser
  commentId: T:SpiceSharpBehavioral.Parsers.SpiceParser
  parent: SpiceSharpBehavioral.Parsers
  isExternal: true
  name: SpiceParser
  nameWithType: SpiceParser
  fullName: SpiceSharpBehavioral.Parsers.SpiceParser
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  commentId: T:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  parent: SpiceSharpBehavioral.Parsers
  isExternal: true
  name: SimpleDerivativeParser
  nameWithType: SimpleDerivativeParser
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
- uid: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser{System.Double}
  commentId: T:SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser{System.Double}
  parent: SpiceSharpBehavioral.Parsers
  definition: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
  name: ISpiceDerivativeParser<Double>
  nameWithType: ISpiceDerivativeParser<Double>
  fullName: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser<System.Double>
  nameWithType.vb: ISpiceDerivativeParser(Of Double)
  fullName.vb: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser(Of System.Double)
  name.vb: ISpiceDerivativeParser(Of Double)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
    name: ISpiceDerivativeParser
    nameWithType: ISpiceDerivativeParser
    fullName: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
    name: ISpiceDerivativeParser
    nameWithType: ISpiceDerivativeParser
    fullName: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.IParser{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}}
  commentId: T:SpiceSharpBehavioral.Parsers.IParser{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}}
  parent: SpiceSharpBehavioral.Parsers
  definition: SpiceSharpBehavioral.Parsers.IParser`1
  name: IParser<Derivatives<Func<Double>>>
  nameWithType: IParser<Derivatives<Func<Double>>>
  fullName: SpiceSharpBehavioral.Parsers.IParser<SpiceSharpBehavioral.Parsers.Derivatives<System.Func<System.Double>>>
  nameWithType.vb: IParser(Of Derivatives(Of Func(Of Double)))
  fullName.vb: SpiceSharpBehavioral.Parsers.IParser(Of SpiceSharpBehavioral.Parsers.Derivatives(Of System.Func(Of System.Double)))
  name.vb: IParser(Of Derivatives(Of Func(Of Double)))
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: SpiceSharpBehavioral.Parsers.IParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: SpiceSharpBehavioral.Parsers.IParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse(System.String)
  commentId: M:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse(System.String)
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: Parse(String)
  nameWithType: SimpleDerivativeParser.Parse(String)
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse(System.String)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse(System.String)
    name: Parse
    nameWithType: SimpleDerivativeParser.Parse
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse(System.String)
    name: Parse
    nameWithType: SimpleDerivativeParser.Parse
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.Parse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator(SpiceSharpBehavioral.Operator)
  commentId: M:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator(SpiceSharpBehavioral.Operator)
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: ExecuteOperator(Operator)
  nameWithType: SimpleDerivativeParser.ExecuteOperator(Operator)
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator(SpiceSharpBehavioral.Operator)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator(SpiceSharpBehavioral.Operator)
    name: ExecuteOperator
    nameWithType: SimpleDerivativeParser.ExecuteOperator
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Operator
    name: Operator
    nameWithType: Operator
    fullName: SpiceSharpBehavioral.Operator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator(SpiceSharpBehavioral.Operator)
    name: ExecuteOperator
    nameWithType: SimpleDerivativeParser.ExecuteOperator
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ExecuteOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Operator
    name: Operator
    nameWithType: Operator
    fullName: SpiceSharpBehavioral.Operator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue(System.Double)
  commentId: M:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue(System.Double)
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: PushValue(Double)
  nameWithType: SimpleDerivativeParser.PushValue(Double)
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue(System.Double)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue(System.Double)
    name: PushValue
    nameWithType: SimpleDerivativeParser.PushValue
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue(System.Double)
    name: PushValue
    nameWithType: SimpleDerivativeParser.PushValue
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty(SpiceSharpBehavioral.Parsers.SpiceProperty)
  commentId: M:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty(SpiceSharpBehavioral.Parsers.SpiceProperty)
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: PushSpiceProperty(SpiceProperty)
  nameWithType: SimpleDerivativeParser.PushSpiceProperty(SpiceProperty)
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty(SpiceSharpBehavioral.Parsers.SpiceProperty)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty(SpiceSharpBehavioral.Parsers.SpiceProperty)
    name: PushSpiceProperty
    nameWithType: SimpleDerivativeParser.PushSpiceProperty
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Parsers.SpiceProperty
    name: SpiceProperty
    nameWithType: SpiceProperty
    fullName: SpiceSharpBehavioral.Parsers.SpiceProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty(SpiceSharpBehavioral.Parsers.SpiceProperty)
    name: PushSpiceProperty
    nameWithType: SimpleDerivativeParser.PushSpiceProperty
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushSpiceProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Parsers.SpiceProperty
    name: SpiceProperty
    nameWithType: SpiceProperty
    fullName: SpiceSharpBehavioral.Parsers.SpiceProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable(System.String)
  commentId: M:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable(System.String)
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: PushVariable(String)
  nameWithType: SimpleDerivativeParser.PushVariable(String)
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable(System.String)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable(System.String)
    name: PushVariable
    nameWithType: SimpleDerivativeParser.PushVariable
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable(System.String)
    name: PushVariable
    nameWithType: SimpleDerivativeParser.PushVariable
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.PushVariable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}},System.Int32,System.Func{System.Double})
  commentId: M:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}},System.Int32,System.Func{System.Double})
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: ApplyVariable(SpicePropertyFoundEventArgs<Derivatives<Func<Double>>>, Int32, Func<Double>)
  nameWithType: SimpleDerivativeParser.ApplyVariable(SpicePropertyFoundEventArgs<Derivatives<Func<Double>>>, Int32, Func<Double>)
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs<SpiceSharpBehavioral.Parsers.Derivatives<System.Func<System.Double>>>, System.Int32, System.Func<System.Double>)
  nameWithType.vb: SimpleDerivativeParser.ApplyVariable(SpicePropertyFoundEventArgs(Of Derivatives(Of Func(Of Double))), Int32, Func(Of Double))
  fullName.vb: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs(Of SpiceSharpBehavioral.Parsers.Derivatives(Of System.Func(Of System.Double))), System.Int32, System.Func(Of System.Double))
  name.vb: ApplyVariable(SpicePropertyFoundEventArgs(Of Derivatives(Of Func(Of Double))), Int32, Func(Of Double))
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}},System.Int32,System.Func{System.Double})
    name: ApplyVariable
    nameWithType: SimpleDerivativeParser.ApplyVariable
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs`1
    name: SpicePropertyFoundEventArgs
    nameWithType: SpicePropertyFoundEventArgs
    fullName: SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable(SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs{SpiceSharpBehavioral.Parsers.Derivatives{System.Func{System.Double}}},System.Int32,System.Func{System.Double})
    name: ApplyVariable
    nameWithType: SimpleDerivativeParser.ApplyVariable
    fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.ApplyVariable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs`1
    name: SpicePropertyFoundEventArgs
    nameWithType: SpicePropertyFoundEventArgs
    fullName: SpiceSharpBehavioral.Parsers.SpicePropertyFoundEventArgs
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.VariableFound
  commentId: E:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.VariableFound
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: VariableFound
  nameWithType: SimpleDerivativeParser.VariableFound
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.VariableFound
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.FunctionFound
  commentId: E:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.FunctionFound
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: FunctionFound
  nameWithType: SimpleDerivativeParser.FunctionFound
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.FunctionFound
- uid: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.SpicePropertyFound
  commentId: E:SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.SpicePropertyFound
  parent: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser
  isExternal: true
  name: SpicePropertyFound
  nameWithType: SimpleDerivativeParser.SpicePropertyFound
  fullName: SpiceSharpBehavioral.Parsers.SimpleDerivativeParser.SpicePropertyFound
- uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
  commentId: M:SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
  parent: SpiceSharpBehavioral.Parsers.SpiceParser
  isExternal: true
  name: ParseUnaryOperator()
  nameWithType: SpiceParser.ParseUnaryOperator()
  fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator()
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
    name: ParseUnaryOperator
    nameWithType: SpiceParser.ParseUnaryOperator
    fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
    name: ParseUnaryOperator
    nameWithType: SpiceParser.ParseUnaryOperator
    fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseUnaryOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
  commentId: M:SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
  parent: SpiceSharpBehavioral.Parsers.SpiceParser
  isExternal: true
  name: ParseValue()
  nameWithType: SpiceParser.ParseValue()
  fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue()
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
    name: ParseValue
    nameWithType: SpiceParser.ParseValue
    fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
    name: ParseValue
    nameWithType: SpiceParser.ParseValue
    fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble(System.Double@)
  commentId: M:SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble(System.Double@)
  parent: SpiceSharpBehavioral.Parsers.SpiceParser
  isExternal: true
  name: ParseDouble(Double)
  nameWithType: SpiceParser.ParseDouble(Double)
  fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble(System.Double)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble(System.Double@)
    name: ParseDouble
    nameWithType: SpiceParser.ParseDouble
    fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble(System.Double@)
    name: ParseDouble
    nameWithType: SpiceParser.ParseDouble
    fullName: SpiceSharpBehavioral.Parsers.SpiceParser.ParseDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.SpiceParser.TrimNames
  commentId: P:SpiceSharpBehavioral.Parsers.SpiceParser.TrimNames
  parent: SpiceSharpBehavioral.Parsers.SpiceParser
  isExternal: true
  name: TrimNames
  nameWithType: SpiceParser.TrimNames
  fullName: SpiceSharpBehavioral.Parsers.SpiceParser.TrimNames
- uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
  commentId: M:SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
  parent: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  isExternal: true
  name: ParseBinaryOperator()
  nameWithType: StandardArithmeticParser.ParseBinaryOperator()
  fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator()
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
    name: ParseBinaryOperator
    nameWithType: StandardArithmeticParser.ParseBinaryOperator
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
    name: ParseBinaryOperator
    nameWithType: StandardArithmeticParser.ParseBinaryOperator
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.ParseBinaryOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator(SpiceSharpBehavioral.Operator)
  commentId: M:SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator(SpiceSharpBehavioral.Operator)
  parent: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  isExternal: true
  name: PrepareOperator(Operator)
  nameWithType: StandardArithmeticParser.PrepareOperator(Operator)
  fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator(SpiceSharpBehavioral.Operator)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator(SpiceSharpBehavioral.Operator)
    name: PrepareOperator
    nameWithType: StandardArithmeticParser.PrepareOperator
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Operator
    name: Operator
    nameWithType: Operator
    fullName: SpiceSharpBehavioral.Operator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator(SpiceSharpBehavioral.Operator)
    name: PrepareOperator
    nameWithType: StandardArithmeticParser.PrepareOperator
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.PrepareOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Operator
    name: Operator
    nameWithType: Operator
    fullName: SpiceSharpBehavioral.Operator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar(System.Int32)
  commentId: M:SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar(System.Int32)
  parent: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  isExternal: true
  name: NextChar(Int32)
  nameWithType: StandardArithmeticParser.NextChar(Int32)
  fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar(System.Int32)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar(System.Int32)
    name: NextChar
    nameWithType: StandardArithmeticParser.NextChar
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar(System.Int32)
    name: NextChar
    nameWithType: StandardArithmeticParser.NextChar
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
  commentId: M:SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
  parent: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  isExternal: true
  name: NextWord()
  nameWithType: StandardArithmeticParser.NextWord()
  fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord()
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
    name: NextWord
    nameWithType: StandardArithmeticParser.NextWord
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
    name: NextWord
    nameWithType: StandardArithmeticParser.NextWord
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextWord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil(System.Char)
  commentId: M:SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil(System.Char)
  parent: SpiceSharpBehavioral.Parsers.StandardArithmeticParser
  isExternal: true
  name: NextUntil(Char)
  nameWithType: StandardArithmeticParser.NextUntil(Char)
  fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil(System.Char)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil(System.Char)
    name: NextUntil
    nameWithType: StandardArithmeticParser.NextUntil
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil(System.Char)
    name: NextUntil
    nameWithType: StandardArithmeticParser.NextUntil
    fullName: SpiceSharpBehavioral.Parsers.StandardArithmeticParser.NextUntil
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression(System.String)
  commentId: M:SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression(System.String)
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: ParseExpression(String)
  nameWithType: ShuntingYard.ParseExpression(String)
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression(System.String)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression(System.String)
    name: ParseExpression
    nameWithType: ShuntingYard.ParseExpression
    fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression(System.String)
    name: ParseExpression
    nameWithType: ShuntingYard.ParseExpression
    fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.ParseExpression
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator(SpiceSharpBehavioral.Operator)
  commentId: M:SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator(SpiceSharpBehavioral.Operator)
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: PushOperator(Operator)
  nameWithType: ShuntingYard.PushOperator(Operator)
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator(SpiceSharpBehavioral.Operator)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator(SpiceSharpBehavioral.Operator)
    name: PushOperator
    nameWithType: ShuntingYard.PushOperator
    fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Operator
    name: Operator
    nameWithType: Operator
    fullName: SpiceSharpBehavioral.Operator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator(SpiceSharpBehavioral.Operator)
    name: PushOperator
    nameWithType: ShuntingYard.PushOperator
    fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.PushOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpBehavioral.Operator
    name: Operator
    nameWithType: Operator
    fullName: SpiceSharpBehavioral.Operator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
  commentId: M:SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: PopAndExecuteOperator()
  nameWithType: ShuntingYard.PopAndExecuteOperator()
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator()
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
    name: PopAndExecuteOperator
    nameWithType: ShuntingYard.PopAndExecuteOperator
    fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
    name: PopAndExecuteOperator
    nameWithType: ShuntingYard.PopAndExecuteOperator
    fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.PopAndExecuteOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.Input
  commentId: P:SpiceSharpBehavioral.Parsers.ShuntingYard.Input
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: Input
  nameWithType: ShuntingYard.Input
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.Input
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.Count
  commentId: P:SpiceSharpBehavioral.Parsers.ShuntingYard.Count
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: Count
  nameWithType: ShuntingYard.Count
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.Count
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.Index
  commentId: P:SpiceSharpBehavioral.Parsers.ShuntingYard.Index
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: Index
  nameWithType: ShuntingYard.Index
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.Index
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.ExpectInfixPostfix
  commentId: P:SpiceSharpBehavioral.Parsers.ShuntingYard.ExpectInfixPostfix
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: ExpectInfixPostfix
  nameWithType: ShuntingYard.ExpectInfixPostfix
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.ExpectInfixPostfix
- uid: SpiceSharpBehavioral.Parsers.ShuntingYard.Top
  commentId: P:SpiceSharpBehavioral.Parsers.ShuntingYard.Top
  parent: SpiceSharpBehavioral.Parsers.ShuntingYard
  isExternal: true
  name: Top
  nameWithType: ShuntingYard.Top
  fullName: SpiceSharpBehavioral.Parsers.ShuntingYard.Top
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpBehavioral.Parsers
  commentId: N:SpiceSharpBehavioral.Parsers
  isExternal: true
  name: SpiceSharpBehavioral.Parsers
  nameWithType: SpiceSharpBehavioral.Parsers
  fullName: SpiceSharpBehavioral.Parsers
- uid: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
  commentId: T:SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
  isExternal: true
  name: ISpiceDerivativeParser<T>
  nameWithType: ISpiceDerivativeParser<T>
  fullName: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser<T>
  nameWithType.vb: ISpiceDerivativeParser(Of T)
  fullName.vb: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser(Of T)
  name.vb: ISpiceDerivativeParser(Of T)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
    name: ISpiceDerivativeParser
    nameWithType: ISpiceDerivativeParser
    fullName: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser`1
    name: ISpiceDerivativeParser
    nameWithType: ISpiceDerivativeParser
    fullName: SpiceSharpBehavioral.Parsers.ISpiceDerivativeParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers.IParser`1
  commentId: T:SpiceSharpBehavioral.Parsers.IParser`1
  isExternal: true
  name: IParser<T>
  nameWithType: IParser<T>
  fullName: SpiceSharpBehavioral.Parsers.IParser<T>
  nameWithType.vb: IParser(Of T)
  fullName.vb: SpiceSharpBehavioral.Parsers.IParser(Of T)
  name.vb: IParser(Of T)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: SpiceSharpBehavioral.Parsers.IParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: SpiceSharpBehavioral.Parsers.IParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive*
  commentId: Overload:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  name: DefaultFunctionsCaseSensitive
  nameWithType: SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseSensitive
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.String,SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.String,SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<String, SimpleDerivativeParserHelper.DoubleDerivativesFunction>
  nameWithType: ConcurrentDictionary<String, SimpleDerivativeParserHelper.DoubleDerivativesFunction>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.String, SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction>
  nameWithType.vb: ConcurrentDictionary(Of String, SimpleDerivativeParserHelper.DoubleDerivativesFunction)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.String, SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction)
  name.vb: ConcurrentDictionary(Of String, SimpleDerivativeParserHelper.DoubleDerivativesFunction)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction
    name: SimpleDerivativeParserHelper.DoubleDerivativesFunction
    nameWithType: SimpleDerivativeParserHelper.DoubleDerivativesFunction
    fullName: SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction
    name: SimpleDerivativeParserHelper.DoubleDerivativesFunction
    nameWithType: SimpleDerivativeParserHelper.DoubleDerivativesFunction
    fullName: SpiceSharpBehavioral.Parsers.Helper.SimpleDerivativeParserHelper.DoubleDerivativesFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive*
  commentId: Overload:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  name: DefaultFunctionsCaseInSensitive
  nameWithType: SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctionsCaseInSensitive
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions*
  commentId: Overload:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions
  name: DefaultFunctions
  nameWithType: SimpleDerivativeParserExtended.DefaultFunctions
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.DefaultFunctions
- uid: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.#ctor*
  commentId: Overload:SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.#ctor
  name: SimpleDerivativeParserExtended
  nameWithType: SimpleDerivativeParserExtended.SimpleDerivativeParserExtended
  fullName: SpiceSharpParser.Parsers.Expression.SimpleDerivativeParserExtended.SimpleDerivativeParserExtended
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: ISpiceNetlistCaseSensitivitySettings
  nameWithType: ISpiceNetlistCaseSensitivitySettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
