### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  id: INameGenerator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator(System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName(System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName(System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName(System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal(System.String)
  langs:
  - csharp
  - vb
  name: INameGenerator
  nameWithType: INameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  type: Interface
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: INameGenerator
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public interface INameGenerator
    content.vb: Public Interface INameGenerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals
  id: Globals
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: Globals
  nameWithType: INameGenerator.Globals
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Globals
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: IEnumerable<string> Globals { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property Globals As IEnumerable(Of String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName(System.String)
  id: ParseNodeName(System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: ParseNodeName(String)
  nameWithType: INameGenerator.ParseNodeName(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParseNodeName
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: string ParseNodeName(string nodePath)
    parameters:
    - id: nodePath
      type: System.String
    return:
      type: System.String
    content.vb: Function ParseNodeName(nodePath As String) As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName*
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName(System.String)
  id: GenerateObjectName(System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: GenerateObjectName(String)
  nameWithType: INameGenerator.GenerateObjectName(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GenerateObjectName
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 11
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: string GenerateObjectName(string entityName)
    parameters:
    - id: entityName
      type: System.String
    return:
      type: System.String
    content.vb: Function GenerateObjectName(entityName As String) As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName*
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator(System.String)
  id: CreateChildNameGenerator(System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: CreateChildNameGenerator(String)
  nameWithType: INameGenerator.CreateChildNameGenerator(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateChildNameGenerator
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 13
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: IObjectNameGenerator CreateChildNameGenerator(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.IObjectNameGenerator
    content.vb: Function CreateChildNameGenerator(name As String) As IObjectNameGenerator
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator*
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName(System.String)
  id: GenerateNodeName(System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: GenerateNodeName(String)
  nameWithType: INameGenerator.GenerateNodeName(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GenerateNodeName
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 15
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: string GenerateNodeName(string nodeName)
    parameters:
    - id: nodeName
      type: System.String
    return:
      type: System.String
    content.vb: Function GenerateNodeName(nodeName As String) As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName*
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator)
  id: AddChild(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: AddChild(INodeNameGenerator)
  nameWithType: INameGenerator.AddChild(INodeNameGenerator)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AddChild
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 17
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: void AddChild(INodeNameGenerator nodeNameGenerator)
    parameters:
    - id: nodeNameGenerator
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator
    content.vb: Sub AddChild(nodeNameGenerator As INodeNameGenerator)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild*
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal(System.String)
  id: SetGlobal(System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  langs:
  - csharp
  - vb
  name: SetGlobal(String)
  nameWithType: INameGenerator.SetGlobal(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetGlobal
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/INameGenerator.cs
    startLine: 19
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: void SetGlobal(string spImage)
    parameters:
    - id: spImage
      type: System.String
    content.vb: Sub SetGlobal(spImage As String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal*
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals
  name: Globals
  nameWithType: INameGenerator.Globals
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.Globals
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName
  name: ParseNodeName
  nameWithType: INameGenerator.ParseNodeName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.ParseNodeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName
  name: GenerateObjectName
  nameWithType: INameGenerator.GenerateObjectName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateObjectName
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator
  name: CreateChildNameGenerator
  nameWithType: INameGenerator.CreateChildNameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.CreateChildNameGenerator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.IObjectNameGenerator
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.IObjectNameGenerator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
  name: IObjectNameGenerator
  nameWithType: IObjectNameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.IObjectNameGenerator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName
  name: GenerateNodeName
  nameWithType: INameGenerator.GenerateNodeName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.GenerateNodeName
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild
  name: AddChild
  nameWithType: INameGenerator.AddChild
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.AddChild
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names
  name: INodeNameGenerator
  nameWithType: INodeNameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Names.INodeNameGenerator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal
  name: SetGlobal
  nameWithType: INameGenerator.SetGlobal
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator.SetGlobal
