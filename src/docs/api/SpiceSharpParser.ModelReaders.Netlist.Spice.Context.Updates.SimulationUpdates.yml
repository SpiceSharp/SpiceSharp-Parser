### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  id: SimulationUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.#ctor
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation
  langs:
  - csharp
  - vb
  name: SimulationUpdates
  nameWithType: SimulationUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationUpdates
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public class SimulationUpdates
    content.vb: Public Class SimulationUpdates
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.#ctor
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.#ctor
  id: '#ctor'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  langs:
  - csharp
  - vb
  name: SimulationUpdates()
  nameWithType: SimulationUpdates.SimulationUpdates()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.SimulationUpdates()
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public SimulationUpdates()
    content.vb: Public Sub New
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation
  id: Simulation
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  langs:
  - csharp
  - vb
  name: Simulation
  nameWithType: SimulationUpdates.Simulation
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Simulation
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public Simulation Simulation { get; set; }
    parameters: []
    return:
      type: SpiceSharp.Simulations.Simulation
    content.vb: Public Property Simulation As Simulation
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup
  id: ParameterUpdatesBeforeSetup
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  langs:
  - csharp
  - vb
  name: ParameterUpdatesBeforeSetup
  nameWithType: SimulationUpdates.ParameterUpdatesBeforeSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParameterUpdatesBeforeSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
    startLine: 16
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public List<SimulationUpdate> ParameterUpdatesBeforeSetup { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate}
    content.vb: Public Property ParameterUpdatesBeforeSetup As List(Of SimulationUpdate)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature
  id: ParameterUpdatesBeforeTemperature
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  langs:
  - csharp
  - vb
  name: ParameterUpdatesBeforeTemperature
  nameWithType: SimulationUpdates.ParameterUpdatesBeforeTemperature
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParameterUpdatesBeforeTemperature
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
    startLine: 18
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public List<SimulationUpdate> ParameterUpdatesBeforeTemperature { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate}
    content.vb: Public Property ParameterUpdatesBeforeTemperature As List(Of SimulationUpdate)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad
  id: ParameterUpdatesBeforeLoad
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates
  langs:
  - csharp
  - vb
  name: ParameterUpdatesBeforeLoad
  nameWithType: SimulationUpdates.ParameterUpdatesBeforeLoad
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParameterUpdatesBeforeLoad
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Updates/SimulationUpdates.cs
    startLine: 20
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  syntax:
    content: public List<SimulationUpdate> ParameterUpdatesBeforeLoad { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate}
    content.vb: Public Property ParameterUpdatesBeforeLoad As List(Of SimulationUpdate)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.#ctor
  name: SimulationUpdates
  nameWithType: SimulationUpdates.SimulationUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.SimulationUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation
  name: Simulation
  nameWithType: SimulationUpdates.Simulation
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.Simulation
- uid: SpiceSharp.Simulations.Simulation
  commentId: T:SpiceSharp.Simulations.Simulation
  parent: SpiceSharp.Simulations
  isExternal: true
  name: Simulation
  nameWithType: Simulation
  fullName: SpiceSharp.Simulations.Simulation
- uid: SpiceSharp.Simulations
  commentId: N:SpiceSharp.Simulations
  isExternal: true
  name: SpiceSharp.Simulations
  nameWithType: SpiceSharp.Simulations
  fullName: SpiceSharp.Simulations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup
  name: ParameterUpdatesBeforeSetup
  nameWithType: SimulationUpdates.ParameterUpdatesBeforeSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeSetup
- uid: System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate}
  commentId: T:System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SimulationUpdate>
  nameWithType: List<SimulationUpdate>
  fullName: System.Collections.Generic.List<SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate>
  nameWithType.vb: List(Of SimulationUpdate)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate)
  name.vb: List(Of SimulationUpdate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate
    name: SimulationUpdate
    nameWithType: SimulationUpdate
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate
    name: SimulationUpdate
    nameWithType: SimulationUpdate
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature
  name: ParameterUpdatesBeforeTemperature
  nameWithType: SimulationUpdates.ParameterUpdatesBeforeTemperature
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeTemperature
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad
  name: ParameterUpdatesBeforeLoad
  nameWithType: SimulationUpdates.ParameterUpdatesBeforeLoad
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationUpdates.ParameterUpdatesBeforeLoad
