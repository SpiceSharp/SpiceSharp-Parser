### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  id: ComponentReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  langs:
  - csharp
  - vb
  name: ComponentReader
  nameWithType: ComponentReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ComponentReader
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
    startLine: 13
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  summary: "\nReads all supported <xref href=\"SpiceSharpParser.Models.Netlist.Spice.Objects.Component\" data-throw-if-not-resolved=\"false\"></xref> from SPICE netlist object model.\n"
  example: []
  syntax:
    content: 'public class ComponentReader : StatementReader<Component>, IStatementReader, IComponentReader'
    content.vb: >-
      Public Class ComponentReader
          Inherits StatementReader(Of Component)
          Implements IStatementReader, IComponentReader
  inheritance:
  - System.Object
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader
  inheritedMembers:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})
  id: '#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator})'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  langs:
  - csharp
  - vb
  name: ComponentReader(IMapper<IComponentGenerator>)
  nameWithType: ComponentReader.ComponentReader(IMapper<IComponentGenerator>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.ComponentReader(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator>)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
    startLine: 19
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ComponentReader(IMapper<IComponentGenerator> mapper)
    parameters:
    - id: mapper
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
      description: A component mapper.
    content.vb: Public Sub New(mapper As IMapper(Of IComponentGenerator))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.#ctor*
  nameWithType.vb: ComponentReader.ComponentReader(IMapper(Of IComponentGenerator))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.ComponentReader(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator))
  name.vb: ComponentReader(IMapper(Of IComponentGenerator))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper
  id: Mapper
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  langs:
  - csharp
  - vb
  name: Mapper
  nameWithType: ComponentReader.Mapper
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Mapper
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
    startLine: 27
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  summary: "\nGets the component mapper.\n"
  example: []
  syntax:
    content: public IMapper<IComponentGenerator> Mapper { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
    content.vb: Public ReadOnly Property Mapper As IMapper(Of IComponentGenerator)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  id: Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  langs:
  - csharp
  - vb
  name: Read(Component, ICircuitContext)
  nameWithType: ComponentReader.Read(Component, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Read
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/ComponentReader.cs
    startLine: 34
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  summary: "\nReads a component statement and modifies the context.\n"
  example: []
  syntax:
    content: public override void Read(Component statement, ICircuitContext context)
    parameters:
    - id: statement
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
      description: A statement to process.
    - id: context
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
      description: A context to modify.
    content.vb: Public Overrides Sub Read(statement As Component, context As ICircuitContext)
  overridden: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Component
  nameWithType: Component
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
  name: StatementReader<Component>
  nameWithType: StatementReader<Component>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<SpiceSharpParser.Models.Netlist.Spice.Objects.Component>
  nameWithType.vb: StatementReader(Of Component)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Component)
  name.vb: StatementReader(Of Component)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
    name: StatementReader
    nameWithType: StatementReader
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
    name: StatementReader
    nameWithType: StatementReader
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  name: IStatementReader
  nameWithType: IStatementReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IStatementReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  name: IComponentReader
  nameWithType: IComponentReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  name: Read(Statement, ICircuitContext)
  nameWithType: StatementReader<Component>.Read(Statement, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<SpiceSharpParser.Models.Netlist.Spice.Objects.Component>.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  nameWithType.vb: StatementReader(Of Component).Read(Statement, ICircuitContext)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Component).Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader<Component>.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<SpiceSharpParser.Models.Netlist.Spice.Objects.Component>.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader(Of Component).Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Component).Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
  name: StatementReader<TStatement>
  nameWithType: StatementReader<TStatement>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<TStatement>
  nameWithType.vb: StatementReader(Of TStatement)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of TStatement)
  name.vb: StatementReader(Of TStatement)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
    name: StatementReader
    nameWithType: StatementReader
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader
  - name: <
    nameWithType: <
    fullName: <
  - name: TStatement
    nameWithType: TStatement
    fullName: TStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1
    name: StatementReader
    nameWithType: StatementReader
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStatement
    nameWithType: TStatement
    fullName: TStatement
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  name: Read(Statement, ICircuitContext)
  nameWithType: StatementReader<TStatement>.Read(Statement, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<TStatement>.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  nameWithType.vb: StatementReader(Of TStatement).Read(Statement, ICircuitContext)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of TStatement).Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader<TStatement>.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<TStatement>.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statement,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader(Of TStatement).Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of TStatement).Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
  name: ComponentReader
  nameWithType: ComponentReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.#ctor
  name: ComponentReader
  nameWithType: ComponentReader.ComponentReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.ComponentReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<IComponentGenerator>
  nameWithType: IMapper<IComponentGenerator>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator>
  nameWithType.vb: IMapper(Of IComponentGenerator)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator)
  name.vb: IMapper(Of IComponentGenerator)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
    name: IComponentGenerator
    nameWithType: IComponentGenerator
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
    name: IComponentGenerator
    nameWithType: IComponentGenerator
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.IComponentGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<TElement>
  nameWithType: IMapper<TElement>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<TElement>
  nameWithType.vb: IMapper(Of TElement)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of TElement)
  name.vb: IMapper(Of TElement)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper
  name: Mapper
  nameWithType: ComponentReader.Mapper
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Mapper
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader{SpiceSharpParser.Models.Netlist.Spice.Objects.Component}
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  name: Read(Component, ICircuitContext)
  nameWithType: StatementReader<Component>.Read(Component, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<SpiceSharpParser.Models.Netlist.Spice.Objects.Component>.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  nameWithType.vb: StatementReader(Of Component).Read(Component, ICircuitContext)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Component).Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader<Component>.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<SpiceSharpParser.Models.Netlist.Spice.Objects.Component>.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader(Of Component).Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Component).Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read
  name: Read
  nameWithType: ComponentReader.Read
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.ComponentReader.Read
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader
  name: Read(Component, ICircuitContext)
  nameWithType: IComponentReader.Read(Component, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: IComponentReader.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Component,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: IComponentReader.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IComponentReader.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Component
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitContext
  nameWithType: ICircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  name: Read(TStatement, ICircuitContext)
  nameWithType: StatementReader<TStatement>.Read(TStatement, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<TStatement>.Read(TStatement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  nameWithType.vb: StatementReader(Of TStatement).Read(TStatement, ICircuitContext)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of TStatement).Read(TStatement, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader<TStatement>.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader<TStatement>.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: TStatement
    nameWithType: TStatement
    fullName: TStatement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader`1.Read(`0,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
    name: Read
    nameWithType: StatementReader(Of TStatement).Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.StatementReader(Of TStatement).Read
  - name: (
    nameWithType: (
    fullName: (
  - name: TStatement
    nameWithType: TStatement
    fullName: TStatement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
