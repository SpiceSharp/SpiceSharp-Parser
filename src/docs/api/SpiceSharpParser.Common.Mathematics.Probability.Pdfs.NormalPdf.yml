### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
  id: NormalPdf
  parent: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  children:
  - SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.#ctor(System.Int32,System.Double)
  langs:
  - csharp
  - vb
  name: NormalPdf
  nameWithType: NormalPdf
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/Pdfs/NormalPdf.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: NormalPdf
    path: ../SpiceSharpParser/Common/Mathematics/Probability/Pdfs/NormalPdf.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  summary: "\nNormal distribution with 0 mean.\n"
  example: []
  syntax:
    content: 'public class NormalPdf : Pdf, IEnumerable<Point>, IEnumerable'
    content.vb: >-
      Public Class NormalPdf
          Inherits Pdf
          Implements IEnumerable(Of Point), IEnumerable
  inheritance:
  - System.Object
  - SpiceSharpParser.Common.Mathematics.Probability.Curve
  - SpiceSharpParser.Common.Mathematics.Probability.Pdf
  implements:
  - System.Collections.Generic.IEnumerable{SpiceSharpParser.Common.Mathematics.Probability.Point}
  - System.Collections.IEnumerable
  inheritedMembers:
  - SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.Points
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.PointsCount
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.Item(System.Int32)
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.Add(SpiceSharpParser.Common.Mathematics.Probability.Point)
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Int32)
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Double)
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY(System.Double)
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.System#Collections#IEnumerable#GetEnumerator
  - SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.#ctor(System.Int32,System.Double)
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.#ctor(System.Int32,System.Double)
  id: '#ctor(System.Int32,System.Double)'
  parent: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
  langs:
  - csharp
  - vb
  name: NormalPdf(Int32, Double)
  nameWithType: NormalPdf.NormalPdf(Int32, Double)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.NormalPdf(System.Int32, System.Double)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/Pdfs/NormalPdf.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Common/Mathematics/Probability/Pdfs/NormalPdf.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public NormalPdf(int evaluationPoints, double limit)
    parameters:
    - id: evaluationPoints
      type: System.Int32
      description: Number of evaluation points.
    - id: limit
      type: System.Double
      description: Pdf limit.
    content.vb: Public Sub New(evaluationPoints As Integer, limit As Double)
  overload: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  commentId: N:SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  name: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  nameWithType: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdfs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.Curve
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: Curve
  nameWithType: Curve
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdf
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.Pdf
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: Pdf
  nameWithType: Pdf
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdf
- uid: System.Collections.Generic.IEnumerable{SpiceSharpParser.Common.Mathematics.Probability.Point}
  commentId: T:System.Collections.Generic.IEnumerable{SpiceSharpParser.Common.Mathematics.Probability.Point}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Point>
  nameWithType: IEnumerable<Point>
  fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Common.Mathematics.Probability.Point>
  nameWithType.vb: IEnumerable(Of Point)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Common.Mathematics.Probability.Point)
  name.vb: IEnumerable(Of Point)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Point
    name: Point
    nameWithType: Point
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Point
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Point
    name: Point
    nameWithType: Point
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Point
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
  parent: SpiceSharpParser.Common.Mathematics.Probability.Pdf
  name: Validate()
  nameWithType: Pdf.Validate()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
    name: Validate
    nameWithType: Pdf.Validate
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
    name: Validate
    nameWithType: Pdf.Validate
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdf.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Points
  commentId: P:SpiceSharpParser.Common.Mathematics.Probability.Curve.Points
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: Points
  nameWithType: Curve.Points
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Points
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.PointsCount
  commentId: P:SpiceSharpParser.Common.Mathematics.Probability.Curve.PointsCount
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: PointsCount
  nameWithType: Curve.PointsCount
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.PointsCount
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item(System.Int32)
  commentId: P:SpiceSharpParser.Common.Mathematics.Probability.Curve.Item(System.Int32)
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  isExternal: true
  name: Item[Int32]
  nameWithType: Curve.Item[Int32]
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item[System.Int32]
  nameWithType.vb: Curve.Item(Int32)
  fullName.vb: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item(System.Int32)
    name: Item
    nameWithType: Curve.Item
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item(System.Int32)
    name: Item
    nameWithType: Curve.Item
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Add(SpiceSharpParser.Common.Mathematics.Probability.Point)
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.Add(SpiceSharpParser.Common.Mathematics.Probability.Point)
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: Add(Point)
  nameWithType: Curve.Add(Point)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Add(SpiceSharpParser.Common.Mathematics.Probability.Point)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Add(SpiceSharpParser.Common.Mathematics.Probability.Point)
    name: Add
    nameWithType: Curve.Add
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Point
    name: Point
    nameWithType: Point
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Point
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Add(SpiceSharpParser.Common.Mathematics.Probability.Point)
    name: Add
    nameWithType: Curve.Add
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Point
    name: Point
    nameWithType: Point
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Point
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: ComputeAreaUnderCurve()
  nameWithType: Curve.ComputeAreaUnderCurve()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
    name: ComputeAreaUnderCurve
    nameWithType: Curve.ComputeAreaUnderCurve
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
    name: ComputeAreaUnderCurve
    nameWithType: Curve.ComputeAreaUnderCurve
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Int32)
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Int32)
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  isExternal: true
  name: ComputeAreaUnderCurve(Int32)
  nameWithType: Curve.ComputeAreaUnderCurve(Int32)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Int32)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Int32)
    name: ComputeAreaUnderCurve
    nameWithType: Curve.ComputeAreaUnderCurve
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Int32)
    name: ComputeAreaUnderCurve
    nameWithType: Curve.ComputeAreaUnderCurve
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Double)
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Double)
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  isExternal: true
  name: ComputeAreaUnderCurve(Double)
  nameWithType: Curve.ComputeAreaUnderCurve(Double)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Double)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Double)
    name: ComputeAreaUnderCurve
    nameWithType: Curve.ComputeAreaUnderCurve
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve(System.Double)
    name: ComputeAreaUnderCurve
    nameWithType: Curve.ComputeAreaUnderCurve
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ComputeAreaUnderCurve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY(System.Double)
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY(System.Double)
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  isExternal: true
  name: ScaleY(Double)
  nameWithType: Curve.ScaleY(Double)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY(System.Double)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY(System.Double)
    name: ScaleY
    nameWithType: Curve.ScaleY
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY(System.Double)
    name: ScaleY
    nameWithType: Curve.ScaleY
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.ScaleY
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: GetFirstPoint()
  nameWithType: Curve.GetFirstPoint()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
    name: GetFirstPoint
    nameWithType: Curve.GetFirstPoint
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
    name: GetFirstPoint
    nameWithType: Curve.GetFirstPoint
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetFirstPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: GetLastPoint()
  nameWithType: Curve.GetLastPoint()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
    name: GetLastPoint
    nameWithType: Curve.GetLastPoint
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
    name: GetLastPoint
    nameWithType: Curve.GetLastPoint
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetLastPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: Clear()
  nameWithType: Curve.Clear()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
    name: Clear
    nameWithType: Curve.Clear
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
    name: Clear
    nameWithType: Curve.Clear
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: GetEnumerator()
  nameWithType: Curve.GetEnumerator()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
    name: GetEnumerator
    nameWithType: Curve.GetEnumerator
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
    name: GetEnumerator
    nameWithType: Curve.GetEnumerator
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.System#Collections#IEnumerable#GetEnumerator
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.System#Collections#IEnumerable#GetEnumerator
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: IEnumerable.GetEnumerator()
  nameWithType: Curve.IEnumerable.GetEnumerator()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Curve.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Curve.IEnumerable.GetEnumerator
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Curve.System.Collections.IEnumerable.GetEnumerator
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
  parent: SpiceSharpParser.Common.Mathematics.Probability.Curve
  name: Clone()
  nameWithType: Curve.Clone()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
    name: Clone
    nameWithType: Curve.Clone
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
    name: Clone
    nameWithType: Curve.Clone
    fullName: SpiceSharpParser.Common.Mathematics.Probability.Curve.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Common.Mathematics.Probability
  commentId: N:SpiceSharpParser.Common.Mathematics.Probability
  name: SpiceSharpParser.Common.Mathematics.Probability
  nameWithType: SpiceSharpParser.Common.Mathematics.Probability
  fullName: SpiceSharpParser.Common.Mathematics.Probability
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
  name: NormalPdf
  nameWithType: NormalPdf
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf
- uid: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.#ctor*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.#ctor
  name: NormalPdf
  nameWithType: NormalPdf.NormalPdf
  fullName: SpiceSharpParser.Common.Mathematics.Probability.Pdfs.NormalPdf.NormalPdf
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
