### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  id: LibPreprocessor
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.#ctor(SpiceSharpParser.Common.FileSystem.IFileReader,SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool,SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser,SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor,System.Func{System.String},SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings,SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool
  langs:
  - csharp
  - vb
  name: LibPreprocessor
  nameWithType: LibPreprocessor
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: LibPreprocessor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 15
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nPreprocess .lib statements with 2 parameters from netlist file.\n"
  example: []
  syntax:
    content: 'public class LibPreprocessor : IProcessor'
    content.vb: >-
      Public Class LibPreprocessor
          Implements IProcessor
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.#ctor(SpiceSharpParser.Common.FileSystem.IFileReader,SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool,SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser,SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor,System.Func{System.String},SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings,SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.#ctor(SpiceSharpParser.Common.FileSystem.IFileReader,SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool,SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser,SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor,System.Func{System.String},SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings,SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings)
  id: '#ctor(SpiceSharpParser.Common.FileSystem.IFileReader,SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool,SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser,SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor,System.Func{System.String},SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings,SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: LibPreprocessor(IFileReader, ISpiceTokenProviderPool, ISingleSpiceNetlistParser, IProcessor, Func<String>, SpiceNetlistReaderSettings, SpiceLexerSettings)
  nameWithType: LibPreprocessor.LibPreprocessor(IFileReader, ISpiceTokenProviderPool, ISingleSpiceNetlistParser, IProcessor, Func<String>, SpiceNetlistReaderSettings, SpiceLexerSettings)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LibPreprocessor(SpiceSharpParser.Common.FileSystem.IFileReader, SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool, SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser, SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor, System.Func<System.String>, SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings, SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 27
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public LibPreprocessor(IFileReader fileReader, ISpiceTokenProviderPool tokenProviderPool, ISingleSpiceNetlistParser spiceNetlistParser, IProcessor includesPreprocessor, Func<string> initialDirectoryPathProvider, SpiceNetlistReaderSettings readerSettings, SpiceLexerSettings lexerSettings)
    parameters:
    - id: fileReader
      type: SpiceSharpParser.Common.FileSystem.IFileReader
      description: File reader.
    - id: tokenProviderPool
      type: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool
      description: Token provider.
    - id: spiceNetlistParser
      type: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
      description: Single spice netlist parser.
    - id: includesPreprocessor
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
      description: Includes preprocessor.
    - id: initialDirectoryPathProvider
      type: System.Func{System.String}
      description: Initial directory path provider.
    - id: readerSettings
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
      description: Reader settings.
    - id: lexerSettings
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
      description: Lexer settings.
    content.vb: Public Sub New(fileReader As IFileReader, tokenProviderPool As ISpiceTokenProviderPool, spiceNetlistParser As ISingleSpiceNetlistParser, includesPreprocessor As IProcessor, initialDirectoryPathProvider As Func(Of String), readerSettings As SpiceNetlistReaderSettings, lexerSettings As SpiceLexerSettings)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.#ctor*
  nameWithType.vb: LibPreprocessor.LibPreprocessor(IFileReader, ISpiceTokenProviderPool, ISingleSpiceNetlistParser, IProcessor, Func(Of String), SpiceNetlistReaderSettings, SpiceLexerSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LibPreprocessor(SpiceSharpParser.Common.FileSystem.IFileReader, SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool, SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser, SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor, System.Func(Of System.String), SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings, SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings)
  name.vb: LibPreprocessor(IFileReader, ISpiceTokenProviderPool, ISingleSpiceNetlistParser, IProcessor, Func(Of String), SpiceNetlistReaderSettings, SpiceLexerSettings)
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings
  id: LexerSettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: LexerSettings
  nameWithType: LibPreprocessor.LexerSettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: LexerSettings
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 45
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  syntax:
    content: public SpiceLexerSettings LexerSettings { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
    content.vb: Public ReadOnly Property LexerSettings As SpiceLexerSettings
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool
  id: TokenProviderPool
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: TokenProviderPool
  nameWithType: LibPreprocessor.TokenProviderPool
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: TokenProviderPool
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 47
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  syntax:
    content: public ISpiceTokenProviderPool TokenProviderPool { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool
    content.vb: Public ReadOnly Property TokenProviderPool As ISpiceTokenProviderPool
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings
  id: ReaderSettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: ReaderSettings
  nameWithType: LibPreprocessor.ReaderSettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ReaderSettings
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 49
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  syntax:
    content: public SpiceNetlistReaderSettings ReaderSettings { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
    content.vb: Public ReadOnly Property ReaderSettings As SpiceNetlistReaderSettings
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath
  id: InitialDirectoryPath
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: InitialDirectoryPath
  nameWithType: LibPreprocessor.InitialDirectoryPath
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: InitialDirectoryPath
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 54
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nGets the initial directory path.\n"
  example: []
  syntax:
    content: public string InitialDirectoryPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property InitialDirectoryPath As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader
  id: FileReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: FileReader
  nameWithType: LibPreprocessor.FileReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: FileReader
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 59
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nGets the file reader.\n"
  example: []
  syntax:
    content: public IFileReader FileReader { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Common.FileSystem.IFileReader
    content.vb: Public ReadOnly Property FileReader As IFileReader
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser
  id: SpiceNetlistParser
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: SpiceNetlistParser
  nameWithType: LibPreprocessor.SpiceNetlistParser
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SpiceNetlistParser
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 64
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nGets the SPICE netlist parser.\n"
  example: []
  syntax:
    content: public ISingleSpiceNetlistParser SpiceNetlistParser { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
    content.vb: Public ReadOnly Property SpiceNetlistParser As ISingleSpiceNetlistParser
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor
  id: IncludesPreprocessor
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: IncludesPreprocessor
  nameWithType: LibPreprocessor.IncludesPreprocessor
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: IncludesPreprocessor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 69
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nGets the include preprocessor.\n"
  example: []
  syntax:
    content: public IProcessor IncludesPreprocessor { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
    content.vb: Public ReadOnly Property IncludesPreprocessor As IProcessor
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider
  id: InitialDirectoryPathProvider
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: InitialDirectoryPathProvider
  nameWithType: LibPreprocessor.InitialDirectoryPathProvider
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: InitialDirectoryPathProvider
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 71
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  syntax:
    content: protected Func<string> InitialDirectoryPathProvider { get; }
    parameters: []
    return:
      type: System.Func{System.String}
    content.vb: Protected ReadOnly Property InitialDirectoryPathProvider As Func(Of String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  id: Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  langs:
  - csharp
  - vb
  name: Process(Statements)
  nameWithType: LibPreprocessor.Process(Statements)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Process
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Processors/LibPreprocessor.cs
    startLine: 77
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  summary: "\nReads .include statements.\n"
  example: []
  syntax:
    content: public Statements Process(Statements statements)
    parameters:
    - id: statements
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
      description: Netlist model to search for .include statements
    return:
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
    content.vb: Public Function Process(statements As Statements) As Statements
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors
  name: IProcessor
  nameWithType: IProcessor
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
  name: LibPreprocessor
  nameWithType: LibPreprocessor
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.#ctor
  name: LibPreprocessor
  nameWithType: LibPreprocessor.LibPreprocessor
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LibPreprocessor
- uid: SpiceSharpParser.Common.FileSystem.IFileReader
  commentId: T:SpiceSharpParser.Common.FileSystem.IFileReader
  parent: SpiceSharpParser.Common.FileSystem
  name: IFileReader
  nameWithType: IFileReader
  fullName: SpiceSharpParser.Common.FileSystem.IFileReader
- uid: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool
  commentId: T:SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool
  parent: SpiceSharpParser.Lexers.Netlist.Spice
  name: ISpiceTokenProviderPool
  nameWithType: ISpiceTokenProviderPool
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProviderPool
- uid: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
  parent: SpiceSharpParser.Parsers.Netlist.Spice
  name: ISingleSpiceNetlistParser
  nameWithType: ISingleSpiceNetlistParser
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.ISingleSpiceNetlistParser
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceNetlistReaderSettings
  nameWithType: SpiceNetlistReaderSettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
- uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
  commentId: T:SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
  parent: SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceLexerSettings
  nameWithType: SpiceLexerSettings
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
- uid: SpiceSharpParser.Common.FileSystem
  commentId: N:SpiceSharpParser.Common.FileSystem
  name: SpiceSharpParser.Common.FileSystem
  nameWithType: SpiceSharpParser.Common.FileSystem
  fullName: SpiceSharpParser.Common.FileSystem
- uid: SpiceSharpParser.Lexers.Netlist.Spice
  commentId: N:SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceSharpParser.Lexers.Netlist.Spice
  nameWithType: SpiceSharpParser.Lexers.Netlist.Spice
  fullName: SpiceSharpParser.Lexers.Netlist.Spice
- uid: SpiceSharpParser.Parsers.Netlist.Spice
  commentId: N:SpiceSharpParser.Parsers.Netlist.Spice
  name: SpiceSharpParser.Parsers.Netlist.Spice
  nameWithType: SpiceSharpParser.Parsers.Netlist.Spice
  fullName: SpiceSharpParser.Parsers.Netlist.Spice
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings
  name: LexerSettings
  nameWithType: LibPreprocessor.LexerSettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.LexerSettings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool
  name: TokenProviderPool
  nameWithType: LibPreprocessor.TokenProviderPool
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.TokenProviderPool
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings
  name: ReaderSettings
  nameWithType: LibPreprocessor.ReaderSettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.ReaderSettings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath
  name: InitialDirectoryPath
  nameWithType: LibPreprocessor.InitialDirectoryPath
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader
  name: FileReader
  nameWithType: LibPreprocessor.FileReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.FileReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser
  name: SpiceNetlistParser
  nameWithType: LibPreprocessor.SpiceNetlistParser
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.SpiceNetlistParser
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor
  name: IncludesPreprocessor
  nameWithType: LibPreprocessor.IncludesPreprocessor
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.IncludesPreprocessor
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider
  name: InitialDirectoryPathProvider
  nameWithType: LibPreprocessor.InitialDirectoryPathProvider
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.InitialDirectoryPathProvider
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process
  name: Process
  nameWithType: LibPreprocessor.Process
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.LibPreprocessor.Process
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor
  name: Process(Statements)
  nameWithType: IProcessor.Process(Statements)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
    name: Process
    nameWithType: IProcessor.Process
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
    name: Statements
    nameWithType: Statements
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
    name: Process
    nameWithType: IProcessor.Process
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Processors.IProcessor.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
    name: Statements
    nameWithType: Statements
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Statements
  nameWithType: Statements
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
