### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  id: ISimulationsFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  langs:
  - csharp
  - vb
  name: ISimulationsFactory
  nameWithType: ISimulationsFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  type: Interface
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/ISimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ISimulationsFactory
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/ISimulationsFactory.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  syntax:
    content: public interface ISimulationsFactory
    content.vb: Public Interface ISimulationsFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  id: Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  langs:
  - csharp
  - vb
  name: Create(Control, ICircuitContext, Func<String, Control, ICircuitContext, BaseSimulation>)
  nameWithType: ISimulationsFactory.Create(Control, ICircuitContext, Func<String, Control, ICircuitContext, BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Func<System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/ISimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Create
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/ISimulationsFactory.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  syntax:
    content: void Create(Control statement, ICircuitContext context, Func<string, Control, ICircuitContext, BaseSimulation> createSimulation)
    parameters:
    - id: statement
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    - id: context
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    - id: createSimulation
      type: System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation}
    content.vb: Sub Create(statement As Control, context As ICircuitContext, createSimulation As Func(Of String, Control, ICircuitContext, BaseSimulation))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create*
  nameWithType.vb: ISimulationsFactory.Create(Control, ICircuitContext, Func(Of String, Control, ICircuitContext, BaseSimulation))
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Func(Of System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation))
  name.vb: Create(Control, ICircuitContext, Func(Of String, Control, ICircuitContext, BaseSimulation))
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create
  name: Create
  nameWithType: ISimulationsFactory.Create
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Control
  nameWithType: Control
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitContext
  nameWithType: ICircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
- uid: System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation}
  commentId: T:System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation}
  parent: System
  definition: System.Func`4
  name: Func<String, Control, ICircuitContext, BaseSimulation>
  nameWithType: Func<String, Control, ICircuitContext, BaseSimulation>
  fullName: System.Func<System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation>
  nameWithType.vb: Func(Of String, Control, ICircuitContext, BaseSimulation)
  fullName.vb: System.Func(Of System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation)
  name.vb: Func(Of String, Control, ICircuitContext, BaseSimulation)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
