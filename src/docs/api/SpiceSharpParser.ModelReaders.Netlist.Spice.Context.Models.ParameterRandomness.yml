### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness
  id: ParameterRandomness
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance
  langs:
  - csharp
  - vb
  name: ParameterRandomness
  nameWithType: ParameterRandomness
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Models/ParameterRandomness.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParameterRandomness
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Models/ParameterRandomness.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  summary: "\nSpecifies random tolerance for a parameter.\n"
  example: []
  syntax:
    content: public class ParameterRandomness
    content.vb: Public Class ParameterRandomness
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName
  id: RandomDistributionName
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness
  langs:
  - csharp
  - vb
  name: RandomDistributionName
  nameWithType: ParameterRandomness.RandomDistributionName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Models/ParameterRandomness.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: RandomDistributionName
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Models/ParameterRandomness.cs
    startLine: 12
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  summary: "\nGets or sets random distribution name.\n"
  example: []
  syntax:
    content: public string RandomDistributionName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RandomDistributionName As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance
  id: Tolerance
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness
  langs:
  - csharp
  - vb
  name: Tolerance
  nameWithType: ParameterRandomness.Tolerance
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Models/ParameterRandomness.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Tolerance
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Models/ParameterRandomness.cs
    startLine: 17
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  summary: "\nGets or sets tolerance parameter.\n"
  example: []
  syntax:
    content: public Parameter Tolerance { get; set; }
    parameters: []
    return:
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    content.vb: Public Property Tolerance As Parameter
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName
  name: RandomDistributionName
  nameWithType: ParameterRandomness.RandomDistributionName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.RandomDistributionName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance
  name: Tolerance
  nameWithType: ParameterRandomness.Tolerance
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.ParameterRandomness.Tolerance
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Parameter
  nameWithType: Parameter
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
