### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter
  id: CurrentExporter
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  langs:
  - csharp
  - vb
  name: CurrentExporter
  nameWithType: CurrentExporter
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/CurrentExporter.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CurrentExporter
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/CurrentExporter.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  syntax:
    content: 'public class CurrentExporter : Exporter'
    content.vb: >-
      Public Class CurrentExporter
          Inherits Exporter
  inheritance:
  - System.Object
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes
  id: CreatedTypes
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter
  langs:
  - csharp
  - vb
  name: CreatedTypes
  nameWithType: CurrentExporter.CreatedTypes
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/CurrentExporter.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreatedTypes
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/CurrentExporter.cs
    startLine: 11
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  syntax:
    content: public virtual ICollection<string> CreatedTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public Overridable ReadOnly Property CreatedTypes As ICollection(Of String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  id: CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter
  langs:
  - csharp
  - vb
  name: CreateExport(String, String, ParameterCollection, EvaluationContext, ISpiceNetlistCaseSensitivitySettings)
  nameWithType: CurrentExporter.CreateExport(String, String, ParameterCollection, EvaluationContext, ISpiceNetlistCaseSensitivitySettings)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport(System.String, System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection, SpiceSharpParser.Common.Evaluation.EvaluationContext, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/CurrentExporter.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateExport
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/CurrentExporter.cs
    startLine: 13
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  syntax:
    content: public override Export CreateExport(string name, string type, ParameterCollection parameters, EvaluationContext context, ISpiceNetlistCaseSensitivitySettings caseSettings)
    parameters:
    - id: name
      type: System.String
    - id: type
      type: System.String
    - id: parameters
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    - id: context
      type: SpiceSharpParser.Common.Evaluation.EvaluationContext
    - id: caseSettings
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
    content.vb: Public Overrides Function CreateExport(name As String, type As String, parameters As ParameterCollection, context As EvaluationContext, caseSettings As ISpiceNetlistCaseSensitivitySettings) As Export
  overridden: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  name: Exporter
  nameWithType: Exporter
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes
  name: CreatedTypes
  nameWithType: CurrentExporter.CreatedTypes
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreatedTypes
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  isExternal: true
  name: CreateExport(String, String, ParameterCollection, EvaluationContext, ISpiceNetlistCaseSensitivitySettings)
  nameWithType: Exporter.CreateExport(String, String, ParameterCollection, EvaluationContext, ISpiceNetlistCaseSensitivitySettings)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport(System.String, System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection, SpiceSharpParser.Common.Evaluation.EvaluationContext, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
    name: CreateExport
    nameWithType: Exporter.CreateExport
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    name: ParameterCollection
    nameWithType: ParameterCollection
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
    name: ISpiceNetlistCaseSensitivitySettings
    nameWithType: ISpiceNetlistCaseSensitivitySettings
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport(System.String,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection,SpiceSharpParser.Common.Evaluation.EvaluationContext,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings)
    name: CreateExport
    nameWithType: Exporter.CreateExport
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter.CreateExport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    name: ParameterCollection
    nameWithType: ParameterCollection
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
    name: ISpiceNetlistCaseSensitivitySettings
    nameWithType: ISpiceNetlistCaseSensitivitySettings
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport
  name: CreateExport
  nameWithType: CurrentExporter.CreateExport
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.CurrentExporter.CreateExport
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
- uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
  commentId: T:SpiceSharpParser.Common.Evaluation.EvaluationContext
  parent: SpiceSharpParser.Common.Evaluation
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: ISpiceNetlistCaseSensitivitySettings
  nameWithType: ISpiceNetlistCaseSensitivitySettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  name: Export
  nameWithType: Export
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.Common.Evaluation
  commentId: N:SpiceSharpParser.Common.Evaluation
  name: SpiceSharpParser.Common.Evaluation
  nameWithType: SpiceSharpParser.Common.Evaluation
  fullName: SpiceSharpParser.Common.Evaluation
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
