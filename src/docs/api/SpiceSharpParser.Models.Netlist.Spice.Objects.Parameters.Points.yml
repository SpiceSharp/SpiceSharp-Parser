### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  id: Points
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  children:
  - SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone
  - SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator
  - SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System#Collections#IEnumerable#GetEnumerator
  - SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: Points
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Points
    path: ../SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  syntax:
    content: 'public class Points : SpiceObject, IEnumerable<PointParameter>, IEnumerable'
    content.vb: >-
      Public Class Points
          Inherits SpiceObject
          Implements IEnumerable(Of PointParameter), IEnumerable
  inheritance:
  - System.Object
  - SpiceSharpParser.Models.Netlist.Spice.SpiceObject
  implements:
  - System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values
  commentId: P:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values
  id: Values
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: Points.Values
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Values
    path: ../SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  syntax:
    content: public List<PointParameter> Values { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
    content.vb: Public Property Values As List(Of PointParameter)
  overload: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone
  commentId: M:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone
  id: Clone
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Points.Clone()
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Clone
    path: ../SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  syntax:
    content: public override SpiceObject Clone()
    return:
      type: SpiceSharpParser.Models.Netlist.Spice.SpiceObject
    content.vb: Public Overrides Function Clone As SpiceObject
  overridden: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
  overload: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator
  commentId: M:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator
  id: GetEnumerator
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Points.GetEnumerator()
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetEnumerator
    path: ../SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
    startLine: 21
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  syntax:
    content: public IEnumerator<PointParameter> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
    content.vb: Public Function GetEnumerator As IEnumerator(Of PointParameter)
  overload: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System#Collections#IEnumerable#GetEnumerator
  commentId: M:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: Points.IEnumerable.GetEnumerator()
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../SpiceSharpParser/Models/Netlist/Spice/Objects/Parameters/Points.cs
    startLine: 26
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Points.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  name: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Models.Netlist.Spice.SpiceObject
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.SpiceObject
  parent: SpiceSharpParser.Models.Netlist.Spice
  name: SpiceObject
  nameWithType: SpiceObject
  fullName: SpiceSharpParser.Models.Netlist.Spice.SpiceObject
- uid: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  commentId: T:System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PointParameter>
  nameWithType: IEnumerable<PointParameter>
  fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>
  nameWithType.vb: IEnumerable(Of PointParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter)
  name.vb: IEnumerable(Of PointParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Models.Netlist.Spice
  commentId: N:SpiceSharpParser.Models.Netlist.Spice
  name: SpiceSharpParser.Models.Netlist.Spice
  nameWithType: SpiceSharpParser.Models.Netlist.Spice
  fullName: SpiceSharpParser.Models.Netlist.Spice
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values*
  commentId: Overload:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values
  name: Values
  nameWithType: Points.Values
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Values
- uid: System.Collections.Generic.List{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  commentId: T:System.Collections.Generic.List{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PointParameter>
  nameWithType: List<PointParameter>
  fullName: System.Collections.Generic.List<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>
  nameWithType.vb: List(Of PointParameter)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter)
  name.vb: List(Of PointParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
  commentId: M:SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
  parent: SpiceSharpParser.Models.Netlist.Spice.SpiceObject
  name: Clone()
  nameWithType: SpiceObject.Clone()
  fullName: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone()
  spec.csharp:
  - uid: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
    name: Clone
    nameWithType: SpiceObject.Clone
    fullName: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
    name: Clone
    nameWithType: SpiceObject.Clone
    fullName: SpiceSharpParser.Models.Netlist.Spice.SpiceObject.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone*
  commentId: Overload:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone
  name: Clone
  nameWithType: Points.Clone
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.Clone
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator*
  commentId: Overload:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator
  name: GetEnumerator
  nameWithType: Points.GetEnumerator
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<PointParameter>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of PointParameter).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<PointParameter>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of PointParameter).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  commentId: T:System.Collections.Generic.IEnumerator{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<PointParameter>
  nameWithType: IEnumerator<PointParameter>
  fullName: System.Collections.Generic.IEnumerator<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>
  nameWithType.vb: IEnumerator(Of PointParameter)
  fullName.vb: System.Collections.Generic.IEnumerator(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter)
  name.vb: IEnumerator(Of PointParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: Points.IEnumerable.GetEnumerator
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.Points.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Points.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
