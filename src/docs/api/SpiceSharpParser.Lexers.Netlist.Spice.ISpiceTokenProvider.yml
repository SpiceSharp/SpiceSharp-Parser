### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider
  commentId: T:SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider
  id: ISpiceTokenProvider
  parent: SpiceSharpParser.Lexers.Netlist.Spice
  children:
  - SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens(System.String)
  langs:
  - csharp
  - vb
  name: ISpiceTokenProvider
  nameWithType: ISpiceTokenProvider
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider
  type: Interface
  source:
    remote:
      path: src/SpiceSharpParser/Lexers/Netlist/Spice/ISpiceTokenProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ISpiceTokenProvider
    path: ../SpiceSharpParser/Lexers/Netlist/Spice/ISpiceTokenProvider.cs
    startLine: 2
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Lexers.Netlist.Spice
  syntax:
    content: public interface ISpiceTokenProvider
    content.vb: Public Interface ISpiceTokenProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens(System.String)
  commentId: M:SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens(System.String)
  id: GetTokens(System.String)
  parent: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider
  langs:
  - csharp
  - vb
  name: GetTokens(String)
  nameWithType: ISpiceTokenProvider.GetTokens(String)
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Lexers/Netlist/Spice/ISpiceTokenProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetTokens
    path: ../SpiceSharpParser/Lexers/Netlist/Spice/ISpiceTokenProvider.cs
    startLine: 4
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Lexers.Netlist.Spice
  syntax:
    content: SpiceToken[] GetTokens(string netlist)
    parameters:
    - id: netlist
      type: System.String
    return:
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[]
    content.vb: Function GetTokens(netlist As String) As SpiceToken()
  overload: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens*
references:
- uid: SpiceSharpParser.Lexers.Netlist.Spice
  commentId: N:SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceSharpParser.Lexers.Netlist.Spice
  nameWithType: SpiceSharpParser.Lexers.Netlist.Spice
  fullName: SpiceSharpParser.Lexers.Netlist.Spice
- uid: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens*
  commentId: Overload:SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens
  name: GetTokens
  nameWithType: ISpiceTokenProvider.GetTokens
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.ISpiceTokenProvider.GetTokens
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[]
  isExternal: true
  name: SpiceToken[]
  nameWithType: SpiceToken[]
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken[]
  nameWithType.vb: SpiceToken()
  fullName.vb: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken()
  name.vb: SpiceToken()
  spec.csharp:
  - uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    name: SpiceToken
    nameWithType: SpiceToken
    fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    name: SpiceToken
    nameWithType: SpiceToken
    fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
