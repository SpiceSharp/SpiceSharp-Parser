### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater
  id: IParameterSweepUpdater
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update(SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}})
  langs:
  - csharp
  - vb
  name: IParameterSweepUpdater
  nameWithType: IParameterSweepUpdater
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater
  type: Interface
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Sweeps/IParameterSweepUpdater.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: IParameterSweepUpdater
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Sweeps/IParameterSweepUpdater.cs
    startLine: 6
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  syntax:
    content: public interface IParameterSweepUpdater
    content.vb: Public Interface IParameterSweepUpdater
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update(SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update(SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}})
  id: Update(SpiceSharp.Simulations.BaseSimulation,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater
  langs:
  - csharp
  - vb
  name: Update(BaseSimulation, ICircuitContext, List<KeyValuePair<Parameter, Double>>)
  nameWithType: IParameterSweepUpdater.Update(BaseSimulation, ICircuitContext, List<KeyValuePair<Parameter, Double>>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update(SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter, System.Double>>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Sweeps/IParameterSweepUpdater.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Update
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/Sweeps/IParameterSweepUpdater.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  summary: "\nSets sweep parameters for the simulation.\n"
  example: []
  syntax:
    content: void Update(BaseSimulation simulation, ICircuitContext context, List<KeyValuePair<Parameter, double>> parameterValues)
    parameters:
    - id: simulation
      type: SpiceSharp.Simulations.BaseSimulation
      description: Simulation to set.
    - id: context
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
      description: Reading context.
    - id: parameterValues
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}}
      description: Parameter values.
    content.vb: Sub Update(simulation As BaseSimulation, context As ICircuitContext, parameterValues As List(Of KeyValuePair(Of Parameter, Double)))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update*
  nameWithType.vb: IParameterSweepUpdater.Update(BaseSimulation, ICircuitContext, List(Of KeyValuePair(Of Parameter, Double)))
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update(SpiceSharp.Simulations.BaseSimulation, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter, System.Double)))
  name.vb: Update(BaseSimulation, ICircuitContext, List(Of KeyValuePair(Of Parameter, Double)))
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update
  name: Update
  nameWithType: IParameterSweepUpdater.Update
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Sweeps.IParameterSweepUpdater.Update
- uid: SpiceSharp.Simulations.BaseSimulation
  commentId: T:SpiceSharp.Simulations.BaseSimulation
  parent: SpiceSharp.Simulations
  isExternal: true
  name: BaseSimulation
  nameWithType: BaseSimulation
  fullName: SpiceSharp.Simulations.BaseSimulation
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitContext
  nameWithType: ICircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Double}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<Parameter, Double>>
  nameWithType: List<KeyValuePair<Parameter, Double>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter, System.Double>>
  nameWithType.vb: List(Of KeyValuePair(Of Parameter, Double))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter, System.Double))
  name.vb: List(Of KeyValuePair(Of Parameter, Double))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Simulations
  commentId: N:SpiceSharp.Simulations
  isExternal: true
  name: SpiceSharp.Simulations
  nameWithType: SpiceSharp.Simulations
  fullName: SpiceSharp.Simulations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
