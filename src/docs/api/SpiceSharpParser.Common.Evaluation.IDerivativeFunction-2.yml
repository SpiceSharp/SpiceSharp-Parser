### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2
  commentId: T:SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2
  id: IDerivativeFunction`2
  parent: SpiceSharpParser.Common.Evaluation
  children:
  - SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2.Derivative(System.String,System.Func{`0}[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  langs:
  - csharp
  - vb
  name: IDerivativeFunction<TInputArgumentType, TOutputType>
  nameWithType: IDerivativeFunction<TInputArgumentType, TOutputType>
  fullName: SpiceSharpParser.Common.Evaluation.IDerivativeFunction<TInputArgumentType, TOutputType>
  type: Interface
  source:
    remote:
      path: src/SpiceSharpParser/Common/Evaluation/IFunction.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: IDerivativeFunction
    path: ../SpiceSharpParser/Common/Evaluation/IFunction.cs
    startLine: 10
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Evaluation
  syntax:
    content: 'public interface IDerivativeFunction<TInputArgumentType, TOutputType> : IFunction<TInputArgumentType, TOutputType>, IFunction'
    typeParameters:
    - id: TInputArgumentType
    - id: TOutputType
    content.vb: >-
      Public Interface IDerivativeFunction(Of TInputArgumentType, TOutputType)
          Inherits IFunction(Of TInputArgumentType, TOutputType)
  inheritedMembers:
  - SpiceSharpParser.Common.Evaluation.IFunction{{TInputArgumentType},{TOutputType}}.Logic(System.String,{TInputArgumentType}[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  - SpiceSharpParser.Common.Evaluation.IFunction.ArgumentsCount
  - SpiceSharpParser.Common.Evaluation.IFunction.Name
  nameWithType.vb: IDerivativeFunction(Of TInputArgumentType, TOutputType)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: SpiceSharpParser.Common.Evaluation.IDerivativeFunction(Of TInputArgumentType, TOutputType)
  name.vb: IDerivativeFunction(Of TInputArgumentType, TOutputType)
- uid: SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2.Derivative(System.String,System.Func{`0}[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2.Derivative(System.String,System.Func{`0}[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  id: Derivative(System.String,System.Func{`0}[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  parent: SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2
  langs:
  - csharp
  - vb
  name: Derivative(String, Func<TInputArgumentType>[], EvaluationContext)
  nameWithType: IDerivativeFunction<TInputArgumentType, TOutputType>.Derivative(String, Func<TInputArgumentType>[], EvaluationContext)
  fullName: SpiceSharpParser.Common.Evaluation.IDerivativeFunction<TInputArgumentType, TOutputType>.Derivative(System.String, System.Func<TInputArgumentType>[], SpiceSharpParser.Common.Evaluation.EvaluationContext)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Evaluation/IFunction.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Derivative
    path: ../SpiceSharpParser/Common/Evaluation/IFunction.cs
    startLine: 12
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Evaluation
  syntax:
    content: Derivatives<Func<TOutputType>> Derivative(string image, Func<TInputArgumentType>[] args, EvaluationContext context)
    parameters:
    - id: image
      type: System.String
    - id: args
      type: System.Func{{TInputArgumentType}}[]
    - id: context
      type: SpiceSharpParser.Common.Evaluation.EvaluationContext
    return:
      type: SpiceSharpBehavioral.Parsers.Derivatives{System.Func{{TOutputType}}}
    content.vb: Function Derivative(image As String, args As Func(Of TInputArgumentType)(), context As EvaluationContext) As Derivatives(Of Func(Of TOutputType))
  overload: SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2.Derivative*
  nameWithType.vb: IDerivativeFunction(Of TInputArgumentType, TOutputType).Derivative(String, Func(Of TInputArgumentType)(), EvaluationContext)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IDerivativeFunction(Of TInputArgumentType, TOutputType).Derivative(System.String, System.Func(Of TInputArgumentType)(), SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name.vb: Derivative(String, Func(Of TInputArgumentType)(), EvaluationContext)
references:
- uid: SpiceSharpParser.Common.Evaluation
  commentId: N:SpiceSharpParser.Common.Evaluation
  name: SpiceSharpParser.Common.Evaluation
  nameWithType: SpiceSharpParser.Common.Evaluation
  fullName: SpiceSharpParser.Common.Evaluation
- uid: SpiceSharpParser.Common.Evaluation.IFunction{{TInputArgumentType},{TOutputType}}.Logic(System.String,{TInputArgumentType}[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.Common.Evaluation.IFunction{`0,`1}.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  parent: SpiceSharpParser.Common.Evaluation.IFunction{{TInputArgumentType},{TOutputType}}
  definition: SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name: Logic(String, TInputArgumentType[], EvaluationContext)
  nameWithType: IFunction<TInputArgumentType, TOutputType>.Logic(String, TInputArgumentType[], EvaluationContext)
  fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>.Logic(System.String, TInputArgumentType[], SpiceSharpParser.Common.Evaluation.EvaluationContext)
  nameWithType.vb: IFunction(Of TInputArgumentType, TOutputType).Logic(String, TInputArgumentType(), EvaluationContext)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType).Logic(System.String, TInputArgumentType(), SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name.vb: Logic(String, TInputArgumentType(), EvaluationContext)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: IFunction<TInputArgumentType, TOutputType>.Logic
    fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>.Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: IFunction(Of TInputArgumentType, TOutputType).Logic
    fullName: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType).Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.IFunction.ArgumentsCount
  commentId: P:SpiceSharpParser.Common.Evaluation.IFunction.ArgumentsCount
  parent: SpiceSharpParser.Common.Evaluation.IFunction
  name: ArgumentsCount
  nameWithType: IFunction.ArgumentsCount
  fullName: SpiceSharpParser.Common.Evaluation.IFunction.ArgumentsCount
- uid: SpiceSharpParser.Common.Evaluation.IFunction.Name
  commentId: P:SpiceSharpParser.Common.Evaluation.IFunction.Name
  parent: SpiceSharpParser.Common.Evaluation.IFunction
  name: Name
  nameWithType: IFunction.Name
  fullName: SpiceSharpParser.Common.Evaluation.IFunction.Name
- uid: SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  isExternal: true
  name: Logic(String, TInputArgumentType[], EvaluationContext)
  nameWithType: IFunction<TInputArgumentType, TOutputType>.Logic(String, TInputArgumentType[], EvaluationContext)
  fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>.Logic(System.String, TInputArgumentType[], SpiceSharpParser.Common.Evaluation.EvaluationContext)
  nameWithType.vb: IFunction(Of TInputArgumentType, TOutputType).Logic(String, TInputArgumentType(), EvaluationContext)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType).Logic(System.String, TInputArgumentType(), SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name.vb: Logic(String, TInputArgumentType(), EvaluationContext)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: IFunction<TInputArgumentType, TOutputType>.Logic
    fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>.Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: IFunction(Of TInputArgumentType, TOutputType).Logic
    fullName: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType).Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.IFunction{{TInputArgumentType},{TOutputType}}
  commentId: T:SpiceSharpParser.Common.Evaluation.IFunction{`0,`1}
  parent: SpiceSharpParser.Common.Evaluation
  definition: SpiceSharpParser.Common.Evaluation.IFunction`2
  name: IFunction<TInputArgumentType, TOutputType>
  nameWithType: IFunction<TInputArgumentType, TOutputType>
  fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>
  nameWithType.vb: IFunction(Of TInputArgumentType, TOutputType)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType)
  name.vb: IFunction(Of TInputArgumentType, TOutputType)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: <
    nameWithType: <
    fullName: <
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.IFunction
  commentId: T:SpiceSharpParser.Common.Evaluation.IFunction
  parent: SpiceSharpParser.Common.Evaluation
  name: IFunction
  nameWithType: IFunction
  fullName: SpiceSharpParser.Common.Evaluation.IFunction
- uid: SpiceSharpParser.Common.Evaluation.IFunction`2
  commentId: T:SpiceSharpParser.Common.Evaluation.IFunction`2
  name: IFunction<TInputArgumentType, TOutputType>
  nameWithType: IFunction<TInputArgumentType, TOutputType>
  fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>
  nameWithType.vb: IFunction(Of TInputArgumentType, TOutputType)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType)
  name.vb: IFunction(Of TInputArgumentType, TOutputType)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: <
    nameWithType: <
    fullName: <
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2.Derivative*
  commentId: Overload:SpiceSharpParser.Common.Evaluation.IDerivativeFunction`2.Derivative
  name: Derivative
  nameWithType: IDerivativeFunction<TInputArgumentType, TOutputType>.Derivative
  fullName: SpiceSharpParser.Common.Evaluation.IDerivativeFunction<TInputArgumentType, TOutputType>.Derivative
  nameWithType.vb: IDerivativeFunction(Of TInputArgumentType, TOutputType).Derivative
  fullName.vb: SpiceSharpParser.Common.Evaluation.IDerivativeFunction(Of TInputArgumentType, TOutputType).Derivative
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{{TInputArgumentType}}[]
  isExternal: true
  name: Func<TInputArgumentType>[]
  nameWithType: Func<TInputArgumentType>[]
  fullName: System.Func<TInputArgumentType>[]
  nameWithType.vb: Func(Of TInputArgumentType)()
  fullName.vb: System.Func(Of TInputArgumentType)()
  name.vb: Func(Of TInputArgumentType)()
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
  commentId: T:SpiceSharpParser.Common.Evaluation.EvaluationContext
  parent: SpiceSharpParser.Common.Evaluation
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
- uid: SpiceSharpBehavioral.Parsers.Derivatives{System.Func{{TOutputType}}}
  commentId: T:SpiceSharpBehavioral.Parsers.Derivatives{System.Func{`1}}
  parent: SpiceSharpBehavioral.Parsers
  definition: SpiceSharpBehavioral.Parsers.Derivatives`1
  name: Derivatives<Func<TOutputType>>
  nameWithType: Derivatives<Func<TOutputType>>
  fullName: SpiceSharpBehavioral.Parsers.Derivatives<System.Func<TOutputType>>
  nameWithType.vb: Derivatives(Of Func(Of TOutputType))
  fullName.vb: SpiceSharpBehavioral.Parsers.Derivatives(Of System.Func(Of TOutputType))
  name.vb: Derivatives(Of Func(Of TOutputType))
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpBehavioral.Parsers.Derivatives`1
  commentId: T:SpiceSharpBehavioral.Parsers.Derivatives`1
  isExternal: true
  name: Derivatives<T>
  nameWithType: Derivatives<T>
  fullName: SpiceSharpBehavioral.Parsers.Derivatives<T>
  nameWithType.vb: Derivatives(Of T)
  fullName.vb: SpiceSharpBehavioral.Parsers.Derivatives(Of T)
  name.vb: Derivatives(Of T)
  spec.csharp:
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpBehavioral.Parsers.Derivatives`1
    name: Derivatives
    nameWithType: Derivatives
    fullName: SpiceSharpBehavioral.Parsers.Derivatives
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpBehavioral.Parsers
  commentId: N:SpiceSharpBehavioral.Parsers
  isExternal: true
  name: SpiceSharpBehavioral.Parsers
  nameWithType: SpiceSharpBehavioral.Parsers
  fullName: SpiceSharpBehavioral.Parsers
