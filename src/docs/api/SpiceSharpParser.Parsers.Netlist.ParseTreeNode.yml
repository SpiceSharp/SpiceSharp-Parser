### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  commentId: T:SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  id: ParseTreeNode
  parent: SpiceSharpParser.Parsers.Netlist
  children:
  - SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor
  - SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor(SpiceSharpParser.Parsers.Netlist.ParseTreeNode)
  - SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  langs:
  - csharp
  - vb
  name: ParseTreeNode
  nameWithType: ParseTreeNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParseTreeNode
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nA tree node in parse tree.\n"
  example: []
  syntax:
    content: public abstract class ParseTreeNode
    content.vb: Public MustInherit Class ParseTreeNode
  inheritance:
  - System.Object
  derivedClasses:
  - SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode
  - SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor
  commentId: M:SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor
  id: '#ctor'
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  langs:
  - csharp
  - vb
  name: ParseTreeNode()
  nameWithType: ParseTreeNode.ParseTreeNode()
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.ParseTreeNode()
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
    startLine: 10
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.Parsers.Netlist.ParseTreeNode\" data-throw-if-not-resolved=\"false\"></xref> class without the parent.\n"
  example: []
  syntax:
    content: protected ParseTreeNode()
    content.vb: Protected Sub New
  overload: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor(SpiceSharpParser.Parsers.Netlist.ParseTreeNode)
  commentId: M:SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor(SpiceSharpParser.Parsers.Netlist.ParseTreeNode)
  id: '#ctor(SpiceSharpParser.Parsers.Netlist.ParseTreeNode)'
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  langs:
  - csharp
  - vb
  name: ParseTreeNode(ParseTreeNode)
  nameWithType: ParseTreeNode.ParseTreeNode(ParseTreeNode)
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.ParseTreeNode(SpiceSharpParser.Parsers.Netlist.ParseTreeNode)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
    startLine: 18
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.Parsers.Netlist.ParseTreeNode\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected ParseTreeNode(ParseTreeNode parent)
    parameters:
    - id: parent
      type: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
      description: A parent of the tree node.
    content.vb: Protected Sub New(parent As ParseTreeNode)
  overload: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  commentId: P:SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  id: Parent
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ParseTreeNode.Parent
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Parent
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeNode.cs
    startLine: 26
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nGets the parent of the tree node.\n"
  example: []
  syntax:
    content: public ParseTreeNode Parent { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
    content.vb: Public ReadOnly Property Parent As ParseTreeNode
  overload: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SpiceSharpParser.Parsers.Netlist
  commentId: N:SpiceSharpParser.Parsers.Netlist
  name: SpiceSharpParser.Parsers.Netlist
  nameWithType: SpiceSharpParser.Parsers.Netlist
  fullName: SpiceSharpParser.Parsers.Netlist
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  commentId: T:SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  parent: SpiceSharpParser.Parsers.Netlist
  name: ParseTreeNode
  nameWithType: ParseTreeNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.ParseTreeNode.#ctor
  name: ParseTreeNode
  nameWithType: ParseTreeNode.ParseTreeNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.ParseTreeNode
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  name: Parent
  nameWithType: ParseTreeNode.Parent
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
