### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  id: SimulationsFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  langs:
  - csharp
  - vb
  name: SimulationsFactory
  nameWithType: SimulationsFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationsFactory
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
    startLine: 12
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  syntax:
    content: 'public class SimulationsFactory : ISimulationsFactory'
    content.vb: >-
      Public Class SimulationsFactory
          Implements ISimulationsFactory
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter})
  id: '#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter})'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  langs:
  - csharp
  - vb
  name: SimulationsFactory(IMapper<Exporter>)
  nameWithType: SimulationsFactory.SimulationsFactory(IMapper<Exporter>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.SimulationsFactory(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter>)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  syntax:
    content: public SimulationsFactory(IMapper<Exporter> exporterMapper)
    parameters:
    - id: exporterMapper
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
    content.vb: Public Sub New(exporterMapper As IMapper(Of Exporter))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.#ctor*
  nameWithType.vb: SimulationsFactory.SimulationsFactory(IMapper(Of Exporter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.SimulationsFactory(SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter))
  name.vb: SimulationsFactory(IMapper(Of Exporter))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  id: CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  langs:
  - csharp
  - vb
  name: CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  nameWithType: SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
    startLine: 25
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  summary: "\nGets the simulations factory that creates simulations parameter and temperature sweeps.\n"
  example: []
  syntax:
    content: protected ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory CreateSimulationsForAllParameterSweepsAndTemperaturesFactory { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
    content.vb: Protected ReadOnly Property CreateSimulationsForAllParameterSweepsAndTemperaturesFactory As ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory
  id: CreateSimulationsForMonteCarloFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  langs:
  - csharp
  - vb
  name: CreateSimulationsForMonteCarloFactory
  nameWithType: SimulationsFactory.CreateSimulationsForMonteCarloFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateSimulationsForMonteCarloFactory
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
    startLine: 30
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  summary: "\nGets the simulations factory that creates simulations for Monte Carol simulation.\n"
  example: []
  syntax:
    content: protected ICreateSimulationsForMonteCarloFactory CreateSimulationsForMonteCarloFactory { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForMonteCarloFactory
    content.vb: Protected ReadOnly Property CreateSimulationsForMonteCarloFactory As ICreateSimulationsForMonteCarloFactory
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  id: Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  langs:
  - csharp
  - vb
  name: Create(Control, ICircuitContext, Func<String, Control, ICircuitContext, BaseSimulation>)
  nameWithType: SimulationsFactory.Create(Control, ICircuitContext, Func<String, Control, ICircuitContext, BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Func<System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Create
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
    startLine: 38
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  summary: "\nCreates simulations.\n"
  example: []
  syntax:
    content: public void Create(Control statement, ICircuitContext context, Func<string, Control, ICircuitContext, BaseSimulation> createSimulation)
    parameters:
    - id: statement
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
      description: Simulation statement.
    - id: context
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
      description: Context.
    - id: createSimulation
      type: System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation}
      description: Simulation factory.
    content.vb: Public Sub Create(statement As Control, context As ICircuitContext, createSimulation As Func(Of String, Control, ICircuitContext, BaseSimulation))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  nameWithType.vb: SimulationsFactory.Create(Control, ICircuitContext, Func(Of String, Control, ICircuitContext, BaseSimulation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Func(Of System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation))
  name.vb: Create(Control, ICircuitContext, Func(Of String, Control, ICircuitContext, BaseSimulation))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  id: IsMonteCarloEnabledForSimulation(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory
  langs:
  - csharp
  - vb
  name: IsMonteCarloEnabledForSimulation(Control, ICircuitContext)
  nameWithType: SimulationsFactory.IsMonteCarloEnabledForSimulation(Control, ICircuitContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: IsMonteCarloEnabledForSimulation
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Simulations/SimulationsFactory.cs
    startLine: 64
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  syntax:
    content: protected static bool IsMonteCarloEnabledForSimulation(Control statement, ICircuitContext context)
    parameters:
    - id: statement
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    - id: context
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsMonteCarloEnabledForSimulation(statement As Control, context As ICircuitContext) As Boolean
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations
  name: ISimulationsFactory
  nameWithType: ISimulationsFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.#ctor
  name: SimulationsFactory
  nameWithType: SimulationsFactory.SimulationsFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.SimulationsFactory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<Exporter>
  nameWithType: IMapper<Exporter>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter>
  nameWithType.vb: IMapper(Of Exporter)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter)
  name.vb: IMapper(Of Exporter)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
    name: Exporter
    nameWithType: Exporter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
    name: Exporter
    nameWithType: Exporter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<TElement>
  nameWithType: IMapper<TElement>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<TElement>
  nameWithType.vb: IMapper(Of TElement)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of TElement)
  name.vb: IMapper(Of TElement)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  name: CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  nameWithType: SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForAllParameterSweepsAndTemperaturesFactory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
  name: ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  nameWithType: ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForAllParameterSweepsAndTemperaturesFactory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory
  name: CreateSimulationsForMonteCarloFactory
  nameWithType: SimulationsFactory.CreateSimulationsForMonteCarloFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.CreateSimulationsForMonteCarloFactory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForMonteCarloFactory
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForMonteCarloFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories
  name: ICreateSimulationsForMonteCarloFactory
  nameWithType: ICreateSimulationsForMonteCarloFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.Factories.ICreateSimulationsForMonteCarloFactory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create
  name: Create
  nameWithType: SimulationsFactory.Create
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.Create
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory
  isExternal: true
  name: Create(Control, ICircuitContext, Func<String, Control, ICircuitContext, BaseSimulation>)
  nameWithType: ISimulationsFactory.Create(Control, ICircuitContext, Func<String, Control, ICircuitContext, BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Func<System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation>)
  nameWithType.vb: ISimulationsFactory.Create(Control, ICircuitContext, Func(Of String, Control, ICircuitContext, BaseSimulation))
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, System.Func(Of System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation))
  name.vb: Create(Control, ICircuitContext, Func(Of String, Control, ICircuitContext, BaseSimulation))
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
    name: Create
    nameWithType: ISimulationsFactory.Create
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create(SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation})
    name: Create
    nameWithType: ISimulationsFactory.Create
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.ISimulationsFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Control
  nameWithType: Control
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitContext
  nameWithType: ICircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
- uid: System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation}
  commentId: T:System.Func{System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Control,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharp.Simulations.BaseSimulation}
  parent: System
  definition: System.Func`4
  name: Func<String, Control, ICircuitContext, BaseSimulation>
  nameWithType: Func<String, Control, ICircuitContext, BaseSimulation>
  fullName: System.Func<System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation>
  nameWithType.vb: Func(Of String, Control, ICircuitContext, BaseSimulation)
  fullName.vb: System.Func(Of System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Control, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharp.Simulations.BaseSimulation)
  name.vb: Func(Of String, Control, ICircuitContext, BaseSimulation)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
    name: Control
    nameWithType: Control
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Control
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation
  name: IsMonteCarloEnabledForSimulation
  nameWithType: SimulationsFactory.IsMonteCarloEnabledForSimulation
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Simulations.SimulationsFactory.IsMonteCarloEnabledForSimulation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
