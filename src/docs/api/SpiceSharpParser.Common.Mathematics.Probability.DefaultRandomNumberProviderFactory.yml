### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  id: DefaultRandomNumberProviderFactory
  parent: SpiceSharpParser.Common.Mathematics.Probability
  children:
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom(System.Nullable{System.Int32})
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: DefaultRandomNumberProviderFactory
  nameWithType: DefaultRandomNumberProviderFactory
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: DefaultRandomNumberProviderFactory
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nProvider of random number generators.\n"
  example: []
  syntax:
    content: 'public class DefaultRandomNumberProviderFactory : IRandomNumberProviderFactory, IRandomDoubleProviderFactory, IRandomIntegerProviderFactory'
    content.vb: >-
      Public Class DefaultRandomNumberProviderFactory
          Implements IRandomNumberProviderFactory, IRandomDoubleProviderFactory, IRandomIntegerProviderFactory
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProviderFactory
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear
  id: Clear
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DefaultRandomNumberProviderFactory.Clear()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Clear
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
    startLine: 18
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nClears the randomizer.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom(System.Nullable{System.Int32})
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom(System.Nullable{System.Int32})
  id: GetRandom(System.Nullable{System.Int32})
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  langs:
  - csharp
  - vb
  name: GetRandom(Nullable<Int32>)
  nameWithType: DefaultRandomNumberProviderFactory.GetRandom(Nullable<Int32>)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom(System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetRandom
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
    startLine: 38
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nProvides a random number generator.\n"
  example: []
  syntax:
    content: public IRandomNumberProvider GetRandom(int? randomSeed)
    parameters:
    - id: randomSeed
      type: System.Nullable{System.Int32}
      description: Random generator seed.
    return:
      type: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
      description: "\nA new instance of a random number generator.\n"
    content.vb: Public Function GetRandom(randomSeed As Integer?) As IRandomNumberProvider
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom*
  nameWithType.vb: DefaultRandomNumberProviderFactory.GetRandom(Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom(System.Nullable(Of System.Int32))
  name.vb: GetRandom(Nullable(Of Int32))
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
  id: GetRandomDouble(System.Nullable{System.Int32})
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  langs:
  - csharp
  - vb
  name: GetRandomDouble(Nullable<Int32>)
  nameWithType: DefaultRandomNumberProviderFactory.GetRandomDouble(Nullable<Int32>)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble(System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetRandomDouble
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
    startLine: 77
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  syntax:
    content: public IRandomDoubleProvider GetRandomDouble(int? randomSeed)
    parameters:
    - id: randomSeed
      type: System.Nullable{System.Int32}
    return:
      type: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
    content.vb: Public Function GetRandomDouble(randomSeed As Integer?) As IRandomDoubleProvider
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble*
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
  nameWithType.vb: DefaultRandomNumberProviderFactory.GetRandomDouble(Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble(System.Nullable(Of System.Int32))
  name.vb: GetRandomDouble(Nullable(Of Int32))
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
  id: GetRandomInteger(System.Nullable{System.Int32})
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory
  langs:
  - csharp
  - vb
  name: GetRandomInteger(Nullable<Int32>)
  nameWithType: DefaultRandomNumberProviderFactory.GetRandomInteger(Nullable<Int32>)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger(System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetRandomInteger
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProviderFactory.cs
    startLine: 82
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  syntax:
    content: public IRandomIntegerProvider GetRandomInteger(int? randomSeed)
    parameters:
    - id: randomSeed
      type: System.Nullable{System.Int32}
    return:
      type: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
    content.vb: Public Function GetRandomInteger(randomSeed As Integer?) As IRandomIntegerProvider
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger*
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
  nameWithType.vb: DefaultRandomNumberProviderFactory.GetRandomInteger(Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger(System.Nullable(Of System.Int32))
  name.vb: GetRandomInteger(Nullable(Of Int32))
references:
- uid: SpiceSharpParser.Common.Mathematics.Probability
  commentId: N:SpiceSharpParser.Common.Mathematics.Probability
  name: SpiceSharpParser.Common.Mathematics.Probability
  nameWithType: SpiceSharpParser.Common.Mathematics.Probability
  fullName: SpiceSharpParser.Common.Mathematics.Probability
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProviderFactory
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProviderFactory
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomNumberProviderFactory
  nameWithType: IRandomNumberProviderFactory
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProviderFactory
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomDoubleProviderFactory
  nameWithType: IRandomDoubleProviderFactory
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomIntegerProviderFactory
  nameWithType: IRandomIntegerProviderFactory
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear
  name: Clear
  nameWithType: DefaultRandomNumberProviderFactory.Clear
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.Clear
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom
  name: GetRandom
  nameWithType: DefaultRandomNumberProviderFactory.GetRandom
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandom
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomNumberProvider
  nameWithType: IRandomNumberProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble
  name: GetRandomDouble
  nameWithType: DefaultRandomNumberProviderFactory.GetRandomDouble
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomDouble
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
  parent: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory
  isExternal: true
  name: GetRandomDouble(Nullable<Int32>)
  nameWithType: IRandomDoubleProviderFactory.GetRandomDouble(Nullable<Int32>)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable<System.Int32>)
  nameWithType.vb: IRandomDoubleProviderFactory.GetRandomDouble(Nullable(Of Int32))
  fullName.vb: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable(Of System.Int32))
  name.vb: GetRandomDouble(Nullable(Of Int32))
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
    name: GetRandomDouble
    nameWithType: IRandomDoubleProviderFactory.GetRandomDouble
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble(System.Nullable{System.Int32})
    name: GetRandomDouble
    nameWithType: IRandomDoubleProviderFactory.GetRandomDouble
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProviderFactory.GetRandomDouble
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomDoubleProvider
  nameWithType: IRandomDoubleProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger
  name: GetRandomInteger
  nameWithType: DefaultRandomNumberProviderFactory.GetRandomInteger
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProviderFactory.GetRandomInteger
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
  parent: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory
  isExternal: true
  name: GetRandomInteger(Nullable<Int32>)
  nameWithType: IRandomIntegerProviderFactory.GetRandomInteger(Nullable<Int32>)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable<System.Int32>)
  nameWithType.vb: IRandomIntegerProviderFactory.GetRandomInteger(Nullable(Of Int32))
  fullName.vb: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable(Of System.Int32))
  name.vb: GetRandomInteger(Nullable(Of Int32))
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
    name: GetRandomInteger
    nameWithType: IRandomIntegerProviderFactory.GetRandomInteger
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger(System.Nullable{System.Int32})
    name: GetRandomInteger
    nameWithType: IRandomIntegerProviderFactory.GetRandomInteger
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProviderFactory.GetRandomInteger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomIntegerProvider
  nameWithType: IRandomIntegerProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
