### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer
  commentId: T:SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer
  id: CaseSensitiveComparer
  parent: SpiceSharpParser.Common.StringComparers
  children:
  - SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals(System.String,System.String)
  - SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode(System.String)
  langs:
  - csharp
  - vb
  name: CaseSensitiveComparer
  nameWithType: CaseSensitiveComparer
  fullName: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Common/StringComparers/CaseSensitiveComparer.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CaseSensitiveComparer
    path: ../SpiceSharpParser/Common/StringComparers/CaseSensitiveComparer.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.StringComparers
  syntax:
    content: 'public class CaseSensitiveComparer : EqualityComparer<string>, IEqualityComparer, IEqualityComparer<string>'
    content.vb: >-
      Public Class CaseSensitiveComparer
          Inherits EqualityComparer(Of String)
          Implements IEqualityComparer, IEqualityComparer(Of String)
  inheritance:
  - System.Object
  - System.Collections.Generic.EqualityComparer{System.String}
  implements:
  - System.Collections.IEqualityComparer
  - System.Collections.Generic.IEqualityComparer{System.String}
  inheritedMembers:
  - System.Collections.Generic.EqualityComparer{System.String}.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  - System.Collections.Generic.EqualityComparer{System.String}.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  - System.Collections.Generic.EqualityComparer{System.String}.Default
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals(System.String,System.String)
  commentId: M:SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals(System.String,System.String)
  id: Equals(System.String,System.String)
  parent: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer
  langs:
  - csharp
  - vb
  name: Equals(String, String)
  nameWithType: CaseSensitiveComparer.Equals(String, String)
  fullName: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/StringComparers/CaseSensitiveComparer.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Equals
    path: ../SpiceSharpParser/Common/StringComparers/CaseSensitiveComparer.cs
    startLine: 12
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.StringComparers
  summary: "\nDetermines whether the specified objects are equal.\n"
  example: []
  syntax:
    content: public override bool Equals(string x, string y)
    parameters:
    - id: x
      type: System.String
      description: The first object of type <xref href="System.String" data-throw-if-not-resolved="false"></xref> to compare.
    - id: y
      type: System.String
      description: The second object of type <xref href="System.String" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(x As String, y As String) As Boolean
  overridden: System.Collections.Generic.EqualityComparer{System.String}.Equals(System.String,System.String)
  overload: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode(System.String)
  commentId: M:SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode(System.String)
  id: GetHashCode(System.String)
  parent: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(String)
  nameWithType: CaseSensitiveComparer.GetHashCode(String)
  fullName: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode(System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/StringComparers/CaseSensitiveComparer.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetHashCode
    path: ../SpiceSharpParser/Common/StringComparers/CaseSensitiveComparer.cs
    startLine: 25
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.StringComparers
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode(string obj)
    parameters:
    - id: obj
      type: System.String
      description: The object.
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.\n"
    content.vb: Public Overrides Function GetHashCode(obj As String) As Integer
  overridden: System.Collections.Generic.EqualityComparer{System.String}.GetHashCode(System.String)
  overload: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SpiceSharpParser.Common.StringComparers
  commentId: N:SpiceSharpParser.Common.StringComparers
  name: SpiceSharpParser.Common.StringComparers
  nameWithType: SpiceSharpParser.Common.StringComparers
  fullName: SpiceSharpParser.Common.StringComparers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.EqualityComparer{System.String}
  commentId: T:System.Collections.Generic.EqualityComparer{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.EqualityComparer`1
  name: EqualityComparer<String>
  nameWithType: EqualityComparer<String>
  fullName: System.Collections.Generic.EqualityComparer<System.String>
  nameWithType.vb: EqualityComparer(Of String)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.String)
  name.vb: EqualityComparer(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Generic.IEqualityComparer{System.String}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<String>
  nameWithType: IEqualityComparer<String>
  fullName: System.Collections.Generic.IEqualityComparer<System.String>
  nameWithType.vb: IEqualityComparer(Of String)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.String)
  name.vb: IEqualityComparer(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.String}.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer{System.String}.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  parent: System.Collections.Generic.EqualityComparer{System.String}
  definition: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  name: IEqualityComparer.GetHashCode(Object)
  nameWithType: EqualityComparer<String>.IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.Generic.EqualityComparer<System.String>.System.Collections.IEqualityComparer.GetHashCode(System.Object)
  nameWithType.vb: EqualityComparer(Of String).System.Collections.IEqualityComparer.GetHashCode(Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.String).System.Collections.IEqualityComparer.GetHashCode(System.Object)
  name.vb: System.Collections.IEqualityComparer.GetHashCode(Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer<String>.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<System.String>.System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: System.Collections.IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer(Of String).System.Collections.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of System.String).System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.String}.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer{System.String}.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  parent: System.Collections.Generic.EqualityComparer{System.String}
  definition: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  name: IEqualityComparer.Equals(Object, Object)
  nameWithType: EqualityComparer<String>.IEqualityComparer.Equals(Object, Object)
  fullName: System.Collections.Generic.EqualityComparer<System.String>.System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  nameWithType.vb: EqualityComparer(Of String).System.Collections.IEqualityComparer.Equals(Object, Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.String).System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  name.vb: System.Collections.IEqualityComparer.Equals(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: IEqualityComparer.Equals
    nameWithType: EqualityComparer<String>.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer<System.String>.System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: System.Collections.IEqualityComparer.Equals
    nameWithType: EqualityComparer(Of String).System.Collections.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer(Of System.String).System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.String}.Default
  commentId: P:System.Collections.Generic.EqualityComparer{System.String}.Default
  parent: System.Collections.Generic.EqualityComparer{System.String}
  definition: System.Collections.Generic.EqualityComparer`1.Default
  name: Default
  nameWithType: EqualityComparer<String>.Default
  fullName: System.Collections.Generic.EqualityComparer<System.String>.Default
  nameWithType.vb: EqualityComparer(Of String).Default
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.String).Default
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.EqualityComparer`1
  commentId: T:System.Collections.Generic.EqualityComparer`1
  isExternal: true
  name: EqualityComparer<T>
  nameWithType: EqualityComparer<T>
  fullName: System.Collections.Generic.EqualityComparer<T>
  nameWithType.vb: EqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T)
  name.vb: EqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  isExternal: true
  name: IEqualityComparer.GetHashCode(Object)
  nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(System.Object)
  nameWithType.vb: EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode(Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode(System.Object)
  name.vb: System.Collections.IEqualityComparer.GetHashCode(Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: System.Collections.IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  isExternal: true
  name: IEqualityComparer.Equals(Object, Object)
  nameWithType: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)
  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  nameWithType.vb: EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals(Object, Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  name.vb: System.Collections.IEqualityComparer.Equals(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: IEqualityComparer.Equals
    nameWithType: EqualityComparer<T>.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: System.Collections.IEqualityComparer.Equals
    nameWithType: EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer`1.Default
  commentId: P:System.Collections.Generic.EqualityComparer`1.Default
  isExternal: true
  name: Default
  nameWithType: EqualityComparer<T>.Default
  fullName: System.Collections.Generic.EqualityComparer<T>.Default
  nameWithType.vb: EqualityComparer(Of T).Default
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).Default
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.EqualityComparer{System.String}.Equals(System.String,System.String)
  commentId: M:System.Collections.Generic.EqualityComparer{System.String}.Equals(System.String,System.String)
  parent: System.Collections.Generic.EqualityComparer{System.String}
  definition: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  name: Equals(String, String)
  nameWithType: EqualityComparer<String>.Equals(String, String)
  fullName: System.Collections.Generic.EqualityComparer<System.String>.Equals(System.String, System.String)
  nameWithType.vb: EqualityComparer(Of String).Equals(String, String)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.String).Equals(System.String, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer<String>.Equals
    fullName: System.Collections.Generic.EqualityComparer<System.String>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer(Of String).Equals
    fullName: System.Collections.Generic.EqualityComparer(Of System.String).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals*
  commentId: Overload:SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals
  name: Equals
  nameWithType: CaseSensitiveComparer.Equals
  fullName: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: EqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.EqualityComparer<T>.Equals(T, T)
  nameWithType.vb: EqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer<T>.Equals
    fullName: System.Collections.Generic.EqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.EqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.String}.GetHashCode(System.String)
  commentId: M:System.Collections.Generic.EqualityComparer{System.String}.GetHashCode(System.String)
  parent: System.Collections.Generic.EqualityComparer{System.String}
  definition: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(String)
  nameWithType: EqualityComparer<String>.GetHashCode(String)
  fullName: System.Collections.Generic.EqualityComparer<System.String>.GetHashCode(System.String)
  nameWithType.vb: EqualityComparer(Of String).GetHashCode(String)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.String).GetHashCode(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer<String>.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<System.String>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer(Of String).GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of System.String).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode*
  commentId: Overload:SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode
  name: GetHashCode
  nameWithType: CaseSensitiveComparer.GetHashCode
  fullName: SpiceSharpParser.Common.StringComparers.CaseSensitiveComparer.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: EqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: EqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
