### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  id: DefaultRandomNumberProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  children:
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.#ctor(System.Random)
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble
  - SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble
  langs:
  - csharp
  - vb
  name: DefaultRandomNumberProvider
  nameWithType: DefaultRandomNumberProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: DefaultRandomNumberProvider
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nDefault random number provider.\n"
  example: []
  syntax:
    content: 'public class DefaultRandomNumberProvider : IRandomNumberProvider, IRandomIntegerProvider, IRandomDoubleProvider'
    content.vb: >-
      Public Class DefaultRandomNumberProvider
          Implements IRandomNumberProvider, IRandomIntegerProvider, IRandomDoubleProvider
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.#ctor(System.Random)
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.#ctor(System.Random)
  id: '#ctor(System.Random)'
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  langs:
  - csharp
  - vb
  name: DefaultRandomNumberProvider(Random)
  nameWithType: DefaultRandomNumberProvider.DefaultRandomNumberProvider(Random)
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.DefaultRandomNumberProvider(System.Random)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
    startLine: 15
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DefaultRandomNumberProvider(Random random)
    parameters:
    - id: random
      type: System.Random
      description: Random instance.
    content.vb: Public Sub New(random As Random)
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble
  id: NextDouble
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  langs:
  - csharp
  - vb
  name: NextDouble()
  nameWithType: DefaultRandomNumberProvider.NextDouble()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: NextDouble
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
    startLine: 26
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nComputes the next random double in range (0,1) with custom distribution.\n"
  example: []
  syntax:
    content: public double NextDouble()
    return:
      type: System.Double
      description: "\nThe random double from custom distribution.\n"
    content.vb: Public Function NextDouble As Double
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble*
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble
  id: NextSignedDouble
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  langs:
  - csharp
  - vb
  name: NextSignedDouble()
  nameWithType: DefaultRandomNumberProvider.NextSignedDouble()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: NextSignedDouble
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
    startLine: 37
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nComputes the next random double in range (-1,1) with custom distribution.\n"
  example: []
  syntax:
    content: public double NextSignedDouble()
    return:
      type: System.Double
      description: "\nThe random double from custom distribution.\n"
    content.vb: Public Function NextSignedDouble As Double
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble*
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next
  id: Next
  parent: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: DefaultRandomNumberProvider.Next()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Next
    path: ../SpiceSharpParser/Common/Mathematics/Probability/DefaultRandomNumberProvider.cs
    startLine: 48
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Common.Mathematics.Probability
  summary: "\nComputes next random integer with given maximum.\n"
  example: []
  syntax:
    content: public int Next()
    return:
      type: System.Int32
      description: "\nThe random integer from custom distribution.\n"
    content.vb: Public Function Next As Integer
  overload: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next*
  implements:
  - SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.Common.Mathematics.Probability
  commentId: N:SpiceSharpParser.Common.Mathematics.Probability
  name: SpiceSharpParser.Common.Mathematics.Probability
  nameWithType: SpiceSharpParser.Common.Mathematics.Probability
  fullName: SpiceSharpParser.Common.Mathematics.Probability
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomNumberProvider
  nameWithType: IRandomNumberProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomNumberProvider
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomIntegerProvider
  nameWithType: IRandomIntegerProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  parent: SpiceSharpParser.Common.Mathematics.Probability
  name: IRandomDoubleProvider
  nameWithType: IRandomDoubleProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  commentId: T:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
  name: DefaultRandomNumberProvider
  nameWithType: DefaultRandomNumberProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.#ctor*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.#ctor
  name: DefaultRandomNumberProvider
  nameWithType: DefaultRandomNumberProvider.DefaultRandomNumberProvider
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.DefaultRandomNumberProvider
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble
  name: NextDouble
  nameWithType: DefaultRandomNumberProvider.NextDouble
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextDouble
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
  parent: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  name: NextDouble()
  nameWithType: IRandomDoubleProvider.NextDouble()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
    name: NextDouble
    nameWithType: IRandomDoubleProvider.NextDouble
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
    name: NextDouble
    nameWithType: IRandomDoubleProvider.NextDouble
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble
  name: NextSignedDouble
  nameWithType: DefaultRandomNumberProvider.NextSignedDouble
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.NextSignedDouble
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
  parent: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider
  name: NextSignedDouble()
  nameWithType: IRandomDoubleProvider.NextSignedDouble()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
    name: NextSignedDouble
    nameWithType: IRandomDoubleProvider.NextSignedDouble
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
    name: NextSignedDouble
    nameWithType: IRandomDoubleProvider.NextSignedDouble
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomDoubleProvider.NextSignedDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next*
  commentId: Overload:SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next
  name: Next
  nameWithType: DefaultRandomNumberProvider.Next
  fullName: SpiceSharpParser.Common.Mathematics.Probability.DefaultRandomNumberProvider.Next
- uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
  commentId: M:SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
  parent: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider
  name: Next()
  nameWithType: IRandomIntegerProvider.Next()
  fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next()
  spec.csharp:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
    name: Next
    nameWithType: IRandomIntegerProvider.Next
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
    name: Next
    nameWithType: IRandomIntegerProvider.Next
    fullName: SpiceSharpParser.Common.Mathematics.Probability.IRandomIntegerProvider.Next
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
