### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  id: CircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.#ctor(System.String,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings,SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter},System.String,SpiceSharp.Circuits.InstanceData)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage(System.String,System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory
  langs:
  - csharp
  - vb
  name: CircuitContext
  nameWithType: CircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CircuitContext
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 18
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nReading context.\n"
  example: []
  syntax:
    content: 'public class CircuitContext : ICircuitContext'
    content.vb: >-
      Public Class CircuitContext
          Implements ICircuitContext
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.#ctor(System.String,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings,SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter},System.String,SpiceSharp.Circuits.InstanceData)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.#ctor(System.String,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings,SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter},System.String,SpiceSharp.Circuits.InstanceData)
  id: '#ctor(System.String,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader,SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings,SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter},System.String,SpiceSharp.Circuits.InstanceData)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: CircuitContext(String, ICircuitContext, ICircuitEvaluator, ISimulationPreparations, IResultService, INameGenerator, ISpiceStatementsReader, IWaveformReader, ISpiceNetlistCaseSensitivitySettings, IMapper<Exporter>, String, InstanceData)
  nameWithType: CircuitContext.CircuitContext(String, ICircuitContext, ICircuitEvaluator, ISimulationPreparations, IResultService, INameGenerator, ISpiceStatementsReader, IWaveformReader, ISpiceNetlistCaseSensitivitySettings, IMapper<Exporter>, String, InstanceData)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CircuitContext(System.String, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader, SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings, SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter>, System.String, SpiceSharp.Circuits.InstanceData)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 35
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CircuitContext(string contextName, ICircuitContext parent, ICircuitEvaluator evaluator, ISimulationPreparations simulationPreparations, IResultService resultService, INameGenerator nameGenerator, ISpiceStatementsReader statementsReader, IWaveformReader waveformReader, ISpiceNetlistCaseSensitivitySettings caseSettings, IMapper<Exporter> exporters, string workingDirectory, InstanceData instanceData)
    parameters:
    - id: contextName
      type: System.String
      description: Name of the context.
    - id: parent
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
      description: Parent of the context.
    - id: evaluator
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator
      description: Circuit evaluator.
    - id: simulationPreparations
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
      description: Simulation preparations.
    - id: resultService
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService
      description: SpiceSharpModel service for the context.
    - id: nameGenerator
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
      description: Name generator for the models.
    - id: statementsReader
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
      description: Statements reader.
    - id: waveformReader
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader
      description: Waveform reader.
    - id: caseSettings
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
      description: Case settings.
    - id: exporters
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
      description: Exporters.
    - id: workingDirectory
      type: System.String
      description: Working directory.
    - id: instanceData
      type: SpiceSharp.Circuits.InstanceData
      description: Instance data.
    content.vb: Public Sub New(contextName As String, parent As ICircuitContext, evaluator As ICircuitEvaluator, simulationPreparations As ISimulationPreparations, resultService As IResultService, nameGenerator As INameGenerator, statementsReader As ISpiceStatementsReader, waveformReader As IWaveformReader, caseSettings As ISpiceNetlistCaseSensitivitySettings, exporters As IMapper(Of Exporter), workingDirectory As String, instanceData As InstanceData)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.#ctor*
  nameWithType.vb: CircuitContext.CircuitContext(String, ICircuitContext, ICircuitEvaluator, ISimulationPreparations, IResultService, INameGenerator, ISpiceStatementsReader, IWaveformReader, ISpiceNetlistCaseSensitivitySettings, IMapper(Of Exporter), String, InstanceData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CircuitContext(System.String, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader, SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings, SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter), System.String, SpiceSharp.Circuits.InstanceData)
  name.vb: CircuitContext(String, ICircuitContext, ICircuitEvaluator, ISimulationPreparations, IResultService, INameGenerator, ISpiceStatementsReader, IWaveformReader, ISpiceNetlistCaseSensitivitySettings, IMapper(Of Exporter), String, InstanceData)
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory
  id: WorkingDirectory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: WorkingDirectory
  nameWithType: CircuitContext.WorkingDirectory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: WorkingDirectory
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 69
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets the working directory.\n"
  example: []
  syntax:
    content: public string WorkingDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WorkingDirectory As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WorkingDirectory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData
  id: InstanceData
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: InstanceData
  nameWithType: CircuitContext.InstanceData
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: InstanceData
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 74
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets instance data.\n"
  example: []
  syntax:
    content: public InstanceData InstanceData { get; }
    parameters: []
    return:
      type: SpiceSharp.Circuits.InstanceData
    content.vb: Public ReadOnly Property InstanceData As InstanceData
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.InstanceData
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name
  id: Name
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CircuitContext.Name
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Name
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 79
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets the name of context.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent
  id: Parent
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: CircuitContext.Parent
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Parent
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 84
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets the parent of context.\n"
  example: []
  syntax:
    content: public ICircuitContext Parent { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    content.vb: Public ReadOnly Property Parent As ICircuitContext
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Parent
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters
  id: Exporters
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Exporters
  nameWithType: CircuitContext.Exporters
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Exporters
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 89
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets exporter mapper.\n"
  example: []
  syntax:
    content: public IMapper<Exporter> Exporters { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
    content.vb: Public ReadOnly Property Exporters As IMapper(Of Exporter)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Exporters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator
  id: Evaluator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Evaluator
  nameWithType: CircuitContext.Evaluator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Evaluator
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 94
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets the evaluator.\n"
  example: []
  syntax:
    content: public ICircuitEvaluator Evaluator { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator
    content.vb: Public ReadOnly Property Evaluator As ICircuitEvaluator
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Evaluator
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations
  id: SimulationPreparations
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: SimulationPreparations
  nameWithType: CircuitContext.SimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationPreparations
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 99
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets simulation parameters.\n"
  example: []
  syntax:
    content: public ISimulationPreparations SimulationPreparations { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
    content.vb: Public ReadOnly Property SimulationPreparations As ISimulationPreparations
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SimulationPreparations
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits
  id: AvailableSubcircuits
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: AvailableSubcircuits
  nameWithType: CircuitContext.AvailableSubcircuits
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AvailableSubcircuits
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 104
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets available subcircuits in context.\n"
  example: []
  syntax:
    content: public ICollection<SubCircuit> AvailableSubcircuits { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit}
    content.vb: Public ReadOnly Property AvailableSubcircuits As ICollection(Of SubCircuit)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.AvailableSubcircuits
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result
  id: Result
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: CircuitContext.Result
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Result
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 109
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets the result service.\n"
  example: []
  syntax:
    content: public IResultService Result { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService
    content.vb: Public ReadOnly Property Result As IResultService
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Result
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator
  id: NameGenerator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: NameGenerator
  nameWithType: CircuitContext.NameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: NameGenerator
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 114
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGet the name generator.\n"
  example: []
  syntax:
    content: public INameGenerator NameGenerator { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
    content.vb: Public ReadOnly Property NameGenerator As INameGenerator
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.NameGenerator
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children
  id: Children
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: CircuitContext.Children
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Children
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 119
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets the children of the reading context.\n"
  example: []
  syntax:
    content: public ICollection<ICircuitContext> Children { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext}
    content.vb: Public ReadOnly Property Children As ICollection(Of ICircuitContext)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Children
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry
  id: ModelsRegistry
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: ModelsRegistry
  nameWithType: CircuitContext.ModelsRegistry
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ModelsRegistry
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 124
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets the stochastic models registry.\n"
  example: []
  syntax:
    content: public IModelsRegistry ModelsRegistry { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.IModelsRegistry
    content.vb: Public ReadOnly Property ModelsRegistry As IModelsRegistry
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.ModelsRegistry
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader
  id: StatementsReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: StatementsReader
  nameWithType: CircuitContext.StatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: StatementsReader
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 129
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets statements reader.\n"
  example: []
  syntax:
    content: public ISpiceStatementsReader StatementsReader { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
    content.vb: Public ReadOnly Property StatementsReader As ISpiceStatementsReader
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.StatementsReader
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader
  id: WaveformReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: WaveformReader
  nameWithType: CircuitContext.WaveformReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: WaveformReader
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 134
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets waveform reader.\n"
  example: []
  syntax:
    content: public IWaveformReader WaveformReader { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader
    content.vb: Public ReadOnly Property WaveformReader As IWaveformReader
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WaveformReader
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity
  id: CaseSensitivity
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: CaseSensitivity
  nameWithType: CircuitContext.CaseSensitivity
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CaseSensitivity
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 139
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nGets or sets the case sensitivity settings.\n"
  example: []
  syntax:
    content: public ISpiceNetlistCaseSensitivitySettings CaseSensitivity { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
    content.vb: Public ReadOnly Property CaseSensitivity As ISpiceNetlistCaseSensitivitySettings
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CaseSensitivity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage(System.String,System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage(System.String,System.String)
  id: SetICVoltage(System.String,System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: SetICVoltage(String, String)
  nameWithType: CircuitContext.SetICVoltage(String, String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetICVoltage
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 146
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nSets voltage initial condition for node.\n"
  example: []
  syntax:
    content: public void SetICVoltage(string nodeName, string expression)
    parameters:
    - id: nodeName
      type: System.String
      description: Name of node.
    - id: expression
      type: System.String
      description: Expression string.
    content.vb: Public Sub SetICVoltage(nodeName As String, expression As String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  id: CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: CreateNodes(Component, ParameterCollection)
  nameWithType: CircuitContext.CreateNodes(Component, ParameterCollection)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes(SpiceSharp.Components.Component, SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateNodes
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 167
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  summary: "\nCreates nodes for a component.\n"
  example: []
  syntax:
    content: public void CreateNodes(Component component, ParameterCollection parameters)
    parameters:
    - id: component
      type: SpiceSharp.Components.Component
      description: A component.
    - id: parameters
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
      description: Parameters of component.
    content.vb: Public Sub CreateNodes(component As Component, parameters As ParameterCollection)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  id: Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: Read(Statements, ISpiceStatementsOrderer)
  nameWithType: CircuitContext.Read(Statements, ISpiceStatementsOrderer)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Read
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 195
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public virtual void Read(Statements statements, ISpiceStatementsOrderer orderer)
    parameters:
    - id: statements
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
    - id: orderer
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
    content.vb: Public Overridable Sub Read(statements As Statements, orderer As ISpiceStatementsOrderer)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  id: SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: SetParameter(Entity, String, String, Boolean, Boolean)
  nameWithType: CircuitContext.SetParameter(Entity, String, String, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity, System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetParameter
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 214
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetParameter(Entity entity, string parameterName, string expression, bool beforeTemperature = true, bool onload = true)
    parameters:
    - id: entity
      type: SpiceSharp.Circuits.Entity
    - id: parameterName
      type: System.String
    - id: expression
      type: System.String
    - id: beforeTemperature
      type: System.Boolean
    - id: onload
      type: System.Boolean
    content.vb: Public Sub SetParameter(entity As Entity, parameterName As String, expression As String, beforeTemperature As Boolean = True, onload As Boolean = True)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  id: SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: SetParameter(Entity, String, Parameter, Boolean, Boolean)
  nameWithType: CircuitContext.SetParameter(Entity, String, Parameter, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter(SpiceSharp.Circuits.Entity, System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetParameter
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 255
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetParameter(Entity entity, string parameterName, Parameter parameter, bool beforeTemperature = true, bool onload = true)
    parameters:
    - id: entity
      type: SpiceSharp.Circuits.Entity
    - id: parameterName
      type: System.String
    - id: parameter
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    - id: beforeTemperature
      type: System.Boolean
    - id: onload
      type: System.Boolean
    content.vb: Public Sub SetParameter(entity As Entity, parameterName As String, parameter As Parameter, beforeTemperature As Boolean = True, onload As Boolean = True)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection
  id: CreateAvailableSubcircuitsCollection
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: CreateAvailableSubcircuitsCollection()
  nameWithType: CircuitContext.CreateAvailableSubcircuitsCollection()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateAvailableSubcircuitsCollection
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 310
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: protected ICollection<SubCircuit> CreateAvailableSubcircuitsCollection()
    return:
      type: System.Collections.Generic.ICollection{SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit}
    content.vb: Protected Function CreateAvailableSubcircuitsCollection As ICollection(Of SubCircuit)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry
  id: CreateModelsRegistry
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  langs:
  - csharp
  - vb
  name: CreateModelsRegistry()
  nameWithType: CircuitContext.CreateModelsRegistry()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateModelsRegistry
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/CircuitContext.cs
    startLine: 322
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: protected IModelsRegistry CreateModelsRegistry()
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.IModelsRegistry
    content.vb: Protected Function CreateModelsRegistry As IModelsRegistry
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitContext
  nameWithType: ICircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
  name: CircuitContext
  nameWithType: CircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.#ctor
  name: CircuitContext
  nameWithType: CircuitContext.CircuitContext
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CircuitContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ICircuitEvaluator
  nameWithType: ICircuitEvaluator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitEvaluator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ISimulationPreparations
  nameWithType: ISimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: IResultService
  nameWithType: IResultService
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.IResultService
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: INameGenerator
  nameWithType: INameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.INameGenerator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: ISpiceStatementsReader
  nameWithType: ISpiceStatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  name: IWaveformReader
  nameWithType: IWaveformReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.IWaveformReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: ISpiceNetlistCaseSensitivitySettings
  nameWithType: ISpiceNetlistCaseSensitivitySettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceNetlistCaseSensitivitySettings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter}
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  definition: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<Exporter>
  nameWithType: IMapper<Exporter>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter>
  nameWithType.vb: IMapper(Of Exporter)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter)
  name.vb: IMapper(Of Exporter)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
    name: Exporter
    nameWithType: Exporter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
    name: Exporter
    nameWithType: Exporter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Exporter
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.InstanceData
  commentId: T:SpiceSharp.Circuits.InstanceData
  parent: SpiceSharp.Circuits
  isExternal: true
  name: InstanceData
  nameWithType: InstanceData
  fullName: SpiceSharp.Circuits.InstanceData
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
  name: IMapper<TElement>
  nameWithType: IMapper<TElement>
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper<TElement>
  nameWithType.vb: IMapper(Of TElement)
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper(Of TElement)
  name.vb: IMapper(Of TElement)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper`1
    name: IMapper
    nameWithType: IMapper
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings.IMapper
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Mappings
- uid: SpiceSharp.Circuits
  commentId: N:SpiceSharp.Circuits
  isExternal: true
  name: SpiceSharp.Circuits
  nameWithType: SpiceSharp.Circuits
  fullName: SpiceSharp.Circuits
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory
  name: WorkingDirectory
  nameWithType: CircuitContext.WorkingDirectory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WorkingDirectory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WorkingDirectory
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WorkingDirectory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: WorkingDirectory
  nameWithType: ICircuitContext.WorkingDirectory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WorkingDirectory
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData
  name: InstanceData
  nameWithType: CircuitContext.InstanceData
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.InstanceData
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.InstanceData
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.InstanceData
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: InstanceData
  nameWithType: ICircuitContext.InstanceData
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.InstanceData
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name
  name: Name
  nameWithType: CircuitContext.Name
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Name
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent
  name: Parent
  nameWithType: CircuitContext.Parent
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Parent
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Parent
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Parent
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: Parent
  nameWithType: ICircuitContext.Parent
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Parent
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters
  name: Exporters
  nameWithType: CircuitContext.Exporters
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Exporters
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Exporters
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Exporters
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: Exporters
  nameWithType: ICircuitContext.Exporters
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Exporters
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator
  name: Evaluator
  nameWithType: CircuitContext.Evaluator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Evaluator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Evaluator
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Evaluator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: Evaluator
  nameWithType: ICircuitContext.Evaluator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Evaluator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations
  name: SimulationPreparations
  nameWithType: CircuitContext.SimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SimulationPreparations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SimulationPreparations
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SimulationPreparations
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: SimulationPreparations
  nameWithType: ICircuitContext.SimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SimulationPreparations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits
  name: AvailableSubcircuits
  nameWithType: CircuitContext.AvailableSubcircuits
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.AvailableSubcircuits
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.AvailableSubcircuits
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.AvailableSubcircuits
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: AvailableSubcircuits
  nameWithType: ICircuitContext.AvailableSubcircuits
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.AvailableSubcircuits
- uid: System.Collections.Generic.ICollection{SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit}
  commentId: T:System.Collections.Generic.ICollection{SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<SubCircuit>
  nameWithType: ICollection<SubCircuit>
  fullName: System.Collections.Generic.ICollection<SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit>
  nameWithType.vb: ICollection(Of SubCircuit)
  fullName.vb: System.Collections.Generic.ICollection(Of SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit)
  name.vb: ICollection(Of SubCircuit)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit
    name: SubCircuit
    nameWithType: SubCircuit
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit
    name: SubCircuit
    nameWithType: SubCircuit
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.SubCircuit
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result
  name: Result
  nameWithType: CircuitContext.Result
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Result
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Result
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Result
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: Result
  nameWithType: ICircuitContext.Result
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Result
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator
  name: NameGenerator
  nameWithType: CircuitContext.NameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.NameGenerator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.NameGenerator
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.NameGenerator
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: NameGenerator
  nameWithType: ICircuitContext.NameGenerator
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.NameGenerator
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children
  name: Children
  nameWithType: CircuitContext.Children
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Children
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Children
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Children
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: Children
  nameWithType: ICircuitContext.Children
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Children
- uid: System.Collections.Generic.ICollection{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext}
  commentId: T:System.Collections.Generic.ICollection{SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ICircuitContext>
  nameWithType: ICollection<ICircuitContext>
  fullName: System.Collections.Generic.ICollection<SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext>
  nameWithType.vb: ICollection(Of ICircuitContext)
  fullName.vb: System.Collections.Generic.ICollection(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext)
  name.vb: ICollection(Of ICircuitContext)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
    name: ICircuitContext
    nameWithType: ICircuitContext
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry
  name: ModelsRegistry
  nameWithType: CircuitContext.ModelsRegistry
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.ModelsRegistry
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.ModelsRegistry
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.ModelsRegistry
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: ModelsRegistry
  nameWithType: ICircuitContext.ModelsRegistry
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.ModelsRegistry
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.IModelsRegistry
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.IModelsRegistry
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  name: IModelsRegistry
  nameWithType: IModelsRegistry
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models.IModelsRegistry
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Models
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader
  name: StatementsReader
  nameWithType: CircuitContext.StatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.StatementsReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.StatementsReader
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.StatementsReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: StatementsReader
  nameWithType: ICircuitContext.StatementsReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.StatementsReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader
  name: WaveformReader
  nameWithType: CircuitContext.WaveformReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.WaveformReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WaveformReader
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WaveformReader
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: WaveformReader
  nameWithType: ICircuitContext.WaveformReader
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.WaveformReader
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity
  name: CaseSensitivity
  nameWithType: CircuitContext.CaseSensitivity
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CaseSensitivity
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CaseSensitivity
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CaseSensitivity
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: CaseSensitivity
  nameWithType: ICircuitContext.CaseSensitivity
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CaseSensitivity
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage
  name: SetICVoltage
  nameWithType: CircuitContext.SetICVoltage
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetICVoltage
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage(System.String,System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage(System.String,System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  isExternal: true
  name: SetICVoltage(String, String)
  nameWithType: ICircuitContext.SetICVoltage(String, String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage(System.String, System.String)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage(System.String,System.String)
    name: SetICVoltage
    nameWithType: ICircuitContext.SetICVoltage
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage(System.String,System.String)
    name: SetICVoltage
    nameWithType: ICircuitContext.SetICVoltage
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetICVoltage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes
  name: CreateNodes
  nameWithType: CircuitContext.CreateNodes
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateNodes
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  isExternal: true
  name: CreateNodes(Component, ParameterCollection)
  nameWithType: ICircuitContext.CreateNodes(Component, ParameterCollection)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes(SpiceSharp.Components.Component, SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
    name: CreateNodes
    nameWithType: ICircuitContext.CreateNodes
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Components.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharp.Components.Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    name: ParameterCollection
    nameWithType: ParameterCollection
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes(SpiceSharp.Components.Component,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
    name: CreateNodes
    nameWithType: ICircuitContext.CreateNodes
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.CreateNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Components.Component
    name: Component
    nameWithType: Component
    fullName: SpiceSharp.Components.Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    name: ParameterCollection
    nameWithType: ParameterCollection
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Components.Component
  commentId: T:SpiceSharp.Components.Component
  parent: SpiceSharp.Components
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: SpiceSharp.Components.Component
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
- uid: SpiceSharp.Components
  commentId: N:SpiceSharp.Components
  isExternal: true
  name: SpiceSharp.Components
  nameWithType: SpiceSharp.Components
  fullName: SpiceSharp.Components
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read
  name: Read
  nameWithType: CircuitContext.Read
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.Read
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  name: Read(Statements, ISpiceStatementsOrderer)
  nameWithType: ICircuitContext.Read(Statements, ISpiceStatementsOrderer)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements, SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
    name: Read
    nameWithType: ICircuitContext.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
    name: Statements
    nameWithType: Statements
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
    name: ISpiceStatementsOrderer
    nameWithType: ISpiceStatementsOrderer
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements,SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer)
    name: Read
    nameWithType: ICircuitContext.Read
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
    name: Statements
    nameWithType: Statements
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
    name: ISpiceStatementsOrderer
    nameWithType: ISpiceStatementsOrderer
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Statements
  nameWithType: Statements
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: ISpiceStatementsOrderer
  nameWithType: ISpiceStatementsOrderer
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter
  name: SetParameter
  nameWithType: CircuitContext.SetParameter
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.SetParameter
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  isExternal: true
  name: SetParameter(Entity, String, String, Boolean, Boolean)
  nameWithType: ICircuitContext.SetParameter(Entity, String, String, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity, System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ICircuitContext.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ICircuitContext.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity
  commentId: T:SpiceSharp.Circuits.Entity
  parent: SpiceSharp.Circuits
  isExternal: true
  name: Entity
  nameWithType: Entity
  fullName: SpiceSharp.Circuits.Entity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext
  isExternal: true
  name: SetParameter(Entity, String, Parameter, Boolean, Boolean)
  nameWithType: ICircuitContext.SetParameter(Entity, String, Parameter, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity, System.String, SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ICircuitContext.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter(SpiceSharp.Circuits.Entity,System.String,SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ICircuitContext.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ICircuitContext.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Parameter
  nameWithType: Parameter
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameter
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection
  name: CreateAvailableSubcircuitsCollection
  nameWithType: CircuitContext.CreateAvailableSubcircuitsCollection
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateAvailableSubcircuitsCollection
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry
  name: CreateModelsRegistry
  nameWithType: CircuitContext.CreateModelsRegistry
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.CircuitContext.CreateModelsRegistry
