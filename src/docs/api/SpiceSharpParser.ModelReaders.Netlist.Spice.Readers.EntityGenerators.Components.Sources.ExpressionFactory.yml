### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory
  id: ExpressionFactory
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression(System.String,System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter})
  langs:
  - csharp
  - vb
  name: ExpressionFactory
  nameWithType: ExpressionFactory
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ExpressionFactory
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
    startLine: 8
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  syntax:
    content: public class ExpressionFactory
    content.vb: Public Class ExpressionFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression(System.String,System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression(System.String,System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter})
  id: CreateTableExpression(System.String,System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory
  langs:
  - csharp
  - vb
  name: CreateTableExpression(String, IEnumerable<PointParameter>)
  nameWithType: ExpressionFactory.CreateTableExpression(String, IEnumerable<PointParameter>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression(System.String, System.Collections.Generic.IEnumerable<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreateTableExpression
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
    startLine: 10
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  syntax:
    content: public static string CreateTableExpression(string tableParameter, IEnumerable<PointParameter> points)
    parameters:
    - id: tableParameter
      type: System.String
    - id: points
      type: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
    return:
      type: System.String
    content.vb: Public Shared Function CreateTableExpression(tableParameter As String, points As IEnumerable(Of PointParameter)) As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression*
  nameWithType.vb: ExpressionFactory.CreateTableExpression(String, IEnumerable(Of PointParameter))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression(System.String, System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter))
  name.vb: CreateTableExpression(String, IEnumerable(Of PointParameter))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  id: CreatePolyVoltageExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory
  langs:
  - csharp
  - vb
  name: CreatePolyVoltageExpression(Int32, ParameterCollection)
  nameWithType: ExpressionFactory.CreatePolyVoltageExpression(Int32, ParameterCollection)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression(System.Int32, SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreatePolyVoltageExpression
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
    startLine: 16
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  syntax:
    content: public static string CreatePolyVoltageExpression(int dimension, ParameterCollection polyArguments)
    parameters:
    - id: dimension
      type: System.Int32
    - id: polyArguments
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    return:
      type: System.String
    content.vb: Public Shared Function CreatePolyVoltageExpression(dimension As Integer, polyArguments As ParameterCollection) As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  id: CreatePolyCurrentExpression(System.Int32,SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory
  langs:
  - csharp
  - vb
  name: CreatePolyCurrentExpression(Int32, ParameterCollection)
  nameWithType: ExpressionFactory.CreatePolyCurrentExpression(Int32, ParameterCollection)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression(System.Int32, SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: CreatePolyCurrentExpression
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/EntityGenerators/Components/Sources/ExpressionFactory.cs
    startLine: 73
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  syntax:
    content: public static string CreatePolyCurrentExpression(int dimension, ParameterCollection polyArguments)
    parameters:
    - id: dimension
      type: System.Int32
    - id: polyArguments
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
    return:
      type: System.String
    content.vb: Public Shared Function CreatePolyCurrentExpression(dimension As Integer, polyArguments As ParameterCollection) As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression
  name: CreateTableExpression
  nameWithType: ExpressionFactory.CreateTableExpression
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreateTableExpression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  commentId: T:System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PointParameter>
  nameWithType: IEnumerable<PointParameter>
  fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter>
  nameWithType.vb: IEnumerable(Of PointParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter)
  name.vb: IEnumerable(Of PointParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
    name: PointParameter
    nameWithType: PointParameter
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Parameters.PointParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression
  name: CreatePolyVoltageExpression
  nameWithType: ExpressionFactory.CreatePolyVoltageExpression
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyVoltageExpression
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.ParameterCollection
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression
  name: CreatePolyCurrentExpression
  nameWithType: ExpressionFactory.CreatePolyCurrentExpression
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.EntityGenerators.Components.Sources.ExpressionFactory.CreatePolyCurrentExpression
