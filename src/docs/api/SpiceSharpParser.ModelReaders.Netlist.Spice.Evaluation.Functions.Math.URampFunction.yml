### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction
  id: URampFunction
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.#ctor
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  langs:
  - csharp
  - vb
  name: URampFunction
  nameWithType: URampFunction
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Evaluation/Functions/Math/URampFunction.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: URampFunction
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Evaluation/Functions/Math/URampFunction.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  syntax:
    content: 'public class URampFunction : Function<double, double>, IFunction<double, double>, IFunction'
    content.vb: >-
      Public Class URampFunction
          Inherits
           Function  (Of Double, Double)  Implements IFunction(Of Double, Double), IFunction
  inheritance:
  - System.Object
  - SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}
  implements:
  - SpiceSharpParser.Common.Evaluation.IFunction{System.Double,System.Double}
  - SpiceSharpParser.Common.Evaluation.IFunction
  inheritedMembers:
  - SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Name
  - SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.ArgumentsCount
  - SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.#ctor
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.#ctor
  id: '#ctor'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction
  langs:
  - csharp
  - vb
  name: URampFunction()
  nameWithType: URampFunction.URampFunction()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.URampFunction()
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Evaluation/Functions/Math/URampFunction.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Evaluation/Functions/Math/URampFunction.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  syntax:
    content: public URampFunction()
    content.vb: Public Sub New
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  id: Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction
  langs:
  - csharp
  - vb
  name: Logic(String, Double[], EvaluationContext)
  nameWithType: URampFunction.Logic(String, Double[], EvaluationContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic(System.String, System.Double[], SpiceSharpParser.Common.Evaluation.EvaluationContext)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Evaluation/Functions/Math/URampFunction.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Logic
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Evaluation/Functions/Math/URampFunction.cs
    startLine: 13
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  syntax:
    content: public override double Logic(string image, double[] args, EvaluationContext context)
    parameters:
    - id: image
      type: System.String
    - id: args
      type: System.Double[]
    - id: context
      type: SpiceSharpParser.Common.Evaluation.EvaluationContext
    return:
      type: System.Double
    content.vb: Public Overrides Function Logic(image As String, args As Double(), context As EvaluationContext) As Double
  overridden: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic*
  nameWithType.vb: URampFunction.Logic(String, Double(), EvaluationContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic(System.String, System.Double(), SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name.vb: Logic(String, Double(), EvaluationContext)
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}
  commentId: T:SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}
  parent: SpiceSharpParser.Common.Evaluation
  definition: SpiceSharpParser.Common.Evaluation.Function`2
  name: Function<Double, Double>
  nameWithType: Function<Double, Double>
  fullName: SpiceSharpParser.Common.Evaluation.Function<System.Double, System.Double>
  nameWithType.vb: Function(Of Double, Double)
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of System.Double, System.Double)
  name.vb: Function(Of Double, Double)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2
    name: Function
    nameWithType: Function
    fullName: SpiceSharpParser.Common.Evaluation.Function
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2
    name: Function
    nameWithType: Function
    fullName: SpiceSharpParser.Common.Evaluation.Function
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.IFunction{System.Double,System.Double}
  commentId: T:SpiceSharpParser.Common.Evaluation.IFunction{System.Double,System.Double}
  parent: SpiceSharpParser.Common.Evaluation
  definition: SpiceSharpParser.Common.Evaluation.IFunction`2
  name: IFunction<Double, Double>
  nameWithType: IFunction<Double, Double>
  fullName: SpiceSharpParser.Common.Evaluation.IFunction<System.Double, System.Double>
  nameWithType.vb: IFunction(Of Double, Double)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IFunction(Of System.Double, System.Double)
  name.vb: IFunction(Of Double, Double)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.IFunction
  commentId: T:SpiceSharpParser.Common.Evaluation.IFunction
  parent: SpiceSharpParser.Common.Evaluation
  name: IFunction
  nameWithType: IFunction
  fullName: SpiceSharpParser.Common.Evaluation.IFunction
- uid: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Name
  commentId: P:SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Name
  parent: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}
  definition: SpiceSharpParser.Common.Evaluation.Function`2.Name
  name: Name
  nameWithType: Function<Double, Double>.Name
  fullName: SpiceSharpParser.Common.Evaluation.Function<System.Double, System.Double>.Name
  nameWithType.vb: Function(Of Double, Double).Name
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of System.Double, System.Double).Name
- uid: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.ArgumentsCount
  commentId: P:SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.ArgumentsCount
  parent: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}
  definition: SpiceSharpParser.Common.Evaluation.Function`2.ArgumentsCount
  name: ArgumentsCount
  nameWithType: Function<Double, Double>.ArgumentsCount
  fullName: SpiceSharpParser.Common.Evaluation.Function<System.Double, System.Double>.ArgumentsCount
  nameWithType.vb: Function(Of Double, Double).ArgumentsCount
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of System.Double, System.Double).ArgumentsCount
- uid: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}.Logic(System.String,System.Double[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  parent: SpiceSharpParser.Common.Evaluation.Function{System.Double,System.Double}
  definition: SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name: Logic(String, Double[], EvaluationContext)
  nameWithType: Function<Double, Double>.Logic(String, Double[], EvaluationContext)
  fullName: SpiceSharpParser.Common.Evaluation.Function<System.Double, System.Double>.Logic(System.String, System.Double[], SpiceSharpParser.Common.Evaluation.EvaluationContext)
  nameWithType.vb: Function(Of Double, Double).Logic(String, Double(), EvaluationContext)
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of System.Double, System.Double).Logic(System.String, System.Double(), SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name.vb: Logic(String, Double(), EvaluationContext)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: Function<Double, Double>.Logic
    fullName: SpiceSharpParser.Common.Evaluation.Function<System.Double, System.Double>.Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: Function(Of Double, Double).Logic
    fullName: SpiceSharpParser.Common.Evaluation.Function(Of System.Double, System.Double).Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Common.Evaluation.Function`2
  commentId: T:SpiceSharpParser.Common.Evaluation.Function`2
  name: Function<TInputArgumentType, TOutputType>
  nameWithType: Function<TInputArgumentType, TOutputType>
  fullName: SpiceSharpParser.Common.Evaluation.Function<TInputArgumentType, TOutputType>
  nameWithType.vb: Function(Of TInputArgumentType, TOutputType)
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of TInputArgumentType, TOutputType)
  name.vb: Function(Of TInputArgumentType, TOutputType)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2
    name: Function
    nameWithType: Function
    fullName: SpiceSharpParser.Common.Evaluation.Function
  - name: <
    nameWithType: <
    fullName: <
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2
    name: Function
    nameWithType: Function
    fullName: SpiceSharpParser.Common.Evaluation.Function
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation
  commentId: N:SpiceSharpParser.Common.Evaluation
  name: SpiceSharpParser.Common.Evaluation
  nameWithType: SpiceSharpParser.Common.Evaluation
  fullName: SpiceSharpParser.Common.Evaluation
- uid: SpiceSharpParser.Common.Evaluation.IFunction`2
  commentId: T:SpiceSharpParser.Common.Evaluation.IFunction`2
  name: IFunction<TInputArgumentType, TOutputType>
  nameWithType: IFunction<TInputArgumentType, TOutputType>
  fullName: SpiceSharpParser.Common.Evaluation.IFunction<TInputArgumentType, TOutputType>
  nameWithType.vb: IFunction(Of TInputArgumentType, TOutputType)
  fullName.vb: SpiceSharpParser.Common.Evaluation.IFunction(Of TInputArgumentType, TOutputType)
  name.vb: IFunction(Of TInputArgumentType, TOutputType)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: <
    nameWithType: <
    fullName: <
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.IFunction`2
    name: IFunction
    nameWithType: IFunction
    fullName: SpiceSharpParser.Common.Evaluation.IFunction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutputType
    nameWithType: TOutputType
    fullName: TOutputType
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Common.Evaluation.Function`2.Name
  commentId: P:SpiceSharpParser.Common.Evaluation.Function`2.Name
  name: Name
  nameWithType: Function<TInputArgumentType, TOutputType>.Name
  fullName: SpiceSharpParser.Common.Evaluation.Function<TInputArgumentType, TOutputType>.Name
  nameWithType.vb: Function(Of TInputArgumentType, TOutputType).Name
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of TInputArgumentType, TOutputType).Name
- uid: SpiceSharpParser.Common.Evaluation.Function`2.ArgumentsCount
  commentId: P:SpiceSharpParser.Common.Evaluation.Function`2.ArgumentsCount
  name: ArgumentsCount
  nameWithType: Function<TInputArgumentType, TOutputType>.ArgumentsCount
  fullName: SpiceSharpParser.Common.Evaluation.Function<TInputArgumentType, TOutputType>.ArgumentsCount
  nameWithType.vb: Function(Of TInputArgumentType, TOutputType).ArgumentsCount
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of TInputArgumentType, TOutputType).ArgumentsCount
- uid: SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
  isExternal: true
  name: Logic(String, TInputArgumentType[], EvaluationContext)
  nameWithType: Function<TInputArgumentType, TOutputType>.Logic(String, TInputArgumentType[], EvaluationContext)
  fullName: SpiceSharpParser.Common.Evaluation.Function<TInputArgumentType, TOutputType>.Logic(System.String, TInputArgumentType[], SpiceSharpParser.Common.Evaluation.EvaluationContext)
  nameWithType.vb: Function(Of TInputArgumentType, TOutputType).Logic(String, TInputArgumentType(), EvaluationContext)
  fullName.vb: SpiceSharpParser.Common.Evaluation.Function(Of TInputArgumentType, TOutputType).Logic(System.String, TInputArgumentType(), SpiceSharpParser.Common.Evaluation.EvaluationContext)
  name.vb: Logic(String, TInputArgumentType(), EvaluationContext)
  spec.csharp:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: Function<TInputArgumentType, TOutputType>.Logic
    fullName: SpiceSharpParser.Common.Evaluation.Function<TInputArgumentType, TOutputType>.Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.Common.Evaluation.Function`2.Logic(System.String,`0[],SpiceSharpParser.Common.Evaluation.EvaluationContext)
    name: Logic
    nameWithType: Function(Of TInputArgumentType, TOutputType).Logic
    fullName: SpiceSharpParser.Common.Evaluation.Function(Of TInputArgumentType, TOutputType).Logic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TInputArgumentType
    nameWithType: TInputArgumentType
    fullName: TInputArgumentType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
    name: EvaluationContext
    nameWithType: EvaluationContext
    fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.#ctor
  name: URampFunction
  nameWithType: URampFunction.URampFunction
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.URampFunction
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic
  name: Logic
  nameWithType: URampFunction.Logic
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Evaluation.Functions.Math.URampFunction.Logic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
  commentId: T:SpiceSharpParser.Common.Evaluation.EvaluationContext
  parent: SpiceSharpParser.Common.Evaluation
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
