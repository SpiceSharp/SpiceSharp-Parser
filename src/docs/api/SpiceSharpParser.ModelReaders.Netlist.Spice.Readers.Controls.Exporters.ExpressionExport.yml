### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  id: ExpressionExport
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.#ctor(System.String,System.String,SpiceSharpParser.Common.Evaluation.EvaluationContext)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit
  langs:
  - csharp
  - vb
  name: ExpressionExport
  nameWithType: ExpressionExport
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ExpressionExport
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  summary: "\nDescribes a quantity that can be exported using data from expression.\n"
  example: []
  syntax:
    content: 'public class ExpressionExport : Export'
    content.vb: >-
      Public Class ExpressionExport
          Inherits Export
  inheritance:
  - System.Object
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  inheritedMembers:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Simulation
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Name
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ExceptionsEnabled
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.#ctor(System.String,System.String,SpiceSharpParser.Common.Evaluation.EvaluationContext)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.#ctor(System.String,System.String,SpiceSharpParser.Common.Evaluation.EvaluationContext)
  id: '#ctor(System.String,System.String,SpiceSharpParser.Common.Evaluation.EvaluationContext)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  langs:
  - csharp
  - vb
  name: ExpressionExport(String, String, EvaluationContext)
  nameWithType: ExpressionExport.ExpressionExport(String, String, EvaluationContext)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionExport(System.String, System.String, SpiceSharpParser.Common.Evaluation.EvaluationContext)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
    startLine: 15
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ExpressionExport(string name, string expressionName, EvaluationContext context)
    parameters:
    - id: name
      type: System.String
      description: Name of export.
    - id: expressionName
      type: System.String
      description: Name of expression.
    - id: context
      type: SpiceSharpParser.Common.Evaluation.EvaluationContext
      description: ''
    content.vb: Public Sub New(name As String, expressionName As String, context As EvaluationContext)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName
  id: ExpressionName
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  langs:
  - csharp
  - vb
  name: ExpressionName
  nameWithType: ExpressionExport.ExpressionName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ExpressionName
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
    startLine: 27
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  summary: "\nGets the expression name.\n"
  example: []
  syntax:
    content: public string ExpressionName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ExpressionName As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context
  id: Context
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: ExpressionExport.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Context
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
    startLine: 29
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  syntax:
    content: public EvaluationContext Context { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Common.Evaluation.EvaluationContext
    content.vb: Public ReadOnly Property Context As EvaluationContext
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit
  id: QuantityUnit
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  langs:
  - csharp
  - vb
  name: QuantityUnit
  nameWithType: ExpressionExport.QuantityUnit
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: QuantityUnit
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
    startLine: 34
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  summary: "\nGets the export unit.\n"
  example: []
  syntax:
    content: public override string QuantityUnit { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property QuantityUnit As String
  overridden: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.QuantityUnit
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract
  id: Extract
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  langs:
  - csharp
  - vb
  name: Extract()
  nameWithType: ExpressionExport.Extract()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Extract
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Exporters/ExpressionExport.cs
    startLine: 42
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  summary: "\nExtract the quantity from simulated data.\n"
  example: []
  syntax:
    content: public override double Extract()
    return:
      type: System.Double
      description: "\nA quantity.\n"
    content.vb: Public Overrides Function Extract As Double
  overridden: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters
  name: Export
  nameWithType: Export
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Simulation
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Simulation
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  name: Simulation
  nameWithType: Export.Simulation
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Simulation
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Name
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Name
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  name: Name
  nameWithType: Export.Name
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Name
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ExceptionsEnabled
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ExceptionsEnabled
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  name: ExceptionsEnabled
  nameWithType: Export.ExceptionsEnabled
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ExceptionsEnabled
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  name: ToString()
  nameWithType: Export.ToString()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString()
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
    name: ToString
    nameWithType: Export.ToString
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
    name: ToString
    nameWithType: Export.ToString
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
  name: ExpressionExport
  nameWithType: ExpressionExport
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.#ctor
  name: ExpressionExport
  nameWithType: ExpressionExport.ExpressionExport
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionExport
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.Common.Evaluation.EvaluationContext
  commentId: T:SpiceSharpParser.Common.Evaluation.EvaluationContext
  parent: SpiceSharpParser.Common.Evaluation
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: SpiceSharpParser.Common.Evaluation.EvaluationContext
- uid: SpiceSharpParser.Common.Evaluation
  commentId: N:SpiceSharpParser.Common.Evaluation
  name: SpiceSharpParser.Common.Evaluation
  nameWithType: SpiceSharpParser.Common.Evaluation
  fullName: SpiceSharpParser.Common.Evaluation
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName
  name: ExpressionName
  nameWithType: ExpressionExport.ExpressionName
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.ExpressionName
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context
  name: Context
  nameWithType: ExpressionExport.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Context
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.QuantityUnit
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.QuantityUnit
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  name: QuantityUnit
  nameWithType: Export.QuantityUnit
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.QuantityUnit
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit
  name: QuantityUnit
  nameWithType: ExpressionExport.QuantityUnit
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.QuantityUnit
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export
  name: Extract()
  nameWithType: Export.Extract()
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract()
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
    name: Extract
    nameWithType: Export.Extract
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
    name: Extract
    nameWithType: Export.Extract
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.Export.Extract
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract
  name: Extract
  nameWithType: ExpressionExport.Extract
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Exporters.ExpressionExport.Extract
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
