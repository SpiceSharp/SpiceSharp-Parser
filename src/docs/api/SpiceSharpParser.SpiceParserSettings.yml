### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.SpiceParserSettings
  commentId: T:SpiceSharpParser.SpiceParserSettings
  id: SpiceParserSettings
  parent: SpiceSharpParser
  children:
  - SpiceSharpParser.SpiceParserSettings.#ctor
  - SpiceSharpParser.SpiceParserSettings.Lexing
  - SpiceSharpParser.SpiceParserSettings.Parsing
  - SpiceSharpParser.SpiceParserSettings.Reading
  - SpiceSharpParser.SpiceParserSettings.WorkingDirectory
  langs:
  - csharp
  - vb
  name: SpiceParserSettings
  nameWithType: SpiceParserSettings
  fullName: SpiceSharpParser.SpiceParserSettings
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/SpiceParserSettings.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SpiceParserSettings
    path: ../SpiceSharpParser/SpiceParserSettings.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser
  summary: "\nSettings for the SPICE netlist parser.\n"
  example: []
  syntax:
    content: public class SpiceParserSettings
    content.vb: Public Class SpiceParserSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.SpiceParserSettings.#ctor
  commentId: M:SpiceSharpParser.SpiceParserSettings.#ctor
  id: '#ctor'
  parent: SpiceSharpParser.SpiceParserSettings
  langs:
  - csharp
  - vb
  name: SpiceParserSettings()
  nameWithType: SpiceParserSettings.SpiceParserSettings()
  fullName: SpiceSharpParser.SpiceParserSettings.SpiceParserSettings()
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/SpiceParserSettings.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/SpiceParserSettings.cs
    startLine: 11
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser
  syntax:
    content: public SpiceParserSettings()
    content.vb: Public Sub New
  overload: SpiceSharpParser.SpiceParserSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.SpiceParserSettings.WorkingDirectory
  commentId: P:SpiceSharpParser.SpiceParserSettings.WorkingDirectory
  id: WorkingDirectory
  parent: SpiceSharpParser.SpiceParserSettings
  langs:
  - csharp
  - vb
  name: WorkingDirectory
  nameWithType: SpiceParserSettings.WorkingDirectory
  fullName: SpiceSharpParser.SpiceParserSettings.WorkingDirectory
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/SpiceParserSettings.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: WorkingDirectory
    path: ../SpiceSharpParser/SpiceParserSettings.cs
    startLine: 21
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser
  summary: "\nGets or sets a path of working directory.\n"
  example: []
  syntax:
    content: public string WorkingDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WorkingDirectory As String
  overload: SpiceSharpParser.SpiceParserSettings.WorkingDirectory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.SpiceParserSettings.Lexing
  commentId: P:SpiceSharpParser.SpiceParserSettings.Lexing
  id: Lexing
  parent: SpiceSharpParser.SpiceParserSettings
  langs:
  - csharp
  - vb
  name: Lexing
  nameWithType: SpiceParserSettings.Lexing
  fullName: SpiceSharpParser.SpiceParserSettings.Lexing
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/SpiceParserSettings.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Lexing
    path: ../SpiceSharpParser/SpiceParserSettings.cs
    startLine: 26
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser
  summary: "\nGets the SPICE netlist lexer settings.\n"
  example: []
  syntax:
    content: public SpiceLexerSettings Lexing { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
    content.vb: Public ReadOnly Property Lexing As SpiceLexerSettings
  overload: SpiceSharpParser.SpiceParserSettings.Lexing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.SpiceParserSettings.Parsing
  commentId: P:SpiceSharpParser.SpiceParserSettings.Parsing
  id: Parsing
  parent: SpiceSharpParser.SpiceParserSettings
  langs:
  - csharp
  - vb
  name: Parsing
  nameWithType: SpiceParserSettings.Parsing
  fullName: SpiceSharpParser.SpiceParserSettings.Parsing
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/SpiceParserSettings.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Parsing
    path: ../SpiceSharpParser/SpiceParserSettings.cs
    startLine: 31
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser
  summary: "\nGets the SPICE netlist parser settings.\n"
  example: []
  syntax:
    content: public SingleSpiceNetlistParserSettings Parsing { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
    content.vb: Public ReadOnly Property Parsing As SingleSpiceNetlistParserSettings
  overload: SpiceSharpParser.SpiceParserSettings.Parsing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.SpiceParserSettings.Reading
  commentId: P:SpiceSharpParser.SpiceParserSettings.Reading
  id: Reading
  parent: SpiceSharpParser.SpiceParserSettings
  langs:
  - csharp
  - vb
  name: Reading
  nameWithType: SpiceParserSettings.Reading
  fullName: SpiceSharpParser.SpiceParserSettings.Reading
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/SpiceParserSettings.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Reading
    path: ../SpiceSharpParser/SpiceParserSettings.cs
    startLine: 36
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser
  summary: "\nGets the SPICE netlist model reader settings.\n"
  example: []
  syntax:
    content: public SpiceNetlistReaderSettings Reading { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
    content.vb: Public ReadOnly Property Reading As SpiceNetlistReaderSettings
  overload: SpiceSharpParser.SpiceParserSettings.Reading*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SpiceSharpParser
  commentId: N:SpiceSharpParser
  name: SpiceSharpParser
  nameWithType: SpiceSharpParser
  fullName: SpiceSharpParser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.SpiceParserSettings.#ctor*
  commentId: Overload:SpiceSharpParser.SpiceParserSettings.#ctor
  name: SpiceParserSettings
  nameWithType: SpiceParserSettings.SpiceParserSettings
  fullName: SpiceSharpParser.SpiceParserSettings.SpiceParserSettings
- uid: SpiceSharpParser.SpiceParserSettings.WorkingDirectory*
  commentId: Overload:SpiceSharpParser.SpiceParserSettings.WorkingDirectory
  name: WorkingDirectory
  nameWithType: SpiceParserSettings.WorkingDirectory
  fullName: SpiceSharpParser.SpiceParserSettings.WorkingDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.SpiceParserSettings.Lexing*
  commentId: Overload:SpiceSharpParser.SpiceParserSettings.Lexing
  name: Lexing
  nameWithType: SpiceParserSettings.Lexing
  fullName: SpiceSharpParser.SpiceParserSettings.Lexing
- uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
  commentId: T:SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
  parent: SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceLexerSettings
  nameWithType: SpiceLexerSettings
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceLexerSettings
- uid: SpiceSharpParser.Lexers.Netlist.Spice
  commentId: N:SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceSharpParser.Lexers.Netlist.Spice
  nameWithType: SpiceSharpParser.Lexers.Netlist.Spice
  fullName: SpiceSharpParser.Lexers.Netlist.Spice
- uid: SpiceSharpParser.SpiceParserSettings.Parsing*
  commentId: Overload:SpiceSharpParser.SpiceParserSettings.Parsing
  name: Parsing
  nameWithType: SpiceParserSettings.Parsing
  fullName: SpiceSharpParser.SpiceParserSettings.Parsing
- uid: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
  parent: SpiceSharpParser.Parsers.Netlist.Spice
  name: SingleSpiceNetlistParserSettings
  nameWithType: SingleSpiceNetlistParserSettings
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.SingleSpiceNetlistParserSettings
- uid: SpiceSharpParser.Parsers.Netlist.Spice
  commentId: N:SpiceSharpParser.Parsers.Netlist.Spice
  name: SpiceSharpParser.Parsers.Netlist.Spice
  nameWithType: SpiceSharpParser.Parsers.Netlist.Spice
  fullName: SpiceSharpParser.Parsers.Netlist.Spice
- uid: SpiceSharpParser.SpiceParserSettings.Reading*
  commentId: Overload:SpiceSharpParser.SpiceParserSettings.Reading
  name: Reading
  nameWithType: SpiceParserSettings.Reading
  fullName: SpiceSharpParser.SpiceParserSettings.Reading
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceNetlistReaderSettings
  nameWithType: SpiceNetlistReaderSettings
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.SpiceNetlistReaderSettings
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
