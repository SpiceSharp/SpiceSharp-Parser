### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  id: ISpiceStatementsOrderer
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  langs:
  - csharp
  - vb
  name: ISpiceStatementsOrderer
  nameWithType: ISpiceStatementsOrderer
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  type: Interface
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/ISpiceStatementsOrderer.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ISpiceStatementsOrderer
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/ISpiceStatementsOrderer.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice
  syntax:
    content: public interface ISpiceStatementsOrderer
    content.vb: Public Interface ISpiceStatementsOrderer
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  id: Order(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer
  langs:
  - csharp
  - vb
  name: Order(Statements)
  nameWithType: ISpiceStatementsOrderer.Order(Statements)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order(SpiceSharpParser.Models.Netlist.Spice.Objects.Statements)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/ISpiceStatementsOrderer.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Order
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/ISpiceStatementsOrderer.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice
  summary: "\nOrders statements for reading.\n"
  example: []
  syntax:
    content: IEnumerable<Statement> Order(Statements statements)
    parameters:
    - id: statements
      type: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
      description: Statement to order.
    return:
      type: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Statement}
      description: "\nOrdered statements.\n"
    content.vb: Function Order(statements As Statements) As IEnumerable(Of Statement)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order*
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice
  name: SpiceSharpParser.ModelReaders.Netlist.Spice
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order
  name: Order
  nameWithType: ISpiceStatementsOrderer.Order
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.ISpiceStatementsOrderer.Order
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
  parent: SpiceSharpParser.Models.Netlist.Spice.Objects
  name: Statements
  nameWithType: Statements
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statements
- uid: System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Statement}
  commentId: T:System.Collections.Generic.IEnumerable{SpiceSharpParser.Models.Netlist.Spice.Objects.Statement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Statement>
  nameWithType: IEnumerable<Statement>
  fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Models.Netlist.Spice.Objects.Statement>
  nameWithType.vb: IEnumerable(Of Statement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Models.Netlist.Spice.Objects.Statement)
  name.vb: IEnumerable(Of Statement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
    name: Statement
    nameWithType: Statement
    fullName: SpiceSharpParser.Models.Netlist.Spice.Objects.Statement
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Models.Netlist.Spice.Objects
  commentId: N:SpiceSharpParser.Models.Netlist.Spice.Objects
  name: SpiceSharpParser.Models.Netlist.Spice.Objects
  nameWithType: SpiceSharpParser.Models.Netlist.Spice.Objects
  fullName: SpiceSharpParser.Models.Netlist.Spice.Objects
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
