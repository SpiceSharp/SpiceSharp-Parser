### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  commentId: T:SpiceSharpParser.Lexers.LexerRuleReturnDecision
  id: LexerRuleReturnDecision
  parent: SpiceSharpParser.Lexers
  children:
  - SpiceSharpParser.Lexers.LexerRuleReturnDecision.IgnoreToken
  - SpiceSharpParser.Lexers.LexerRuleReturnDecision.ReturnToken
  langs:
  - csharp
  - vb
  name: LexerRuleReturnDecision
  nameWithType: LexerRuleReturnDecision
  fullName: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  type: Enum
  source:
    remote:
      path: src/SpiceSharpParser/Lexers/LexerRuleReturnDecision.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: LexerRuleReturnDecision
    path: ../SpiceSharpParser/Lexers/LexerRuleReturnDecision.cs
    startLine: 5
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Lexers
  summary: "\nEnumeration that specifies whether a matched lexer token rule should return or ignore token.\n"
  example: []
  syntax:
    content: public enum LexerRuleReturnDecision
    content.vb: Public Enum LexerRuleReturnDecision
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SpiceSharpParser.Lexers.LexerRuleReturnDecision.ReturnToken
  commentId: F:SpiceSharpParser.Lexers.LexerRuleReturnDecision.ReturnToken
  id: ReturnToken
  parent: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  langs:
  - csharp
  - vb
  name: ReturnToken
  nameWithType: LexerRuleReturnDecision.ReturnToken
  fullName: SpiceSharpParser.Lexers.LexerRuleReturnDecision.ReturnToken
  type: Field
  source:
    remote:
      path: src/SpiceSharpParser/Lexers/LexerRuleReturnDecision.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ReturnToken
    path: ../SpiceSharpParser/Lexers/LexerRuleReturnDecision.cs
    startLine: 10
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Lexers
  summary: "\nSpecifies that the token is returned if it&apos;s a best match.\n"
  example: []
  syntax:
    content: ReturnToken = 0
    return:
      type: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SpiceSharpParser.Lexers.LexerRuleReturnDecision.IgnoreToken
  commentId: F:SpiceSharpParser.Lexers.LexerRuleReturnDecision.IgnoreToken
  id: IgnoreToken
  parent: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  langs:
  - csharp
  - vb
  name: IgnoreToken
  nameWithType: LexerRuleReturnDecision.IgnoreToken
  fullName: SpiceSharpParser.Lexers.LexerRuleReturnDecision.IgnoreToken
  type: Field
  source:
    remote:
      path: src/SpiceSharpParser/Lexers/LexerRuleReturnDecision.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: IgnoreToken
    path: ../SpiceSharpParser/Lexers/LexerRuleReturnDecision.cs
    startLine: 15
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Lexers
  summary: "\nSpecifies that the token is ignored.\n"
  example: []
  syntax:
    content: IgnoreToken = 1
    return:
      type: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SpiceSharpParser.Lexers
  commentId: N:SpiceSharpParser.Lexers
  name: SpiceSharpParser.Lexers
  nameWithType: SpiceSharpParser.Lexers
  fullName: SpiceSharpParser.Lexers
- uid: SpiceSharpParser.Lexers.LexerRuleReturnDecision
  commentId: T:SpiceSharpParser.Lexers.LexerRuleReturnDecision
  parent: SpiceSharpParser.Lexers
  name: LexerRuleReturnDecision
  nameWithType: LexerRuleReturnDecision
  fullName: SpiceSharpParser.Lexers.LexerRuleReturnDecision
