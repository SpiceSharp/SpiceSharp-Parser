### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  id: ParseTreeNodeEvaluationValues
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  children:
  - SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem(System.Int32)
  - SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber(System.Int32)
  - SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject``1(System.Int32)
  - SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject``1(System.Int32,``0@)
  - SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken(System.Int32,SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken@)
  langs:
  - csharp
  - vb
  name: ParseTreeNodeEvaluationValues
  nameWithType: ParseTreeNodeEvaluationValues
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParseTreeNodeEvaluationValues
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  summary: "\nA collection of <xref href=\"SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue\" data-throw-if-not-resolved=\"false\"></xref> items.\n"
  example: []
  syntax:
    content: 'public class ParseTreeNodeEvaluationValues : List<ParseTreeNodeEvaluationValue>, IList<ParseTreeNodeEvaluationValue>, ICollection<ParseTreeNodeEvaluationValue>, IList, ICollection, IReadOnlyList<ParseTreeNodeEvaluationValue>, IReadOnlyCollection<ParseTreeNodeEvaluationValue>, IEnumerable<ParseTreeNodeEvaluationValue>, IEnumerable'
    content.vb: >-
      Public Class ParseTreeNodeEvaluationValues
          Inherits List(Of ParseTreeNodeEvaluationValue)
          Implements IList(Of ParseTreeNodeEvaluationValue), ICollection(Of ParseTreeNodeEvaluationValue), IList, ICollection, IReadOnlyList(Of ParseTreeNodeEvaluationValue), IReadOnlyCollection(Of ParseTreeNodeEvaluationValue), IEnumerable(Of ParseTreeNodeEvaluationValue), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  implements:
  - System.Collections.Generic.IList{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  - System.Collections.Generic.ICollection{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  - System.Collections.Generic.IReadOnlyCollection{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  - System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Add(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.AddRange(System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.AsReadOnly
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(System.Int32,System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Clear
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Contains(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ConvertAll``1(System.Converter{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,{TOutput}})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[])
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[],System.Int32,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[],System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Exists(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Find(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Int32,System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLast(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Int32,System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ForEach(System.Action{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.GetEnumerator
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Insert(System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Remove(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Reverse
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Comparison{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ToArray
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.TrimExcess
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.TrueForAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Capacity
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Count
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Item(System.Int32)
  - System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem(System.Int32)
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem(System.Int32)
  id: GetLexem(System.Int32)
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  langs:
  - csharp
  - vb
  name: GetLexem(Int32)
  nameWithType: ParseTreeNodeEvaluationValues.GetLexem(Int32)
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem(System.Int32)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetLexem
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
    startLine: 18
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  summary: "\nGets lexem from the <xref href=\"SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public string GetLexem(int index)
    parameters:
    - id: index
      type: System.Int32
      description: An index of the item.
    return:
      type: System.String
      description: "\nA lexem.\n"
    content.vb: Public Function GetLexem(index As Integer) As String
  overload: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber(System.Int32)
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber(System.Int32)
  id: GetLexemLineNumber(System.Int32)
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  langs:
  - csharp
  - vb
  name: GetLexemLineNumber(Int32)
  nameWithType: ParseTreeNodeEvaluationValues.GetLexemLineNumber(Int32)
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber(System.Int32)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetLexemLineNumber
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
    startLine: 35
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  summary: "\nGets line number from the <xref href=\"SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public int GetLexemLineNumber(int index)
    parameters:
    - id: index
      type: System.Int32
      description: An index of the item.
    return:
      type: System.Int32
      description: "\nA line number of the lexem.\n"
    content.vb: Public Function GetLexemLineNumber(index As Integer) As Integer
  overload: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken(System.Int32,SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken@)
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken(System.Int32,SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken@)
  id: TryToGetToken(System.Int32,SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken@)
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  langs:
  - csharp
  - vb
  name: TryToGetToken(Int32, out SpiceToken)
  nameWithType: ParseTreeNodeEvaluationValues.TryToGetToken(Int32, out SpiceToken)
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken(System.Int32, out SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: TryToGetToken
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
    startLine: 53
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  summary: "\nTries to gets a <xref href=\"SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken\" data-throw-if-not-resolved=\"false\"></xref> from specific <xref href=\"SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue\" data-throw-if-not-resolved=\"false\"></xref> item.\n"
  example: []
  syntax:
    content: public bool TryToGetToken(int index, out SpiceToken result)
    parameters:
    - id: index
      type: System.Int32
      description: An index of the item.
    - id: result
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
      description: A SPICE token.
    return:
      type: System.Boolean
      description: "\nTrue if SPICE token can be returned.\n"
    content.vb: Public Function TryToGetToken(index As Integer, ByRef result As SpiceToken) As Boolean
  overload: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken*
  nameWithType.vb: ParseTreeNodeEvaluationValues.TryToGetToken(Int32, ByRef SpiceToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken(System.Int32, ByRef SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken)
  name.vb: TryToGetToken(Int32, ByRef SpiceToken)
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject``1(System.Int32,``0@)
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject``1(System.Int32,``0@)
  id: TryToGetSpiceObject``1(System.Int32,``0@)
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  langs:
  - csharp
  - vb
  name: TryToGetSpiceObject<T>(Int32, out T)
  nameWithType: ParseTreeNodeEvaluationValues.TryToGetSpiceObject<T>(Int32, out T)
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject<T>(System.Int32, out T)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: TryToGetSpiceObject
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
    startLine: 73
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  summary: "\nTries to gets a <xref href=\"SpiceSharpParser.Models.Netlist.Spice.SpiceObject\" data-throw-if-not-resolved=\"false\"></xref> from specific <xref href=\"SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue\" data-throw-if-not-resolved=\"false\"></xref> item.\n"
  example: []
  syntax:
    content: >-
      public bool TryToGetSpiceObject<T>(int index, out T result)
          where T : SpiceObject
    parameters:
    - id: index
      type: System.Int32
      description: An index of the item.
    - id: result
      type: '{T}'
      description: A SPICE token.
    typeParameters:
    - id: T
    return:
      type: System.Boolean
      description: "\nTrue if SPICE token can be returned.\n"
    content.vb: Public Function TryToGetSpiceObject(Of T As SpiceObject)(index As Integer, ByRef result As T) As Boolean
  overload: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject*
  nameWithType.vb: ParseTreeNodeEvaluationValues.TryToGetSpiceObject(Of T)(Int32, ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject(Of T)(System.Int32, ByRef T)
  name.vb: TryToGetSpiceObject(Of T)(Int32, ByRef T)
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject``1(System.Int32)
  commentId: M:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject``1(System.Int32)
  id: GetSpiceObject``1(System.Int32)
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues
  langs:
  - csharp
  - vb
  name: GetSpiceObject<T>(Int32)
  nameWithType: ParseTreeNodeEvaluationValues.GetSpiceObject<T>(Int32)
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject<T>(System.Int32)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: GetSpiceObject
    path: ../SpiceSharpParser/Parsers/Netlist/Spice/Internals/ParseTreeNodeEvaluationValues.cs
    startLine: 94
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  summary: "\nGets a <xref href=\"SpiceSharpParser.Models.Netlist.Spice.SpiceObject\" data-throw-if-not-resolved=\"false\"></xref> from specific <xref href=\"SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue\" data-throw-if-not-resolved=\"false\"></xref> item.\n"
  example: []
  syntax:
    content: >-
      public T GetSpiceObject<T>(int index)
          where T : SpiceObject
    parameters:
    - id: index
      type: System.Int32
      description: An index of the item.
    typeParameters:
    - id: T
      description: Type of <xref href="SpiceSharpParser.Models.Netlist.Spice.SpiceObject" data-throw-if-not-resolved="false"></xref> to look.
    return:
      type: '{T}'
      description: "\nA reference to <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> SPICE object.\n"
    content.vb: Public Function GetSpiceObject(Of T As SpiceObject)(index As Integer) As T
  overload: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject*
  nameWithType.vb: ParseTreeNodeEvaluationValues.GetSpiceObject(Of T)(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject(Of T)(System.Int32)
  name.vb: GetSpiceObject(Of T)(Int32)
references:
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  commentId: T:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  parent: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  name: ParseTreeNodeEvaluationValue
  nameWithType: ParseTreeNodeEvaluationValue
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  commentId: N:SpiceSharpParser.Parsers.Netlist.Spice.Internals
  name: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  nameWithType: SpiceSharpParser.Parsers.Netlist.Spice.Internals
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  commentId: T:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ParseTreeNodeEvaluationValue>
  nameWithType: List<ParseTreeNodeEvaluationValue>
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  name.vb: List(Of ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  commentId: T:System.Collections.Generic.IList{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ParseTreeNodeEvaluationValue>
  nameWithType: IList<ParseTreeNodeEvaluationValue>
  fullName: System.Collections.Generic.IList<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>
  nameWithType.vb: IList(Of ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.IList(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  name.vb: IList(Of ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  commentId: T:System.Collections.Generic.ICollection{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ParseTreeNodeEvaluationValue>
  nameWithType: ICollection<ParseTreeNodeEvaluationValue>
  fullName: System.Collections.Generic.ICollection<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>
  nameWithType.vb: ICollection(Of ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.ICollection(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  name.vb: ICollection(Of ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  commentId: T:System.Collections.Generic.IReadOnlyList{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ParseTreeNodeEvaluationValue>
  nameWithType: IReadOnlyList<ParseTreeNodeEvaluationValue>
  fullName: System.Collections.Generic.IReadOnlyList<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>
  nameWithType.vb: IReadOnlyList(Of ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  name.vb: IReadOnlyList(Of ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ParseTreeNodeEvaluationValue>
  nameWithType: IReadOnlyCollection<ParseTreeNodeEvaluationValue>
  fullName: System.Collections.Generic.IReadOnlyCollection<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>
  nameWithType.vb: IReadOnlyCollection(Of ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  name.vb: IReadOnlyCollection(Of ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  commentId: T:System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ParseTreeNodeEvaluationValue>
  nameWithType: IEnumerable<ParseTreeNodeEvaluationValue>
  fullName: System.Collections.Generic.IEnumerable<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>
  nameWithType.vb: IEnumerable(Of ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  name.vb: IEnumerable(Of ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.get_Item
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.set_Item
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Add(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Add(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Add(`0)
  name: Add(ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Add(ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Add(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Add(ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Add(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<ParseTreeNodeEvaluationValue>.Add
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Add
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Add(Object)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Add
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.AddRange(System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.AddRange(System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.AddRange(IEnumerable<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.AddRange(System.Collections.Generic.IEnumerable<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).AddRange(IEnumerable(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).AddRange(System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: AddRange(IEnumerable(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<ParseTreeNodeEvaluationValue>.AddRange
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of ParseTreeNodeEvaluationValue).AddRange
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.AsReadOnly
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.AsReadOnly
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<ParseTreeNodeEvaluationValue>.AsReadOnly()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.AsReadOnly()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<ParseTreeNodeEvaluationValue>.AsReadOnly
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of ParseTreeNodeEvaluationValue).AsReadOnly
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(System.Int32,System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(System.Int32,System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, ParseTreeNodeEvaluationValue, IComparer<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.BinarySearch(Int32, Int32, ParseTreeNodeEvaluationValue, IComparer<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.BinarySearch(System.Int32, System.Int32, SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Collections.Generic.IComparer<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).BinarySearch(Int32, Int32, ParseTreeNodeEvaluationValue, IComparer(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).BinarySearch(System.Int32, System.Int32, SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Collections.Generic.IComparer(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: BinarySearch(Int32, Int32, ParseTreeNodeEvaluationValue, IComparer(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<ParseTreeNodeEvaluationValue>.BinarySearch
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of ParseTreeNodeEvaluationValue).BinarySearch
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.BinarySearch(ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).BinarySearch(ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<ParseTreeNodeEvaluationValue>.BinarySearch
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of ParseTreeNodeEvaluationValue).BinarySearch
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(ParseTreeNodeEvaluationValue, IComparer<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.BinarySearch(ParseTreeNodeEvaluationValue, IComparer<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Collections.Generic.IComparer<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).BinarySearch(ParseTreeNodeEvaluationValue, IComparer(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).BinarySearch(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Collections.Generic.IComparer(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: BinarySearch(ParseTreeNodeEvaluationValue, IComparer(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<ParseTreeNodeEvaluationValue>.BinarySearch
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of ParseTreeNodeEvaluationValue).BinarySearch
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Clear
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Clear
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<ParseTreeNodeEvaluationValue>.Clear()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Clear()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Clear()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<ParseTreeNodeEvaluationValue>.Clear
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Clear
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Contains(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Contains(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Contains(ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Contains(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Contains(ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Contains(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<ParseTreeNodeEvaluationValue>.Contains
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Contains
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Contains
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ConvertAll``1(System.Converter{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,{TOutput}})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ConvertAll``1(System.Converter{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,``0})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<ParseTreeNodeEvaluationValue, TOutput>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.ConvertAll<TOutput>(Converter<ParseTreeNodeEvaluationValue, TOutput>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.ConvertAll<TOutput>(System.Converter<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, TOutput>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).ConvertAll(Of TOutput)(Converter(Of ParseTreeNodeEvaluationValue, TOutput))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).ConvertAll(Of TOutput)(System.Converter(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of ParseTreeNodeEvaluationValue, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<ParseTreeNodeEvaluationValue>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of ParseTreeNodeEvaluationValue).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[])
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[])
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(ParseTreeNodeEvaluationValue[])
  nameWithType: List<ParseTreeNodeEvaluationValue>.CopyTo(ParseTreeNodeEvaluationValue[])
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[])
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).CopyTo(ParseTreeNodeEvaluationValue())
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue())
  name.vb: CopyTo(ParseTreeNodeEvaluationValue())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<ParseTreeNodeEvaluationValue>.CopyTo
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of ParseTreeNodeEvaluationValue).CopyTo
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<ParseTreeNodeEvaluationValue>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, ParseTreeNodeEvaluationValue[], Int32, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.CopyTo(Int32, ParseTreeNodeEvaluationValue[], Int32, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.CopyTo(System.Int32, SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[], System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).CopyTo(Int32, ParseTreeNodeEvaluationValue(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).CopyTo(System.Int32, SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, ParseTreeNodeEvaluationValue(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<ParseTreeNodeEvaluationValue>.CopyTo
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of ParseTreeNodeEvaluationValue).CopyTo
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[],System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[],System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(ParseTreeNodeEvaluationValue[], Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.CopyTo(ParseTreeNodeEvaluationValue[], Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue[], System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).CopyTo(ParseTreeNodeEvaluationValue(), Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).CopyTo(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue(), System.Int32)
  name.vb: CopyTo(ParseTreeNodeEvaluationValue(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<ParseTreeNodeEvaluationValue>.CopyTo
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of ParseTreeNodeEvaluationValue).CopyTo
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Exists(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Exists(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Exists(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Exists(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Exists(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Exists(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: Exists(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<ParseTreeNodeEvaluationValue>.Exists
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Exists
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Find(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Find(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Find(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Find(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Find(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Find(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: Find(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<ParseTreeNodeEvaluationValue>.Find
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Find
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindAll(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindAll(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindAll(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindAll(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindAll(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindAll
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindAll
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindIndex(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindIndex(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindIndex(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindIndex(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindIndex(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindIndex
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindIndex
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindIndex(Int32, Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindIndex(System.Int32, System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindIndex(Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindIndex(System.Int32, System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindIndex(Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindIndex
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindIndex
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Int32,System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindIndex(System.Int32,System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindIndex(Int32, Int32, Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindIndex(System.Int32, System.Int32, System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindIndex(Int32, Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindIndex(System.Int32, System.Int32, System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindIndex(Int32, Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindIndex
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindIndex
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLast(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLast(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindLast(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLast(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindLast(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLast(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindLast(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindLast
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindLast
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindLastIndex(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLastIndex(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindLastIndex(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLastIndex(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindLastIndex(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindLastIndex
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindLastIndex
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindLastIndex(Int32, Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLastIndex(System.Int32, System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindLastIndex(Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLastIndex(System.Int32, System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindLastIndex(Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindLastIndex
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindLastIndex
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Int32,System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.FindLastIndex(System.Int32,System.Int32,System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.FindLastIndex(Int32, Int32, Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLastIndex(System.Int32, System.Int32, System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).FindLastIndex(Int32, Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<ParseTreeNodeEvaluationValue>.FindLastIndex
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of ParseTreeNodeEvaluationValue).FindLastIndex
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ForEach(System.Action{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ForEach(System.Action{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.ForEach(Action<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.ForEach(System.Action<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).ForEach(Action(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).ForEach(System.Action(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: ForEach(Action(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<ParseTreeNodeEvaluationValue>.ForEach
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of ParseTreeNodeEvaluationValue).ForEach
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.GetEnumerator
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.GetEnumerator
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<ParseTreeNodeEvaluationValue>.GetEnumerator()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.GetEnumerator()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<ParseTreeNodeEvaluationValue>.GetEnumerator
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of ParseTreeNodeEvaluationValue).GetEnumerator
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<ParseTreeNodeEvaluationValue>.GetEnumerator()
  nameWithType: List<ParseTreeNodeEvaluationValue>.IEnumerable<ParseTreeNodeEvaluationValue>.GetEnumerator()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.Generic.IEnumerable<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.GetEnumerator()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<ParseTreeNodeEvaluationValue>.GetEnumerator
    nameWithType: List<ParseTreeNodeEvaluationValue>.IEnumerable<ParseTreeNodeEvaluationValue>.GetEnumerator
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.Generic.IEnumerable<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<ParseTreeNodeEvaluationValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<ParseTreeNodeEvaluationValue>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<ParseTreeNodeEvaluationValue>.GetRange
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of ParseTreeNodeEvaluationValue).GetRange
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IndexOf(ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).IndexOf(ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.IndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).IndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.IndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(ParseTreeNodeEvaluationValue, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IndexOf(ParseTreeNodeEvaluationValue, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).IndexOf(ParseTreeNodeEvaluationValue, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.IndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).IndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(ParseTreeNodeEvaluationValue, Int32, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IndexOf(ParseTreeNodeEvaluationValue, Int32, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).IndexOf(ParseTreeNodeEvaluationValue, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).IndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.IndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).IndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Insert(System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Insert(System.Int32,SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Insert(Int32, ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Insert(System.Int32, SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Insert(Int32, ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Insert(System.Int32, SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<ParseTreeNodeEvaluationValue>.Insert
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Insert
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Insert
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.InsertRange(Int32, IEnumerable<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).InsertRange(Int32, IEnumerable(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: InsertRange(Int32, IEnumerable(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<ParseTreeNodeEvaluationValue>.InsertRange
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of ParseTreeNodeEvaluationValue).InsertRange
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.LastIndexOf(ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).LastIndexOf(ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.LastIndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).LastIndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(ParseTreeNodeEvaluationValue, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.LastIndexOf(ParseTreeNodeEvaluationValue, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).LastIndexOf(ParseTreeNodeEvaluationValue, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.LastIndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).LastIndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(ParseTreeNodeEvaluationValue, Int32, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.LastIndexOf(ParseTreeNodeEvaluationValue, Int32, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).LastIndexOf(ParseTreeNodeEvaluationValue, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).LastIndexOf(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<ParseTreeNodeEvaluationValue>.LastIndexOf
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of ParseTreeNodeEvaluationValue).LastIndexOf
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Remove(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Remove(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(ParseTreeNodeEvaluationValue)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Remove(ParseTreeNodeEvaluationValue)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Remove(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Remove(ParseTreeNodeEvaluationValue)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Remove(SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<ParseTreeNodeEvaluationValue>.Remove
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Remove
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Remove
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.RemoveAll(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.RemoveAll(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).RemoveAll(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).RemoveAll(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: RemoveAll(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<ParseTreeNodeEvaluationValue>.RemoveAll
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of ParseTreeNodeEvaluationValue).RemoveAll
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<ParseTreeNodeEvaluationValue>.RemoveAt
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of ParseTreeNodeEvaluationValue).RemoveAt
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<ParseTreeNodeEvaluationValue>.RemoveRange
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of ParseTreeNodeEvaluationValue).RemoveRange
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Reverse
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Reverse
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<ParseTreeNodeEvaluationValue>.Reverse()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Reverse()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Reverse()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<ParseTreeNodeEvaluationValue>.Reverse
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Reverse
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<ParseTreeNodeEvaluationValue>.Reverse
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Reverse
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<ParseTreeNodeEvaluationValue>.Sort()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Sort()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<ParseTreeNodeEvaluationValue>.Sort
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Sort
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Sort(IComparer<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort(System.Collections.Generic.IComparer<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Sort(IComparer(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort(System.Collections.Generic.IComparer(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: Sort(IComparer(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<ParseTreeNodeEvaluationValue>.Sort
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Sort
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Sort(Int32, Int32, IComparer<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Sort(Int32, Int32, IComparer(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: Sort(Int32, Int32, IComparer(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<ParseTreeNodeEvaluationValue>.Sort
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Sort
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Comparison{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Sort(System.Comparison{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.Sort(Comparison<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort(System.Comparison<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Sort(Comparison(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort(System.Comparison(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: Sort(Comparison(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<ParseTreeNodeEvaluationValue>.Sort
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Sort
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ToArray
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.ToArray
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<ParseTreeNodeEvaluationValue>.ToArray()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.ToArray()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).ToArray()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<ParseTreeNodeEvaluationValue>.ToArray
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of ParseTreeNodeEvaluationValue).ToArray
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.TrimExcess
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.TrimExcess
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<ParseTreeNodeEvaluationValue>.TrimExcess()
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.TrimExcess()
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<ParseTreeNodeEvaluationValue>.TrimExcess
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of ParseTreeNodeEvaluationValue).TrimExcess
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.TrueForAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  commentId: M:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.TrueForAll(System.Predicate{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue})
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<ParseTreeNodeEvaluationValue>)
  nameWithType: List<ParseTreeNodeEvaluationValue>.TrueForAll(Predicate<ParseTreeNodeEvaluationValue>)
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.TrueForAll(System.Predicate<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>)
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).TrueForAll(Predicate(Of ParseTreeNodeEvaluationValue))
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).TrueForAll(System.Predicate(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue))
  name.vb: TrueForAll(Predicate(Of ParseTreeNodeEvaluationValue))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<ParseTreeNodeEvaluationValue>.TrueForAll
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of ParseTreeNodeEvaluationValue).TrueForAll
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
    name: ParseTreeNodeEvaluationValue
    nameWithType: ParseTreeNodeEvaluationValue
    fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Capacity
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Capacity
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<ParseTreeNodeEvaluationValue>.Capacity
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Capacity
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Capacity
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Capacity
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Count
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Count
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<ParseTreeNodeEvaluationValue>.Count
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Count
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Count
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Count
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<ParseTreeNodeEvaluationValue>.IsReadOnly
  nameWithType: List<ParseTreeNodeEvaluationValue>.ICollection<ParseTreeNodeEvaluationValue>.IsReadOnly
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.Generic.ICollection<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.IsReadOnly
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<ParseTreeNodeEvaluationValue>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<ParseTreeNodeEvaluationValue>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.Item(System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: List<ParseTreeNodeEvaluationValue>.Item[Int32]
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Item[System.Int32]
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<ParseTreeNodeEvaluationValue>.Item
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of ParseTreeNodeEvaluationValue).Item
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List{SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<ParseTreeNodeEvaluationValue>.IList.Item
    fullName: System.Collections.Generic.List<SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of ParseTreeNodeEvaluationValue).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValue).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: List<T>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<T>.IList.get_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: List<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<T>.IList.set_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<T>.Add
    fullName: System.Collections.Generic.List<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of T).Add
    fullName: System.Collections.Generic.List(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: List<T>.Item[Int32]
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  nameWithType.vb: List(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<T>.Item
    fullName: System.Collections.Generic.List<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of T).Item
    fullName: System.Collections.Generic.List(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: List<T>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<T>.IList.Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of T).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem
  name: GetLexem
  nameWithType: ParseTreeNodeEvaluationValues.GetLexem
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber
  name: GetLexemLineNumber
  nameWithType: ParseTreeNodeEvaluationValues.GetLexemLineNumber
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetLexemLineNumber
- uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  commentId: T:SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  parent: SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceToken
  nameWithType: SpiceToken
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken
  name: TryToGetToken
  nameWithType: ParseTreeNodeEvaluationValues.TryToGetToken
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetToken
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SpiceSharpParser.Lexers.Netlist.Spice
  commentId: N:SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceSharpParser.Lexers.Netlist.Spice
  nameWithType: SpiceSharpParser.Lexers.Netlist.Spice
  fullName: SpiceSharpParser.Lexers.Netlist.Spice
- uid: SpiceSharpParser.Models.Netlist.Spice.SpiceObject
  commentId: T:SpiceSharpParser.Models.Netlist.Spice.SpiceObject
  parent: SpiceSharpParser.Models.Netlist.Spice
  name: SpiceObject
  nameWithType: SpiceObject
  fullName: SpiceSharpParser.Models.Netlist.Spice.SpiceObject
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject
  name: TryToGetSpiceObject
  nameWithType: ParseTreeNodeEvaluationValues.TryToGetSpiceObject
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.TryToGetSpiceObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: SpiceSharpParser.Models.Netlist.Spice
  commentId: N:SpiceSharpParser.Models.Netlist.Spice
  name: SpiceSharpParser.Models.Netlist.Spice
  nameWithType: SpiceSharpParser.Models.Netlist.Spice
  fullName: SpiceSharpParser.Models.Netlist.Spice
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject
  name: GetSpiceObject
  nameWithType: ParseTreeNodeEvaluationValues.GetSpiceObject
  fullName: SpiceSharpParser.Parsers.Netlist.Spice.Internals.ParseTreeNodeEvaluationValues.GetSpiceObject
