### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  commentId: T:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  id: ParseTreeTerminalNode
  parent: SpiceSharpParser.Parsers.Netlist
  children:
  - SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.#ctor(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken,SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode)
  - SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token
  - SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString
  langs:
  - csharp
  - vb
  name: ParseTreeTerminalNode
  nameWithType: ParseTreeTerminalNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ParseTreeTerminalNode
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nTerminal node in parse tree. It contains a token.\n"
  example: []
  syntax:
    content: 'public class ParseTreeTerminalNode : ParseTreeNode'
    content.vb: >-
      Public Class ParseTreeTerminalNode
          Inherits ParseTreeNode
  inheritance:
  - System.Object
  - SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  inheritedMembers:
  - SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.#ctor(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken,SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode)
  commentId: M:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.#ctor(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken,SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode)
  id: '#ctor(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken,SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode)'
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  langs:
  - csharp
  - vb
  name: ParseTreeTerminalNode(SpiceToken, ParseTreeNonTerminalNode)
  nameWithType: ParseTreeTerminalNode.ParseTreeTerminalNode(SpiceToken, ParseTreeNonTerminalNode)
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ParseTreeTerminalNode(SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken, SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
    startLine: 14
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ParseTreeTerminalNode(SpiceToken token, ParseTreeNonTerminalNode parent)
    parameters:
    - id: token
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
      description: A token for the terminal node.
    - id: parent
      type: SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode
      description: A parent of the terminal node.
    content.vb: Public Sub New(token As SpiceToken, parent As ParseTreeNonTerminalNode)
  overload: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token
  commentId: P:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token
  id: Token
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: ParseTreeTerminalNode.Token
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Token
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
    startLine: 28
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nGets the token for the node.\n"
  example: []
  syntax:
    content: public SpiceToken Token { get; }
    parameters: []
    return:
      type: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
    content.vb: Public ReadOnly Property Token As SpiceToken
  overload: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString
  commentId: M:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString
  id: ToString
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ParseTreeTerminalNode.ToString()
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString()
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ToString
    path: ../SpiceSharpParser/Parsers/Netlist/ParseTreeTerminalNode.cs
    startLine: 36
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.Parsers.Netlist
  summary: "\nReturns a string representation of the parse tree node.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string representation of the terminal node.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SpiceSharpParser.Parsers.Netlist
  commentId: N:SpiceSharpParser.Parsers.Netlist
  name: SpiceSharpParser.Parsers.Netlist
  nameWithType: SpiceSharpParser.Parsers.Netlist
  fullName: SpiceSharpParser.Parsers.Netlist
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  commentId: T:SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  parent: SpiceSharpParser.Parsers.Netlist
  name: ParseTreeNode
  nameWithType: ParseTreeNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  commentId: P:SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
  parent: SpiceSharpParser.Parsers.Netlist.ParseTreeNode
  name: Parent
  nameWithType: ParseTreeNode.Parent
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNode.Parent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  commentId: T:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
  name: ParseTreeTerminalNode
  nameWithType: ParseTreeTerminalNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.#ctor*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.#ctor
  name: ParseTreeTerminalNode
  nameWithType: ParseTreeTerminalNode.ParseTreeTerminalNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ParseTreeTerminalNode
- uid: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  commentId: T:SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
  parent: SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceToken
  nameWithType: SpiceToken
  fullName: SpiceSharpParser.Lexers.Netlist.Spice.SpiceToken
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode
  commentId: T:SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode
  parent: SpiceSharpParser.Parsers.Netlist
  name: ParseTreeNonTerminalNode
  nameWithType: ParseTreeNonTerminalNode
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeNonTerminalNode
- uid: SpiceSharpParser.Lexers.Netlist.Spice
  commentId: N:SpiceSharpParser.Lexers.Netlist.Spice
  name: SpiceSharpParser.Lexers.Netlist.Spice
  nameWithType: SpiceSharpParser.Lexers.Netlist.Spice
  fullName: SpiceSharpParser.Lexers.Netlist.Spice
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token
  name: Token
  nameWithType: ParseTreeTerminalNode.Token
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.Token
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString*
  commentId: Overload:SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString
  name: ToString
  nameWithType: ParseTreeTerminalNode.ToString
  fullName: SpiceSharpParser.Parsers.Netlist.ParseTreeTerminalNode.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
