### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  id: XyPlot
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.#ctor(System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series
  langs:
  - csharp
  - vb
  name: XyPlot
  nameWithType: XyPlot
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: XyPlot
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
    startLine: 7
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  summary: "\nData for plot with data series.\n"
  example: []
  syntax:
    content: public class XyPlot
    content.vb: Public Class XyPlot
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.#ctor(System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  langs:
  - csharp
  - vb
  name: XyPlot(String)
  nameWithType: XyPlot.XyPlot(String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.XyPlot(System.String)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
    startLine: 13
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  summary: "\nInitializes a new instance of the <xref href=\"SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public XyPlot(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of plot.
    content.vb: Public Sub New(name As String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name
  id: Name
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XyPlot.Name
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Name
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
    startLine: 22
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  summary: "\nGets the name of the plot.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series
  id: Series
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  langs:
  - csharp
  - vb
  name: Series
  nameWithType: XyPlot.Series
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Series
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Readers/Controls/Plots/XyPlot.cs
    startLine: 27
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  summary: "\nGets the series in the plot.\n"
  example: []
  syntax:
    content: public List<Series> Series { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series}
    content.vb: Public ReadOnly Property Series As List(Of Series)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots
  name: XyPlot
  nameWithType: XyPlot
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.#ctor
  name: XyPlot
  nameWithType: XyPlot.XyPlot
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.XyPlot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name
  name: Name
  nameWithType: XyPlot.Name
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Name
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series
  name: Series
  nameWithType: XyPlot.Series
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.XyPlot.Series
- uid: System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series}
  commentId: T:System.Collections.Generic.List{SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Series>
  nameWithType: List<Series>
  fullName: System.Collections.Generic.List<SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series>
  nameWithType.vb: List(Of Series)
  fullName.vb: System.Collections.Generic.List(Of SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series)
  name.vb: List(Of Series)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series
    name: Series
    nameWithType: Series
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series
    name: Series
    nameWithType: Series
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Readers.Controls.Plots.Series
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
