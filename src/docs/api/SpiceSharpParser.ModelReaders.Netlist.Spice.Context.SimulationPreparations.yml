### YamlMime:ManagedReference
items:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  id: SimulationPreparations
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  children:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage(System.String,System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage(System.String,System.String)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates
  langs:
  - csharp
  - vb
  name: SimulationPreparations
  nameWithType: SimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  type: Class
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationPreparations
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 9
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: 'public class SimulationPreparations : ISimulationPreparations'
    content.vb: >-
      Public Class SimulationPreparations
          Implements ISimulationPreparations
  inheritance:
  - System.Object
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates)
  id: '#ctor(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates,SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates)'
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SimulationPreparations(EntityUpdates, SimulationsUpdates)
  nameWithType: SimulationPreparations.SimulationPreparations(EntityUpdates, SimulationsUpdates)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationPreparations(SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates, SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates)
  type: Constructor
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: .ctor
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 11
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public SimulationPreparations(EntityUpdates entityUpdates, SimulationsUpdates simulationUpdates)
    parameters:
    - id: entityUpdates
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates
    - id: simulationUpdates
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
    content.vb: Public Sub New(entityUpdates As EntityUpdates, simulationUpdates As SimulationsUpdates)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates
  id: EntityUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: EntityUpdates
  nameWithType: SimulationPreparations.EntityUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: EntityUpdates
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 19
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: protected EntityUpdates EntityUpdates { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates
    content.vb: Protected ReadOnly Property EntityUpdates As EntityUpdates
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates
  id: SimulationUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SimulationUpdates
  nameWithType: SimulationPreparations.SimulationUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SimulationUpdates
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 21
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: protected SimulationsUpdates SimulationUpdates { get; }
    parameters: []
    return:
      type: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
    content.vb: Protected ReadOnly Property SimulationUpdates As SimulationsUpdates
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup
  id: BeforeSetup
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: BeforeSetup
  nameWithType: SimulationPreparations.BeforeSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: BeforeSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 23
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: protected List<Action<BaseSimulation>> BeforeSetup { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Action{SpiceSharp.Simulations.BaseSimulation}}
    content.vb: Protected ReadOnly Property BeforeSetup As List(Of Action(Of BaseSimulation))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup
  commentId: P:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup
  id: AfterSetup
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: AfterSetup
  nameWithType: SimulationPreparations.AfterSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup
  type: Property
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: AfterSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 25
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: protected List<Action<BaseSimulation>> AfterSetup { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Action{SpiceSharp.Simulations.BaseSimulation}}
    content.vb: Protected ReadOnly Property AfterSetup As List(Of Action(Of BaseSimulation))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  id: Prepare(SpiceSharp.Simulations.BaseSimulation)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: Prepare(BaseSimulation)
  nameWithType: SimulationPreparations.Prepare(BaseSimulation)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: Prepare
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 27
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void Prepare(BaseSimulation simulation)
    parameters:
    - id: simulation
      type: SpiceSharp.Simulations.BaseSimulation
    content.vb: Public Sub Prepare(simulation As BaseSimulation)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage(System.String,System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage(System.String,System.String)
  id: SetNodeSetVoltage(System.String,System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SetNodeSetVoltage(String, String)
  nameWithType: SimulationPreparations.SetNodeSetVoltage(String, String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetNodeSetVoltage
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 54
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetNodeSetVoltage(string nodeId, string expression)
    parameters:
    - id: nodeId
      type: System.String
    - id: expression
      type: System.String
    content.vb: Public Sub SetNodeSetVoltage(nodeId As String, expression As String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage(System.String,System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage(System.String,System.String)
  id: SetICVoltage(System.String,System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SetICVoltage(String, String)
  nameWithType: SimulationPreparations.SetICVoltage(String, String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetICVoltage
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 75
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetICVoltage(string nodeId, string expression)
    parameters:
    - id: nodeId
      type: System.String
    - id: expression
      type: System.String
    content.vb: Public Sub SetICVoltage(nodeId As String, expression As String)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  id: ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: ExecuteTemperatureBehaviorBeforeLoad(Entity)
  nameWithType: SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(Entity)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ExecuteTemperatureBehaviorBeforeLoad
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 99
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void ExecuteTemperatureBehaviorBeforeLoad(Entity entity)
    parameters:
    - id: entity
      type: SpiceSharp.Circuits.Entity
    content.vb: Public Sub ExecuteTemperatureBehaviorBeforeLoad(entity As Entity)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  id: ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: ExecuteActionBeforeSetup(Action<BaseSimulation>)
  nameWithType: SimulationPreparations.ExecuteActionBeforeSetup(Action<BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup(System.Action<SpiceSharp.Simulations.BaseSimulation>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ExecuteActionBeforeSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 119
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void ExecuteActionBeforeSetup(Action<BaseSimulation> action)
    parameters:
    - id: action
      type: System.Action{SpiceSharp.Simulations.BaseSimulation}
    content.vb: Public Sub ExecuteActionBeforeSetup(action As Action(Of BaseSimulation))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  nameWithType.vb: SimulationPreparations.ExecuteActionBeforeSetup(Action(Of BaseSimulation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup(System.Action(Of SpiceSharp.Simulations.BaseSimulation))
  name.vb: ExecuteActionBeforeSetup(Action(Of BaseSimulation))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  id: ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: ExecuteActionAfterSetup(Action<BaseSimulation>)
  nameWithType: SimulationPreparations.ExecuteActionAfterSetup(Action<BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup(System.Action<SpiceSharp.Simulations.BaseSimulation>)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: ExecuteActionAfterSetup
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 124
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void ExecuteActionAfterSetup(Action<BaseSimulation> action)
    parameters:
    - id: action
      type: System.Action{SpiceSharp.Simulations.BaseSimulation}
    content.vb: Public Sub ExecuteActionAfterSetup(action As Action(Of BaseSimulation))
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  nameWithType.vb: SimulationPreparations.ExecuteActionAfterSetup(Action(Of BaseSimulation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup(System.Action(Of SpiceSharp.Simulations.BaseSimulation))
  name.vb: ExecuteActionAfterSetup(Action(Of BaseSimulation))
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  id: SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SetParameter(Entity, String, String, Boolean, Boolean)
  nameWithType: SimulationPreparations.SetParameter(Entity, String, String, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity, System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetParameter
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 129
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetParameter(Entity object, string paramName, string expression, bool beforeTemperature, bool onload)
    parameters:
    - id: object
      type: SpiceSharp.Circuits.Entity
    - id: paramName
      type: System.String
    - id: expression
      type: System.String
    - id: beforeTemperature
      type: System.Boolean
    - id: onload
      type: System.Boolean
    content.vb: Public Sub SetParameter(object As Entity, paramName As String, expression As String, beforeTemperature As Boolean, onload As Boolean)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  id: SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SetParameter(Entity, String, Double, Boolean, Boolean)
  nameWithType: SimulationPreparations.SetParameter(Entity, String, Double, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity, System.String, System.Double, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetParameter
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 148
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetParameter(Entity object, string paramName, double value, bool beforeTemperature, bool onload)
    parameters:
    - id: object
      type: SpiceSharp.Circuits.Entity
    - id: paramName
      type: System.String
    - id: value
      type: System.Double
    - id: beforeTemperature
      type: System.Boolean
    - id: onload
      type: System.Boolean
    content.vb: Public Sub SetParameter(object As Entity, paramName As String, value As Double, beforeTemperature As Boolean, onload As Boolean)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  id: SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations
  langs:
  - csharp
  - vb
  name: SetParameter(Entity, BaseSimulation, String, Double, Boolean, Boolean)
  nameWithType: SimulationPreparations.SetParameter(Entity, BaseSimulation, String, Double, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity, SpiceSharp.Simulations.BaseSimulation, System.String, System.Double, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
      branch: master
      repo: https://github.com/marcin-golebiowski/SpiceSharpParser.git
    id: SetParameter
    path: ../SpiceSharpParser/ModelReaders/Netlist/Spice/Context/SimulationPreparations.cs
    startLine: 163
  assemblies:
  - SpiceSharpParser
  namespace: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  syntax:
    content: public void SetParameter(Entity object, BaseSimulation simulation, string paramName, double value, bool beforeTemperature, bool onload)
    parameters:
    - id: object
      type: SpiceSharp.Circuits.Entity
    - id: simulation
      type: SpiceSharp.Simulations.BaseSimulation
    - id: paramName
      type: System.String
    - id: value
      type: System.Double
    - id: beforeTemperature
      type: System.Boolean
    - id: onload
      type: System.Boolean
    content.vb: Public Sub SetParameter(object As Entity, simulation As BaseSimulation, paramName As String, value As Double, beforeTemperature As Boolean, onload As Boolean)
  overload: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter*
  implements:
  - SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context
  name: ISimulationPreparations
  nameWithType: ISimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.#ctor*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.#ctor
  name: SimulationPreparations
  nameWithType: SimulationPreparations.SimulationPreparations
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationPreparations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  name: EntityUpdates
  nameWithType: EntityUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.EntityUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  commentId: T:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  name: SimulationsUpdates
  nameWithType: SimulationsUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates.SimulationsUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  commentId: N:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  name: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  nameWithType: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.Updates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates
  name: EntityUpdates
  nameWithType: SimulationPreparations.EntityUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.EntityUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates
  name: SimulationUpdates
  nameWithType: SimulationPreparations.SimulationUpdates
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SimulationUpdates
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup
  name: BeforeSetup
  nameWithType: SimulationPreparations.BeforeSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.BeforeSetup
- uid: System.Collections.Generic.List{System.Action{SpiceSharp.Simulations.BaseSimulation}}
  commentId: T:System.Collections.Generic.List{System.Action{SpiceSharp.Simulations.BaseSimulation}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Action<BaseSimulation>>
  nameWithType: List<Action<BaseSimulation>>
  fullName: System.Collections.Generic.List<System.Action<SpiceSharp.Simulations.BaseSimulation>>
  nameWithType.vb: List(Of Action(Of BaseSimulation))
  fullName.vb: System.Collections.Generic.List(Of System.Action(Of SpiceSharp.Simulations.BaseSimulation))
  name.vb: List(Of Action(Of BaseSimulation))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup
  name: AfterSetup
  nameWithType: SimulationPreparations.AfterSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.AfterSetup
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare
  name: Prepare
  nameWithType: SimulationPreparations.Prepare
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.Prepare
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: Prepare(BaseSimulation)
  nameWithType: ISimulationPreparations.Prepare(BaseSimulation)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
    name: Prepare
    nameWithType: ISimulationPreparations.Prepare
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare(SpiceSharp.Simulations.BaseSimulation)
    name: Prepare
    nameWithType: ISimulationPreparations.Prepare
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.Prepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Simulations.BaseSimulation
  commentId: T:SpiceSharp.Simulations.BaseSimulation
  parent: SpiceSharp.Simulations
  isExternal: true
  name: BaseSimulation
  nameWithType: BaseSimulation
  fullName: SpiceSharp.Simulations.BaseSimulation
- uid: SpiceSharp.Simulations
  commentId: N:SpiceSharp.Simulations
  isExternal: true
  name: SpiceSharp.Simulations
  nameWithType: SpiceSharp.Simulations
  fullName: SpiceSharp.Simulations
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage
  name: SetNodeSetVoltage
  nameWithType: SimulationPreparations.SetNodeSetVoltage
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetNodeSetVoltage
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage(System.String,System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage(System.String,System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: SetNodeSetVoltage(String, String)
  nameWithType: ISimulationPreparations.SetNodeSetVoltage(String, String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage(System.String, System.String)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage(System.String,System.String)
    name: SetNodeSetVoltage
    nameWithType: ISimulationPreparations.SetNodeSetVoltage
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage(System.String,System.String)
    name: SetNodeSetVoltage
    nameWithType: ISimulationPreparations.SetNodeSetVoltage
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetNodeSetVoltage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage
  name: SetICVoltage
  nameWithType: SimulationPreparations.SetICVoltage
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetICVoltage
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage(System.String,System.String)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage(System.String,System.String)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: SetICVoltage(String, String)
  nameWithType: ISimulationPreparations.SetICVoltage(String, String)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage(System.String, System.String)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage(System.String,System.String)
    name: SetICVoltage
    nameWithType: ISimulationPreparations.SetICVoltage
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage(System.String,System.String)
    name: SetICVoltage
    nameWithType: ISimulationPreparations.SetICVoltage
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetICVoltage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
  name: ExecuteTemperatureBehaviorBeforeLoad
  nameWithType: SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: ExecuteTemperatureBehaviorBeforeLoad(Entity)
  nameWithType: ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(Entity)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
    name: ExecuteTemperatureBehaviorBeforeLoad
    nameWithType: ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad(SpiceSharp.Circuits.Entity)
    name: ExecuteTemperatureBehaviorBeforeLoad
    nameWithType: ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteTemperatureBehaviorBeforeLoad
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharp.Circuits.Entity
  commentId: T:SpiceSharp.Circuits.Entity
  parent: SpiceSharp.Circuits
  isExternal: true
  name: Entity
  nameWithType: Entity
  fullName: SpiceSharp.Circuits.Entity
- uid: SpiceSharp.Circuits
  commentId: N:SpiceSharp.Circuits
  isExternal: true
  name: SpiceSharp.Circuits
  nameWithType: SpiceSharp.Circuits
  fullName: SpiceSharp.Circuits
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup
  name: ExecuteActionBeforeSetup
  nameWithType: SimulationPreparations.ExecuteActionBeforeSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionBeforeSetup
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: ExecuteActionBeforeSetup(Action<BaseSimulation>)
  nameWithType: ISimulationPreparations.ExecuteActionBeforeSetup(Action<BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action<SpiceSharp.Simulations.BaseSimulation>)
  nameWithType.vb: ISimulationPreparations.ExecuteActionBeforeSetup(Action(Of BaseSimulation))
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action(Of SpiceSharp.Simulations.BaseSimulation))
  name.vb: ExecuteActionBeforeSetup(Action(Of BaseSimulation))
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
    name: ExecuteActionBeforeSetup
    nameWithType: ISimulationPreparations.ExecuteActionBeforeSetup
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
    name: ExecuteActionBeforeSetup
    nameWithType: ISimulationPreparations.ExecuteActionBeforeSetup
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionBeforeSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{SpiceSharp.Simulations.BaseSimulation}
  commentId: T:System.Action{SpiceSharp.Simulations.BaseSimulation}
  parent: System
  definition: System.Action`1
  name: Action<BaseSimulation>
  nameWithType: Action<BaseSimulation>
  fullName: System.Action<SpiceSharp.Simulations.BaseSimulation>
  nameWithType.vb: Action(Of BaseSimulation)
  fullName.vb: System.Action(Of SpiceSharp.Simulations.BaseSimulation)
  name.vb: Action(Of BaseSimulation)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup
  name: ExecuteActionAfterSetup
  nameWithType: SimulationPreparations.ExecuteActionAfterSetup
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.ExecuteActionAfterSetup
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: ExecuteActionAfterSetup(Action<BaseSimulation>)
  nameWithType: ISimulationPreparations.ExecuteActionAfterSetup(Action<BaseSimulation>)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action<SpiceSharp.Simulations.BaseSimulation>)
  nameWithType.vb: ISimulationPreparations.ExecuteActionAfterSetup(Action(Of BaseSimulation))
  fullName.vb: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action(Of SpiceSharp.Simulations.BaseSimulation))
  name.vb: ExecuteActionAfterSetup(Action(Of BaseSimulation))
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
    name: ExecuteActionAfterSetup
    nameWithType: ISimulationPreparations.ExecuteActionAfterSetup
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup(System.Action{SpiceSharp.Simulations.BaseSimulation})
    name: ExecuteActionAfterSetup
    nameWithType: ISimulationPreparations.ExecuteActionAfterSetup
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.ExecuteActionAfterSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter*
  commentId: Overload:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter
  name: SetParameter
  nameWithType: SimulationPreparations.SetParameter
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.SimulationPreparations.SetParameter
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: SetParameter(Entity, String, String, Boolean, Boolean)
  nameWithType: ISimulationPreparations.SetParameter(Entity, String, String, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity, System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ISimulationPreparations.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.String,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ISimulationPreparations.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: SetParameter(Entity, String, Double, Boolean, Boolean)
  nameWithType: ISimulationPreparations.SetParameter(Entity, String, Double, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity, System.String, System.Double, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ISimulationPreparations.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,System.String,System.Double,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ISimulationPreparations.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  commentId: M:SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
  parent: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations
  isExternal: true
  name: SetParameter(Entity, BaseSimulation, String, Double, Boolean, Boolean)
  nameWithType: ISimulationPreparations.SetParameter(Entity, BaseSimulation, String, Double, Boolean, Boolean)
  fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity, SpiceSharp.Simulations.BaseSimulation, System.String, System.Double, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ISimulationPreparations.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter(SpiceSharp.Circuits.Entity,SpiceSharp.Simulations.BaseSimulation,System.String,System.Double,System.Boolean,System.Boolean)
    name: SetParameter
    nameWithType: ISimulationPreparations.SetParameter
    fullName: SpiceSharpParser.ModelReaders.Netlist.Spice.Context.ISimulationPreparations.SetParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: SpiceSharp.Circuits.Entity
    name: Entity
    nameWithType: Entity
    fullName: SpiceSharp.Circuits.Entity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SpiceSharp.Simulations.BaseSimulation
    name: BaseSimulation
    nameWithType: BaseSimulation
    fullName: SpiceSharp.Simulations.BaseSimulation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
